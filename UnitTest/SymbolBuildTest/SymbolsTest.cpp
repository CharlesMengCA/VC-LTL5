#pragma warning(disable : 4483)
namespace SymbolsTest {
extern "C" extern void* __identifier("__conio_common_vcprintf");
extern "C" extern void* __identifier("_imp____conio_common_vcprintf");
extern "C" extern void* __identifier("__conio_common_vcprintf_p");
extern "C" extern void* __identifier("_imp____conio_common_vcprintf_p");
extern "C" extern void* __identifier("__conio_common_vcprintf_s");
extern "C" extern void* __identifier("_imp____conio_common_vcprintf_s");
extern "C" extern void* __identifier("__conio_common_vcwprintf");
extern "C" extern void* __identifier("_imp____conio_common_vcwprintf");
extern "C" extern void* __identifier("__conio_common_vcwprintf_p");
extern "C" extern void* __identifier("_imp____conio_common_vcwprintf_p");
extern "C" extern void* __identifier("__conio_common_vcwprintf_s");
extern "C" extern void* __identifier("_imp____conio_common_vcwprintf_s");
extern "C" extern void* __identifier("_cgets");
extern "C" extern void* __identifier("_imp___cgets");
extern "C" extern void* __identifier("_cgets_s");
extern "C" extern void* __identifier("_imp___cgets_s");
extern "C" extern void* __identifier("_cgetws");
extern "C" extern void* __identifier("_imp___cgetws");
extern "C" extern void* __identifier("_cgetws_s");
extern "C" extern void* __identifier("_imp___cgetws_s");
extern "C" extern void* __identifier("_cputs");
extern "C" extern void* __identifier("_imp___cputs");
extern "C" extern void* __identifier("_cputws");
extern "C" extern void* __identifier("_imp___cputws");
extern "C" extern void* __identifier("_getch");
extern "C" extern void* __identifier("_imp___getch");
extern "C" extern void* __identifier("_getche");
extern "C" extern void* __identifier("_imp___getche");
extern "C" extern void* __identifier("_getwch");
extern "C" extern void* __identifier("_imp___getwch");
extern "C" extern void* __identifier("_getwche");
extern "C" extern void* __identifier("_imp___getwche");
extern "C" extern void* __identifier("_putch");
extern "C" extern void* __identifier("_imp___putch");
extern "C" extern void* __identifier("_putwch");
extern "C" extern void* __identifier("_imp___putwch");
extern "C" extern void* __identifier("_ungetch");
extern "C" extern void* __identifier("_imp___ungetch");
extern "C" extern void* __identifier("_ungetwch");
extern "C" extern void* __identifier("_imp___ungetwch");
extern "C" extern void* __identifier("__toascii");
extern "C" extern void* __identifier("_imp____toascii");
extern "C" extern void* __identifier("_atodbl");
extern "C" extern void* __identifier("_imp___atodbl");
extern "C" extern void* __identifier("_atodbl_l");
extern "C" extern void* __identifier("_imp___atodbl_l");
extern "C" extern void* __identifier("_atof_l");
extern "C" extern void* __identifier("_imp___atof_l");
extern "C" extern void* __identifier("_atoflt");
extern "C" extern void* __identifier("_imp___atoflt");
extern "C" extern void* __identifier("_atoflt_l");
extern "C" extern void* __identifier("_imp___atoflt_l");
extern "C" extern void* __identifier("_atoi64");
extern "C" extern void* __identifier("_imp___atoi64");
extern "C" extern void* __identifier("_atoi64_l");
extern "C" extern void* __identifier("_imp___atoi64_l");
extern "C" extern void* __identifier("_atoi_l");
extern "C" extern void* __identifier("_imp___atoi_l");
extern "C" extern void* __identifier("_atol_l");
extern "C" extern void* __identifier("_imp___atol_l");
extern "C" extern void* __identifier("_atoldbl");
extern "C" extern void* __identifier("_imp___atoldbl");
extern "C" extern void* __identifier("_atoldbl_l");
extern "C" extern void* __identifier("_imp___atoldbl_l");
extern "C" extern void* __identifier("_atoll_l");
extern "C" extern void* __identifier("_imp___atoll_l");
extern "C" extern void* __identifier("_ecvt");
extern "C" extern void* __identifier("_imp___ecvt");
extern "C" extern void* __identifier("_ecvt_s");
extern "C" extern void* __identifier("_imp___ecvt_s");
extern "C" extern void* __identifier("_fcvt");
extern "C" extern void* __identifier("_imp___fcvt");
extern "C" extern void* __identifier("_fcvt_s");
extern "C" extern void* __identifier("_imp___fcvt_s");
extern "C" extern void* __identifier("_gcvt");
extern "C" extern void* __identifier("_imp___gcvt");
extern "C" extern void* __identifier("_gcvt_s");
extern "C" extern void* __identifier("_imp___gcvt_s");
extern "C" extern void* __identifier("_i64toa");
extern "C" extern void* __identifier("_imp___i64toa");
extern "C" extern void* __identifier("_i64toa_s");
extern "C" extern void* __identifier("_imp___i64toa_s");
extern "C" extern void* __identifier("_i64tow");
extern "C" extern void* __identifier("_imp___i64tow");
extern "C" extern void* __identifier("_i64tow_s");
extern "C" extern void* __identifier("_imp___i64tow_s");
extern "C" extern void* __identifier("_itoa");
extern "C" extern void* __identifier("_imp___itoa");
extern "C" extern void* __identifier("_itoa_s");
extern "C" extern void* __identifier("_imp___itoa_s");
extern "C" extern void* __identifier("_itow");
extern "C" extern void* __identifier("_imp___itow");
extern "C" extern void* __identifier("_itow_s");
extern "C" extern void* __identifier("_imp___itow_s");
extern "C" extern void* __identifier("_ltoa");
extern "C" extern void* __identifier("_imp___ltoa");
extern "C" extern void* __identifier("_ltoa_s");
extern "C" extern void* __identifier("_imp___ltoa_s");
extern "C" extern void* __identifier("_ltow");
extern "C" extern void* __identifier("_imp___ltow");
extern "C" extern void* __identifier("_ltow_s");
extern "C" extern void* __identifier("_imp___ltow_s");
extern "C" extern void* __identifier("_strtod_l");
extern "C" extern void* __identifier("_imp___strtod_l");
extern "C" extern void* __identifier("_strtof_l");
extern "C" extern void* __identifier("_imp___strtof_l");
extern "C" extern void* __identifier("_strtoi64");
extern "C" extern void* __identifier("_imp___strtoi64");
extern "C" extern void* __identifier("_strtoi64_l");
extern "C" extern void* __identifier("_imp___strtoi64_l");
extern "C" extern void* __identifier("_strtoimax_l");
extern "C" extern void* __identifier("_imp___strtoimax_l");
extern "C" extern void* __identifier("_strtol_l");
extern "C" extern void* __identifier("_imp___strtol_l");
extern "C" extern void* __identifier("_strtold_l");
extern "C" extern void* __identifier("_imp___strtold_l");
extern "C" extern void* __identifier("_strtoll_l");
extern "C" extern void* __identifier("_imp___strtoll_l");
extern "C" extern void* __identifier("_strtoui64");
extern "C" extern void* __identifier("_imp___strtoui64");
extern "C" extern void* __identifier("_strtoui64_l");
extern "C" extern void* __identifier("_imp___strtoui64_l");
extern "C" extern void* __identifier("_strtoul_l");
extern "C" extern void* __identifier("_imp___strtoul_l");
extern "C" extern void* __identifier("_strtoull_l");
extern "C" extern void* __identifier("_imp___strtoull_l");
extern "C" extern void* __identifier("_strtoumax_l");
extern "C" extern void* __identifier("_imp___strtoumax_l");
extern "C" extern void* __identifier("_ui64toa");
extern "C" extern void* __identifier("_imp___ui64toa");
extern "C" extern void* __identifier("_ui64toa_s");
extern "C" extern void* __identifier("_imp___ui64toa_s");
extern "C" extern void* __identifier("_ui64tow");
extern "C" extern void* __identifier("_imp___ui64tow");
extern "C" extern void* __identifier("_ui64tow_s");
extern "C" extern void* __identifier("_imp___ui64tow_s");
extern "C" extern void* __identifier("_ultoa");
extern "C" extern void* __identifier("_imp___ultoa");
extern "C" extern void* __identifier("_ultoa_s");
extern "C" extern void* __identifier("_imp___ultoa_s");
extern "C" extern void* __identifier("_ultow");
extern "C" extern void* __identifier("_imp___ultow");
extern "C" extern void* __identifier("_ultow_s");
extern "C" extern void* __identifier("_imp___ultow_s");
extern "C" extern void* __identifier("_wcstod_l");
extern "C" extern void* __identifier("_imp___wcstod_l");
extern "C" extern void* __identifier("_wcstof_l");
extern "C" extern void* __identifier("_imp___wcstof_l");
extern "C" extern void* __identifier("_wcstoi64");
extern "C" extern void* __identifier("_imp___wcstoi64");
extern "C" extern void* __identifier("_wcstoi64_l");
extern "C" extern void* __identifier("_imp___wcstoi64_l");
extern "C" extern void* __identifier("_wcstoimax_l");
extern "C" extern void* __identifier("_imp___wcstoimax_l");
extern "C" extern void* __identifier("_wcstol_l");
extern "C" extern void* __identifier("_imp___wcstol_l");
extern "C" extern void* __identifier("_wcstold_l");
extern "C" extern void* __identifier("_imp___wcstold_l");
extern "C" extern void* __identifier("_wcstoll_l");
extern "C" extern void* __identifier("_imp___wcstoll_l");
extern "C" extern void* __identifier("_wcstombs_l");
extern "C" extern void* __identifier("_imp___wcstombs_l");
extern "C" extern void* __identifier("_wcstombs_s_l");
extern "C" extern void* __identifier("_imp___wcstombs_s_l");
extern "C" extern void* __identifier("_wcstoui64");
extern "C" extern void* __identifier("_imp___wcstoui64");
extern "C" extern void* __identifier("_wcstoui64_l");
extern "C" extern void* __identifier("_imp___wcstoui64_l");
extern "C" extern void* __identifier("_wcstoul_l");
extern "C" extern void* __identifier("_imp___wcstoul_l");
extern "C" extern void* __identifier("_wcstoull_l");
extern "C" extern void* __identifier("_imp___wcstoull_l");
extern "C" extern void* __identifier("_wcstoumax_l");
extern "C" extern void* __identifier("_imp___wcstoumax_l");
extern "C" extern void* __identifier("_wctomb_l");
extern "C" extern void* __identifier("_imp___wctomb_l");
extern "C" extern void* __identifier("_wctomb_s_l");
extern "C" extern void* __identifier("_imp___wctomb_s_l");
extern "C" extern void* __identifier("_wtof");
extern "C" extern void* __identifier("_imp___wtof");
extern "C" extern void* __identifier("_wtof_l");
extern "C" extern void* __identifier("_imp___wtof_l");
extern "C" extern void* __identifier("_wtoi");
extern "C" extern void* __identifier("_imp___wtoi");
extern "C" extern void* __identifier("_wtoi64");
extern "C" extern void* __identifier("_imp___wtoi64");
extern "C" extern void* __identifier("_wtoi64_l");
extern "C" extern void* __identifier("_imp___wtoi64_l");
extern "C" extern void* __identifier("_wtoi_l");
extern "C" extern void* __identifier("_imp___wtoi_l");
extern "C" extern void* __identifier("_wtol");
extern "C" extern void* __identifier("_imp___wtol");
extern "C" extern void* __identifier("_wtol_l");
extern "C" extern void* __identifier("_imp___wtol_l");
extern "C" extern void* __identifier("_wtoll");
extern "C" extern void* __identifier("_imp___wtoll");
extern "C" extern void* __identifier("_wtoll_l");
extern "C" extern void* __identifier("_imp___wtoll_l");
extern "C" extern void* __identifier("atof");
extern "C" extern void* __identifier("_imp__atof");
extern "C" extern void* __identifier("atoi");
extern "C" extern void* __identifier("_imp__atoi");
extern "C" extern void* __identifier("atol");
extern "C" extern void* __identifier("_imp__atol");
extern "C" extern void* __identifier("atoll");
extern "C" extern void* __identifier("_imp__atoll");
extern "C" extern void* __identifier("btowc");
extern "C" extern void* __identifier("_imp__btowc");
extern "C" extern void* __identifier("c16rtomb");
extern "C" extern void* __identifier("_imp__c16rtomb");
extern "C" extern void* __identifier("c32rtomb");
extern "C" extern void* __identifier("_imp__c32rtomb");
extern "C" extern void* __identifier("mbrtoc16");
extern "C" extern void* __identifier("_imp__mbrtoc16");
extern "C" extern void* __identifier("mbrtoc32");
extern "C" extern void* __identifier("_imp__mbrtoc32");
extern "C" extern void* __identifier("mbrtowc");
extern "C" extern void* __identifier("_imp__mbrtowc");
extern "C" extern void* __identifier("mbsrtowcs");
extern "C" extern void* __identifier("_imp__mbsrtowcs");
extern "C" extern void* __identifier("mbsrtowcs_s");
extern "C" extern void* __identifier("_imp__mbsrtowcs_s");
extern "C" extern void* __identifier("mbstowcs");
extern "C" extern void* __identifier("_imp__mbstowcs");
extern "C" extern void* __identifier("mbstowcs_s");
extern "C" extern void* __identifier("_imp__mbstowcs_s");
extern "C" extern void* __identifier("mbtowc");
extern "C" extern void* __identifier("_imp__mbtowc");
extern "C" extern void* __identifier("strtod");
extern "C" extern void* __identifier("_imp__strtod");
extern "C" extern void* __identifier("strtof");
extern "C" extern void* __identifier("_imp__strtof");
extern "C" extern void* __identifier("strtoimax");
extern "C" extern void* __identifier("_imp__strtoimax");
extern "C" extern void* __identifier("strtol");
extern "C" extern void* __identifier("_imp__strtol");
extern "C" extern void* __identifier("strtold");
extern "C" extern void* __identifier("_imp__strtold");
extern "C" extern void* __identifier("strtoll");
extern "C" extern void* __identifier("_imp__strtoll");
extern "C" extern void* __identifier("strtoul");
extern "C" extern void* __identifier("_imp__strtoul");
extern "C" extern void* __identifier("strtoull");
extern "C" extern void* __identifier("_imp__strtoull");
extern "C" extern void* __identifier("strtoumax");
extern "C" extern void* __identifier("_imp__strtoumax");
extern "C" extern void* __identifier("wcrtomb");
extern "C" extern void* __identifier("_imp__wcrtomb");
extern "C" extern void* __identifier("wcrtomb_s");
extern "C" extern void* __identifier("_imp__wcrtomb_s");
extern "C" extern void* __identifier("wcsrtombs");
extern "C" extern void* __identifier("_imp__wcsrtombs");
extern "C" extern void* __identifier("wcsrtombs_s");
extern "C" extern void* __identifier("_imp__wcsrtombs_s");
extern "C" extern void* __identifier("wcstod");
extern "C" extern void* __identifier("_imp__wcstod");
extern "C" extern void* __identifier("wcstof");
extern "C" extern void* __identifier("_imp__wcstof");
extern "C" extern void* __identifier("wcstoimax");
extern "C" extern void* __identifier("_imp__wcstoimax");
extern "C" extern void* __identifier("wcstol");
extern "C" extern void* __identifier("_imp__wcstol");
extern "C" extern void* __identifier("wcstold");
extern "C" extern void* __identifier("_imp__wcstold");
extern "C" extern void* __identifier("wcstoll");
extern "C" extern void* __identifier("_imp__wcstoll");
extern "C" extern void* __identifier("wcstombs");
extern "C" extern void* __identifier("_imp__wcstombs");
extern "C" extern void* __identifier("wcstombs_s");
extern "C" extern void* __identifier("_imp__wcstombs_s");
extern "C" extern void* __identifier("wcstoul");
extern "C" extern void* __identifier("_imp__wcstoul");
extern "C" extern void* __identifier("wcstoull");
extern "C" extern void* __identifier("_imp__wcstoull");
extern "C" extern void* __identifier("wcstoumax");
extern "C" extern void* __identifier("_imp__wcstoumax");
extern "C" extern void* __identifier("wctob");
extern "C" extern void* __identifier("_imp__wctob");
extern "C" extern void* __identifier("wctomb");
extern "C" extern void* __identifier("_imp__wctomb");
extern "C" extern void* __identifier("wctomb_s");
extern "C" extern void* __identifier("_imp__wctomb_s");
extern "C" extern void* __identifier("wctrans");
extern "C" extern void* __identifier("_imp__wctrans");
extern "C" extern void* __identifier("__p__environ");
extern "C" extern void* __identifier("_imp____p__environ");
extern "C" extern void* __identifier("__p__wenviron");
extern "C" extern void* __identifier("_imp____p__wenviron");
extern "C" extern void* __identifier("_dupenv_s");
extern "C" extern void* __identifier("_imp___dupenv_s");
extern "C" extern void* __identifier("_putenv");
extern "C" extern void* __identifier("_imp___putenv");
extern "C" extern void* __identifier("_putenv_s");
extern "C" extern void* __identifier("_imp___putenv_s");
extern "C" extern void* __identifier("_searchenv");
extern "C" extern void* __identifier("_imp___searchenv");
extern "C" extern void* __identifier("_searchenv_s");
extern "C" extern void* __identifier("_imp___searchenv_s");
extern "C" extern void* __identifier("_wdupenv_s");
extern "C" extern void* __identifier("_imp___wdupenv_s");
extern "C" extern void* __identifier("_wgetcwd");
extern "C" extern void* __identifier("_imp___wgetcwd");
extern "C" extern void* __identifier("_wgetdcwd");
extern "C" extern void* __identifier("_imp___wgetdcwd");
extern "C" extern void* __identifier("_wgetenv");
extern "C" extern void* __identifier("_imp___wgetenv");
extern "C" extern void* __identifier("_wgetenv_s");
extern "C" extern void* __identifier("_imp___wgetenv_s");
extern "C" extern void* __identifier("_wputenv");
extern "C" extern void* __identifier("_imp___wputenv");
extern "C" extern void* __identifier("_wputenv_s");
extern "C" extern void* __identifier("_imp___wputenv_s");
extern "C" extern void* __identifier("_wsearchenv");
extern "C" extern void* __identifier("_imp___wsearchenv");
extern "C" extern void* __identifier("_wsearchenv_s");
extern "C" extern void* __identifier("_imp___wsearchenv_s");
extern "C" extern void* __identifier("getenv");
extern "C" extern void* __identifier("_imp__getenv");
extern "C" extern void* __identifier("getenv_s");
extern "C" extern void* __identifier("_imp__getenv_s");
extern "C" extern void* __identifier("_access");
extern "C" extern void* __identifier("_imp___access");
extern "C" extern void* __identifier("_access_s");
extern "C" extern void* __identifier("_imp___access_s");
extern "C" extern void* __identifier("_chdir");
extern "C" extern void* __identifier("_imp___chdir");
extern "C" extern void* __identifier("_chdrive");
extern "C" extern void* __identifier("_imp___chdrive");
extern "C" extern void* __identifier("_chmod");
extern "C" extern void* __identifier("_imp___chmod");
extern "C" extern void* __identifier("_findclose");
extern "C" extern void* __identifier("_imp___findclose");
extern "C" extern void* __identifier("_findfirst32");
extern "C" extern void* __identifier("_imp___findfirst32");
extern "C" extern void* __identifier("_findfirst32i64");
extern "C" extern void* __identifier("_imp___findfirst32i64");
extern "C" extern void* __identifier("_findfirst64");
extern "C" extern void* __identifier("_imp___findfirst64");
extern "C" extern void* __identifier("_findfirst64i32");
extern "C" extern void* __identifier("_imp___findfirst64i32");
extern "C" extern void* __identifier("_findnext32");
extern "C" extern void* __identifier("_imp___findnext32");
extern "C" extern void* __identifier("_findnext32i64");
extern "C" extern void* __identifier("_imp___findnext32i64");
extern "C" extern void* __identifier("_findnext64");
extern "C" extern void* __identifier("_imp___findnext64");
extern "C" extern void* __identifier("_findnext64i32");
extern "C" extern void* __identifier("_imp___findnext64i32");
extern "C" extern void* __identifier("_fstat32");
extern "C" extern void* __identifier("_imp___fstat32");
extern "C" extern void* __identifier("_fstat32i64");
extern "C" extern void* __identifier("_imp___fstat32i64");
extern "C" extern void* __identifier("_fstat64");
extern "C" extern void* __identifier("_imp___fstat64");
extern "C" extern void* __identifier("_fstat64i32");
extern "C" extern void* __identifier("_imp___fstat64i32");
extern "C" extern void* __identifier("_fullpath");
extern "C" extern void* __identifier("_imp___fullpath");
extern "C" extern void* __identifier("_getdiskfree");
extern "C" extern void* __identifier("_imp___getdiskfree");
extern "C" extern void* __identifier("_getdrive");
extern "C" extern void* __identifier("_imp___getdrive");
extern "C" extern void* __identifier("_getdrives");
extern "C" extern void* __identifier("_imp___getdrives");
extern "C" extern void* __identifier("_lock_file");
extern "C" extern void* __identifier("_imp___lock_file");
extern "C" extern void* __identifier("_makepath");
extern "C" extern void* __identifier("_imp___makepath");
extern "C" extern void* __identifier("_makepath_s");
extern "C" extern void* __identifier("_imp___makepath_s");
extern "C" extern void* __identifier("_mkdir");
extern "C" extern void* __identifier("_imp___mkdir");
extern "C" extern void* __identifier("_rmdir");
extern "C" extern void* __identifier("_imp___rmdir");
extern "C" extern void* __identifier("_splitpath");
extern "C" extern void* __identifier("_imp___splitpath");
extern "C" extern void* __identifier("_splitpath_s");
extern "C" extern void* __identifier("_imp___splitpath_s");
extern "C" extern void* __identifier("_stat32");
extern "C" extern void* __identifier("_imp___stat32");
extern "C" extern void* __identifier("_stat32i64");
extern "C" extern void* __identifier("_imp___stat32i64");
extern "C" extern void* __identifier("_stat64");
extern "C" extern void* __identifier("_imp___stat64");
extern "C" extern void* __identifier("_stat64i32");
extern "C" extern void* __identifier("_imp___stat64i32");
extern "C" extern void* __identifier("_umask");
extern "C" extern void* __identifier("_imp___umask");
extern "C" extern void* __identifier("_umask_s");
extern "C" extern void* __identifier("_imp___umask_s");
extern "C" extern void* __identifier("_unlink");
extern "C" extern void* __identifier("_imp___unlink");
extern "C" extern void* __identifier("_unlock_file");
extern "C" extern void* __identifier("_imp___unlock_file");
extern "C" extern void* __identifier("_waccess");
extern "C" extern void* __identifier("_imp___waccess");
extern "C" extern void* __identifier("_waccess_s");
extern "C" extern void* __identifier("_imp___waccess_s");
extern "C" extern void* __identifier("_wchdir");
extern "C" extern void* __identifier("_imp___wchdir");
extern "C" extern void* __identifier("_wchmod");
extern "C" extern void* __identifier("_imp___wchmod");
extern "C" extern void* __identifier("_wfindfirst32");
extern "C" extern void* __identifier("_imp___wfindfirst32");
extern "C" extern void* __identifier("_wfindfirst32i64");
extern "C" extern void* __identifier("_imp___wfindfirst32i64");
extern "C" extern void* __identifier("_wfindfirst64");
extern "C" extern void* __identifier("_imp___wfindfirst64");
extern "C" extern void* __identifier("_wfindfirst64i32");
extern "C" extern void* __identifier("_imp___wfindfirst64i32");
extern "C" extern void* __identifier("_wfindnext32");
extern "C" extern void* __identifier("_imp___wfindnext32");
extern "C" extern void* __identifier("_wfindnext32i64");
extern "C" extern void* __identifier("_imp___wfindnext32i64");
extern "C" extern void* __identifier("_wfindnext64");
extern "C" extern void* __identifier("_imp___wfindnext64");
extern "C" extern void* __identifier("_wfindnext64i32");
extern "C" extern void* __identifier("_imp___wfindnext64i32");
extern "C" extern void* __identifier("_wfullpath");
extern "C" extern void* __identifier("_imp___wfullpath");
extern "C" extern void* __identifier("_wmakepath");
extern "C" extern void* __identifier("_imp___wmakepath");
extern "C" extern void* __identifier("_wmakepath_s");
extern "C" extern void* __identifier("_imp___wmakepath_s");
extern "C" extern void* __identifier("_wmkdir");
extern "C" extern void* __identifier("_imp___wmkdir");
extern "C" extern void* __identifier("_wremove");
extern "C" extern void* __identifier("_imp___wremove");
extern "C" extern void* __identifier("_wrename");
extern "C" extern void* __identifier("_imp___wrename");
extern "C" extern void* __identifier("_wrmdir");
extern "C" extern void* __identifier("_imp___wrmdir");
extern "C" extern void* __identifier("_wsplitpath");
extern "C" extern void* __identifier("_imp___wsplitpath");
extern "C" extern void* __identifier("_wsplitpath_s");
extern "C" extern void* __identifier("_imp___wsplitpath_s");
extern "C" extern void* __identifier("_wstat32");
extern "C" extern void* __identifier("_imp___wstat32");
extern "C" extern void* __identifier("_wstat32i64");
extern "C" extern void* __identifier("_imp___wstat32i64");
extern "C" extern void* __identifier("_wstat64");
extern "C" extern void* __identifier("_imp___wstat64");
extern "C" extern void* __identifier("_wstat64i32");
extern "C" extern void* __identifier("_imp___wstat64i32");
extern "C" extern void* __identifier("_wunlink");
extern "C" extern void* __identifier("_imp___wunlink");
extern "C" extern void* __identifier("remove");
extern "C" extern void* __identifier("_imp__remove");
extern "C" extern void* __identifier("rename");
extern "C" extern void* __identifier("_imp__rename");
extern "C" extern void* __identifier("_aligned_free");
extern "C" extern void* __identifier("_imp___aligned_free");
extern "C" extern void* __identifier("_aligned_malloc");
extern "C" extern void* __identifier("_imp___aligned_malloc");
extern "C" extern void* __identifier("_aligned_msize");
extern "C" extern void* __identifier("_imp___aligned_msize");
extern "C" extern void* __identifier("_aligned_offset_malloc");
extern "C" extern void* __identifier("_imp___aligned_offset_malloc");
extern "C" extern void* __identifier("_aligned_offset_realloc");
extern "C" extern void* __identifier("_imp___aligned_offset_realloc");
extern "C" extern void* __identifier("_aligned_offset_recalloc");
extern "C" extern void* __identifier("_imp___aligned_offset_recalloc");
extern "C" extern void* __identifier("_aligned_realloc");
extern "C" extern void* __identifier("_imp___aligned_realloc");
extern "C" extern void* __identifier("_aligned_recalloc");
extern "C" extern void* __identifier("_imp___aligned_recalloc");
extern "C" extern void* __identifier("_callnewh");
extern "C" extern void* __identifier("_imp___callnewh");
extern "C" extern void* __identifier("_calloc_base");
extern "C" extern void* __identifier("_imp___calloc_base");
extern "C" extern void* __identifier("_expand");
extern "C" extern void* __identifier("_imp___expand");
extern "C" extern void* __identifier("_free_base");
extern "C" extern void* __identifier("_imp___free_base");
extern "C" extern void* __identifier("_get_heap_handle");
extern "C" extern void* __identifier("_imp___get_heap_handle");
extern "C" extern void* __identifier("_heapchk");
extern "C" extern void* __identifier("_imp___heapchk");
extern "C" extern void* __identifier("_heapmin");
extern "C" extern void* __identifier("_imp___heapmin");
extern "C" extern void* __identifier("_heapwalk");
extern "C" extern void* __identifier("_imp___heapwalk");
extern "C" extern void* __identifier("_malloc_base");
extern "C" extern void* __identifier("_imp___malloc_base");
extern "C" extern void* __identifier("_msize");
extern "C" extern void* __identifier("_imp___msize");
extern "C" extern void* __identifier("_query_new_handler");
extern "C" extern void* __identifier("_imp___query_new_handler");
extern "C" extern void* __identifier("_query_new_mode");
extern "C" extern void* __identifier("_imp___query_new_mode");
extern "C" extern void* __identifier("_realloc_base");
extern "C" extern void* __identifier("_imp___realloc_base");
extern "C" extern void* __identifier("_recalloc");
extern "C" extern void* __identifier("_imp___recalloc");
extern "C" extern void* __identifier("_set_new_mode");
extern "C" extern void* __identifier("_imp___set_new_mode");
extern "C" extern void* __identifier("calloc");
extern "C" extern void* __identifier("_imp__calloc");
extern "C" extern void* __identifier("free");
extern "C" extern void* __identifier("_imp__free");
extern "C" extern void* __identifier("malloc");
extern "C" extern void* __identifier("_imp__malloc");
extern "C" extern void* __identifier("realloc");
extern "C" extern void* __identifier("_imp__realloc");
extern "C" extern void* __identifier("___lc_codepage_func");
extern "C" extern void* __identifier("_imp_____lc_codepage_func");
extern "C" extern void* __identifier("___lc_collate_cp_func");
extern "C" extern void* __identifier("_imp_____lc_collate_cp_func");
extern "C" extern void* __identifier("___lc_locale_name_func");
extern "C" extern void* __identifier("_imp_____lc_locale_name_func");
extern "C" extern void* __identifier("___mb_cur_max_func");
extern "C" extern void* __identifier("_imp_____mb_cur_max_func");
extern "C" extern void* __identifier("___mb_cur_max_l_func");
extern "C" extern void* __identifier("_imp_____mb_cur_max_l_func");
extern "C" extern void* __identifier("__pctype_func");
extern "C" extern void* __identifier("_imp____pctype_func");
extern "C" extern void* __identifier("__pwctype_func");
extern "C" extern void* __identifier("_imp____pwctype_func");
extern "C" extern void* __identifier("_configthreadlocale");
extern "C" extern void* __identifier("_imp___configthreadlocale");
extern "C" extern void* __identifier("_create_locale");
extern "C" extern void* __identifier("_imp___create_locale");
extern "C" extern void* __identifier("_free_locale");
extern "C" extern void* __identifier("_imp___free_locale");
extern "C" extern void* __identifier("_get_current_locale");
extern "C" extern void* __identifier("_imp___get_current_locale");
extern "C" extern void* __identifier("_getmbcp");
extern "C" extern void* __identifier("_imp___getmbcp");
extern "C" extern void* __identifier("_lock_locales");
extern "C" extern void* __identifier("_imp___lock_locales");
extern "C" extern void* __identifier("_setmbcp");
extern "C" extern void* __identifier("_imp___setmbcp");
extern "C" extern void* __identifier("_unlock_locales");
extern "C" extern void* __identifier("_imp___unlock_locales");
extern "C" extern void* __identifier("_wcreate_locale");
extern "C" extern void* __identifier("_imp___wcreate_locale");
extern "C" extern void* __identifier("_wsetlocale");
extern "C" extern void* __identifier("_imp___wsetlocale");
extern "C" extern void* __identifier("localeconv");
extern "C" extern void* __identifier("_imp__localeconv");
extern "C" extern void* __identifier("setlocale");
extern "C" extern void* __identifier("_imp__setlocale");
extern "C" extern void* __identifier("_CIacos");
extern "C" extern void* __identifier("_imp___CIacos");
extern "C" extern void* __identifier("_CIasin");
extern "C" extern void* __identifier("_imp___CIasin");
extern "C" extern void* __identifier("_CIatan");
extern "C" extern void* __identifier("_imp___CIatan");
extern "C" extern void* __identifier("_CIatan2");
extern "C" extern void* __identifier("_imp___CIatan2");
extern "C" extern void* __identifier("_CIcos");
extern "C" extern void* __identifier("_imp___CIcos");
extern "C" extern void* __identifier("_CIcosh");
extern "C" extern void* __identifier("_imp___CIcosh");
extern "C" extern void* __identifier("_CIexp");
extern "C" extern void* __identifier("_imp___CIexp");
extern "C" extern void* __identifier("_CIfmod");
extern "C" extern void* __identifier("_imp___CIfmod");
extern "C" extern void* __identifier("_CIlog");
extern "C" extern void* __identifier("_imp___CIlog");
extern "C" extern void* __identifier("_CIlog10");
extern "C" extern void* __identifier("_imp___CIlog10");
extern "C" extern void* __identifier("_CIpow");
extern "C" extern void* __identifier("_imp___CIpow");
extern "C" extern void* __identifier("_CIsin");
extern "C" extern void* __identifier("_imp___CIsin");
extern "C" extern void* __identifier("_CIsinh");
extern "C" extern void* __identifier("_imp___CIsinh");
extern "C" extern void* __identifier("_CIsqrt");
extern "C" extern void* __identifier("_imp___CIsqrt");
extern "C" extern void* __identifier("_CItan");
extern "C" extern void* __identifier("_imp___CItan");
extern "C" extern void* __identifier("_CItanh");
extern "C" extern void* __identifier("_imp___CItanh");
extern "C" extern void* __identifier("_Cbuild");
extern "C" extern void* __identifier("_imp___Cbuild");
extern "C" extern void* __identifier("_Cmulcc");
extern "C" extern void* __identifier("_imp___Cmulcc");
extern "C" extern void* __identifier("_Cmulcr");
extern "C" extern void* __identifier("_imp___Cmulcr");
extern "C" extern void* __identifier("_FCbuild");
extern "C" extern void* __identifier("_imp___FCbuild");
extern "C" extern void* __identifier("_FCmulcc");
extern "C" extern void* __identifier("_imp___FCmulcc");
extern "C" extern void* __identifier("_FCmulcr");
extern "C" extern void* __identifier("_imp___FCmulcr");
extern "C" extern void* __identifier("_LCbuild");
extern "C" extern void* __identifier("_imp___LCbuild");
extern "C" extern void* __identifier("_LCmulcc");
extern "C" extern void* __identifier("_imp___LCmulcc");
extern "C" extern void* __identifier("_LCmulcr");
extern "C" extern void* __identifier("_imp___LCmulcr");
extern "C" extern void* __identifier("__libm_sse2_acos");
extern "C" extern void* __identifier("_imp____libm_sse2_acos");
extern "C" extern void* __identifier("__libm_sse2_acosf");
extern "C" extern void* __identifier("_imp____libm_sse2_acosf");
extern "C" extern void* __identifier("__libm_sse2_asin");
extern "C" extern void* __identifier("_imp____libm_sse2_asin");
extern "C" extern void* __identifier("__libm_sse2_asinf");
extern "C" extern void* __identifier("_imp____libm_sse2_asinf");
extern "C" extern void* __identifier("__libm_sse2_atan");
extern "C" extern void* __identifier("_imp____libm_sse2_atan");
extern "C" extern void* __identifier("__libm_sse2_atan2");
extern "C" extern void* __identifier("_imp____libm_sse2_atan2");
extern "C" extern void* __identifier("__libm_sse2_atanf");
extern "C" extern void* __identifier("_imp____libm_sse2_atanf");
extern "C" extern void* __identifier("__libm_sse2_cos");
extern "C" extern void* __identifier("_imp____libm_sse2_cos");
extern "C" extern void* __identifier("__libm_sse2_cosf");
extern "C" extern void* __identifier("_imp____libm_sse2_cosf");
extern "C" extern void* __identifier("__libm_sse2_exp");
extern "C" extern void* __identifier("_imp____libm_sse2_exp");
extern "C" extern void* __identifier("__libm_sse2_expf");
extern "C" extern void* __identifier("_imp____libm_sse2_expf");
extern "C" extern void* __identifier("__libm_sse2_log");
extern "C" extern void* __identifier("_imp____libm_sse2_log");
extern "C" extern void* __identifier("__libm_sse2_log10");
extern "C" extern void* __identifier("_imp____libm_sse2_log10");
extern "C" extern void* __identifier("__libm_sse2_log10f");
extern "C" extern void* __identifier("_imp____libm_sse2_log10f");
extern "C" extern void* __identifier("__libm_sse2_logf");
extern "C" extern void* __identifier("_imp____libm_sse2_logf");
extern "C" extern void* __identifier("__libm_sse2_pow");
extern "C" extern void* __identifier("_imp____libm_sse2_pow");
extern "C" extern void* __identifier("__libm_sse2_powf");
extern "C" extern void* __identifier("_imp____libm_sse2_powf");
extern "C" extern void* __identifier("__libm_sse2_sin");
extern "C" extern void* __identifier("_imp____libm_sse2_sin");
extern "C" extern void* __identifier("__libm_sse2_sinf");
extern "C" extern void* __identifier("_imp____libm_sse2_sinf");
extern "C" extern void* __identifier("__libm_sse2_tan");
extern "C" extern void* __identifier("_imp____libm_sse2_tan");
extern "C" extern void* __identifier("__libm_sse2_tanf");
extern "C" extern void* __identifier("_imp____libm_sse2_tanf");
extern "C" extern void* __identifier("__setusermatherr");
extern "C" extern void* __identifier("_imp____setusermatherr");
extern "C" extern void* __identifier("_cabs");
extern "C" extern void* __identifier("_imp___cabs");
extern "C" extern void* __identifier("_chgsign");
extern "C" extern void* __identifier("_imp___chgsign");
extern "C" extern void* __identifier("_chgsignf");
extern "C" extern void* __identifier("_imp___chgsignf");
extern "C" extern void* __identifier("_copysign");
extern "C" extern void* __identifier("_imp___copysign");
extern "C" extern void* __identifier("_copysignf");
extern "C" extern void* __identifier("_imp___copysignf");
extern "C" extern void* __identifier("_d_int");
extern "C" extern void* __identifier("_imp___d_int");
extern "C" extern void* __identifier("_dclass");
extern "C" extern void* __identifier("_imp___dclass");
extern "C" extern void* __identifier("_dexp");
extern "C" extern void* __identifier("_imp___dexp");
extern "C" extern void* __identifier("_dlog");
extern "C" extern void* __identifier("_imp___dlog");
extern "C" extern void* __identifier("_dnorm");
extern "C" extern void* __identifier("_imp___dnorm");
extern "C" extern void* __identifier("_dpcomp");
extern "C" extern void* __identifier("_imp___dpcomp");
extern "C" extern void* __identifier("_dpoly");
extern "C" extern void* __identifier("_imp___dpoly");
extern "C" extern void* __identifier("_dscale");
extern "C" extern void* __identifier("_imp___dscale");
extern "C" extern void* __identifier("_dsign");
extern "C" extern void* __identifier("_imp___dsign");
extern "C" extern void* __identifier("_dsin");
extern "C" extern void* __identifier("_imp___dsin");
extern "C" extern void* __identifier("_dtest");
extern "C" extern void* __identifier("_imp___dtest");
extern "C" extern void* __identifier("_dunscale");
extern "C" extern void* __identifier("_imp___dunscale");
extern "C" extern void* __identifier("_except1");
extern "C" extern void* __identifier("_imp___except1");
extern "C" extern void* __identifier("_fd_int");
extern "C" extern void* __identifier("_imp___fd_int");
extern "C" extern void* __identifier("_fdclass");
extern "C" extern void* __identifier("_imp___fdclass");
extern "C" extern void* __identifier("_fdexp");
extern "C" extern void* __identifier("_imp___fdexp");
extern "C" extern void* __identifier("_fdlog");
extern "C" extern void* __identifier("_imp___fdlog");
extern "C" extern void* __identifier("_fdnorm");
extern "C" extern void* __identifier("_imp___fdnorm");
extern "C" extern void* __identifier("_fdopen");
extern "C" extern void* __identifier("_imp___fdopen");
extern "C" extern void* __identifier("_fdpcomp");
extern "C" extern void* __identifier("_imp___fdpcomp");
extern "C" extern void* __identifier("_fdpoly");
extern "C" extern void* __identifier("_imp___fdpoly");
extern "C" extern void* __identifier("_fdscale");
extern "C" extern void* __identifier("_imp___fdscale");
extern "C" extern void* __identifier("_fdsign");
extern "C" extern void* __identifier("_imp___fdsign");
extern "C" extern void* __identifier("_fdsin");
extern "C" extern void* __identifier("_imp___fdsin");
extern "C" extern void* __identifier("_fdtest");
extern "C" extern void* __identifier("_imp___fdtest");
extern "C" extern void* __identifier("_fdunscale");
extern "C" extern void* __identifier("_imp___fdunscale");
extern "C" extern void* __identifier("_finite");
extern "C" extern void* __identifier("_imp___finite");
extern "C" extern void* __identifier("_fpclass");
extern "C" extern void* __identifier("_imp___fpclass");
extern "C" extern void* __identifier("_ftol");
extern "C" extern void* __identifier("_imp___ftol");
extern "C" extern void* __identifier("_hypot");
extern "C" extern void* __identifier("_imp___hypot");
extern "C" extern void* __identifier("_hypotf");
extern "C" extern void* __identifier("_imp___hypotf");
extern "C" extern void* __identifier("_isnan");
extern "C" extern void* __identifier("_imp___isnan");
extern "C" extern void* __identifier("_j0");
extern "C" extern void* __identifier("_imp___j0");
extern "C" extern void* __identifier("_j1");
extern "C" extern void* __identifier("_imp___j1");
extern "C" extern void* __identifier("_jn");
extern "C" extern void* __identifier("_imp___jn");
extern "C" extern void* __identifier("_ld_int");
extern "C" extern void* __identifier("_imp___ld_int");
extern "C" extern void* __identifier("_ldclass");
extern "C" extern void* __identifier("_imp___ldclass");
extern "C" extern void* __identifier("_ldexp");
extern "C" extern void* __identifier("_imp___ldexp");
extern "C" extern void* __identifier("_ldlog");
extern "C" extern void* __identifier("_imp___ldlog");
extern "C" extern void* __identifier("_ldpcomp");
extern "C" extern void* __identifier("_imp___ldpcomp");
extern "C" extern void* __identifier("_ldpoly");
extern "C" extern void* __identifier("_imp___ldpoly");
extern "C" extern void* __identifier("_ldscale");
extern "C" extern void* __identifier("_imp___ldscale");
extern "C" extern void* __identifier("_ldsign");
extern "C" extern void* __identifier("_imp___ldsign");
extern "C" extern void* __identifier("_ldsin");
extern "C" extern void* __identifier("_imp___ldsin");
extern "C" extern void* __identifier("_ldtest");
extern "C" extern void* __identifier("_imp___ldtest");
extern "C" extern void* __identifier("_ldunscale");
extern "C" extern void* __identifier("_imp___ldunscale");
extern "C" extern void* __identifier("_libm_sse2_acos_precise");
extern "C" extern void* __identifier("_imp___libm_sse2_acos_precise");
extern "C" extern void* __identifier("_libm_sse2_asin_precise");
extern "C" extern void* __identifier("_imp___libm_sse2_asin_precise");
extern "C" extern void* __identifier("_libm_sse2_atan_precise");
extern "C" extern void* __identifier("_imp___libm_sse2_atan_precise");
extern "C" extern void* __identifier("_libm_sse2_cos_precise");
extern "C" extern void* __identifier("_imp___libm_sse2_cos_precise");
extern "C" extern void* __identifier("_libm_sse2_exp_precise");
extern "C" extern void* __identifier("_imp___libm_sse2_exp_precise");
extern "C" extern void* __identifier("_libm_sse2_log10_precise");
extern "C" extern void* __identifier("_imp___libm_sse2_log10_precise");
extern "C" extern void* __identifier("_libm_sse2_log_precise");
extern "C" extern void* __identifier("_imp___libm_sse2_log_precise");
extern "C" extern void* __identifier("_libm_sse2_pow_precise");
extern "C" extern void* __identifier("_imp___libm_sse2_pow_precise");
extern "C" extern void* __identifier("_libm_sse2_sin_precise");
extern "C" extern void* __identifier("_imp___libm_sse2_sin_precise");
extern "C" extern void* __identifier("_libm_sse2_sqrt_precise");
extern "C" extern void* __identifier("_imp___libm_sse2_sqrt_precise");
extern "C" extern void* __identifier("_libm_sse2_tan_precise");
extern "C" extern void* __identifier("_imp___libm_sse2_tan_precise");
extern "C" extern void* __identifier("_logb");
extern "C" extern void* __identifier("_imp___logb");
extern "C" extern void* __identifier("_nextafter");
extern "C" extern void* __identifier("_imp___nextafter");
extern "C" extern void* __identifier("_scalb");
extern "C" extern void* __identifier("_imp___scalb");
extern "C" extern void* __identifier("_set_SSE2_enable");
extern "C" extern void* __identifier("_imp___set_SSE2_enable");
extern "C" extern void* __identifier("_y0");
extern "C" extern void* __identifier("_imp___y0");
extern "C" extern void* __identifier("_y1");
extern "C" extern void* __identifier("_imp___y1");
extern "C" extern void* __identifier("_yn");
extern "C" extern void* __identifier("_imp___yn");
extern "C" extern void* __identifier("acos");
extern "C" extern void* __identifier("_imp__acos");
extern "C" extern void* __identifier("acosh");
extern "C" extern void* __identifier("_imp__acosh");
extern "C" extern void* __identifier("acoshf");
extern "C" extern void* __identifier("_imp__acoshf");
extern "C" extern void* __identifier("acoshl");
extern "C" extern void* __identifier("_imp__acoshl");
extern "C" extern void* __identifier("asin");
extern "C" extern void* __identifier("_imp__asin");
extern "C" extern void* __identifier("asinh");
extern "C" extern void* __identifier("_imp__asinh");
extern "C" extern void* __identifier("asinhf");
extern "C" extern void* __identifier("_imp__asinhf");
extern "C" extern void* __identifier("asinhl");
extern "C" extern void* __identifier("_imp__asinhl");
extern "C" extern void* __identifier("atan");
extern "C" extern void* __identifier("_imp__atan");
extern "C" extern void* __identifier("atan2");
extern "C" extern void* __identifier("_imp__atan2");
extern "C" extern void* __identifier("atanh");
extern "C" extern void* __identifier("_imp__atanh");
extern "C" extern void* __identifier("atanhf");
extern "C" extern void* __identifier("_imp__atanhf");
extern "C" extern void* __identifier("atanhl");
extern "C" extern void* __identifier("_imp__atanhl");
extern "C" extern void* __identifier("cabs");
extern "C" extern void* __identifier("_imp__cabs");
extern "C" extern void* __identifier("cabsf");
extern "C" extern void* __identifier("_imp__cabsf");
extern "C" extern void* __identifier("cabsl");
extern "C" extern void* __identifier("_imp__cabsl");
extern "C" extern void* __identifier("cacos");
extern "C" extern void* __identifier("_imp__cacos");
extern "C" extern void* __identifier("cacosf");
extern "C" extern void* __identifier("_imp__cacosf");
extern "C" extern void* __identifier("cacosh");
extern "C" extern void* __identifier("_imp__cacosh");
extern "C" extern void* __identifier("cacoshf");
extern "C" extern void* __identifier("_imp__cacoshf");
extern "C" extern void* __identifier("cacoshl");
extern "C" extern void* __identifier("_imp__cacoshl");
extern "C" extern void* __identifier("cacosl");
extern "C" extern void* __identifier("_imp__cacosl");
extern "C" extern void* __identifier("carg");
extern "C" extern void* __identifier("_imp__carg");
extern "C" extern void* __identifier("cargf");
extern "C" extern void* __identifier("_imp__cargf");
extern "C" extern void* __identifier("cargl");
extern "C" extern void* __identifier("_imp__cargl");
extern "C" extern void* __identifier("casin");
extern "C" extern void* __identifier("_imp__casin");
extern "C" extern void* __identifier("casinf");
extern "C" extern void* __identifier("_imp__casinf");
extern "C" extern void* __identifier("casinh");
extern "C" extern void* __identifier("_imp__casinh");
extern "C" extern void* __identifier("casinhf");
extern "C" extern void* __identifier("_imp__casinhf");
extern "C" extern void* __identifier("casinhl");
extern "C" extern void* __identifier("_imp__casinhl");
extern "C" extern void* __identifier("casinl");
extern "C" extern void* __identifier("_imp__casinl");
extern "C" extern void* __identifier("catan");
extern "C" extern void* __identifier("_imp__catan");
extern "C" extern void* __identifier("catanf");
extern "C" extern void* __identifier("_imp__catanf");
extern "C" extern void* __identifier("catanh");
extern "C" extern void* __identifier("_imp__catanh");
extern "C" extern void* __identifier("catanhf");
extern "C" extern void* __identifier("_imp__catanhf");
extern "C" extern void* __identifier("catanhl");
extern "C" extern void* __identifier("_imp__catanhl");
extern "C" extern void* __identifier("catanl");
extern "C" extern void* __identifier("_imp__catanl");
extern "C" extern void* __identifier("cbrt");
extern "C" extern void* __identifier("_imp__cbrt");
extern "C" extern void* __identifier("cbrtf");
extern "C" extern void* __identifier("_imp__cbrtf");
extern "C" extern void* __identifier("cbrtl");
extern "C" extern void* __identifier("_imp__cbrtl");
extern "C" extern void* __identifier("ccos");
extern "C" extern void* __identifier("_imp__ccos");
extern "C" extern void* __identifier("ccosf");
extern "C" extern void* __identifier("_imp__ccosf");
extern "C" extern void* __identifier("ccosh");
extern "C" extern void* __identifier("_imp__ccosh");
extern "C" extern void* __identifier("ccoshf");
extern "C" extern void* __identifier("_imp__ccoshf");
extern "C" extern void* __identifier("ccoshl");
extern "C" extern void* __identifier("_imp__ccoshl");
extern "C" extern void* __identifier("ccosl");
extern "C" extern void* __identifier("_imp__ccosl");
extern "C" extern void* __identifier("ceil");
extern "C" extern void* __identifier("_imp__ceil");
extern "C" extern void* __identifier("cexp");
extern "C" extern void* __identifier("_imp__cexp");
extern "C" extern void* __identifier("cexpf");
extern "C" extern void* __identifier("_imp__cexpf");
extern "C" extern void* __identifier("cexpl");
extern "C" extern void* __identifier("_imp__cexpl");
extern "C" extern void* __identifier("cimag");
extern "C" extern void* __identifier("_imp__cimag");
extern "C" extern void* __identifier("cimagf");
extern "C" extern void* __identifier("_imp__cimagf");
extern "C" extern void* __identifier("cimagl");
extern "C" extern void* __identifier("_imp__cimagl");
extern "C" extern void* __identifier("clog");
extern "C" extern void* __identifier("_imp__clog");
extern "C" extern void* __identifier("clog10");
extern "C" extern void* __identifier("_imp__clog10");
extern "C" extern void* __identifier("clog10f");
extern "C" extern void* __identifier("_imp__clog10f");
extern "C" extern void* __identifier("clog10l");
extern "C" extern void* __identifier("_imp__clog10l");
extern "C" extern void* __identifier("clogf");
extern "C" extern void* __identifier("_imp__clogf");
extern "C" extern void* __identifier("clogl");
extern "C" extern void* __identifier("_imp__clogl");
extern "C" extern void* __identifier("conj");
extern "C" extern void* __identifier("_imp__conj");
extern "C" extern void* __identifier("conjf");
extern "C" extern void* __identifier("_imp__conjf");
extern "C" extern void* __identifier("conjl");
extern "C" extern void* __identifier("_imp__conjl");
extern "C" extern void* __identifier("copysign");
extern "C" extern void* __identifier("_imp__copysign");
extern "C" extern void* __identifier("copysignf");
extern "C" extern void* __identifier("_imp__copysignf");
extern "C" extern void* __identifier("copysignl");
extern "C" extern void* __identifier("_imp__copysignl");
extern "C" extern void* __identifier("cos");
extern "C" extern void* __identifier("_imp__cos");
extern "C" extern void* __identifier("cosh");
extern "C" extern void* __identifier("_imp__cosh");
extern "C" extern void* __identifier("cpow");
extern "C" extern void* __identifier("_imp__cpow");
extern "C" extern void* __identifier("cpowf");
extern "C" extern void* __identifier("_imp__cpowf");
extern "C" extern void* __identifier("cpowl");
extern "C" extern void* __identifier("_imp__cpowl");
extern "C" extern void* __identifier("cproj");
extern "C" extern void* __identifier("_imp__cproj");
extern "C" extern void* __identifier("cprojf");
extern "C" extern void* __identifier("_imp__cprojf");
extern "C" extern void* __identifier("cprojl");
extern "C" extern void* __identifier("_imp__cprojl");
extern "C" extern void* __identifier("creal");
extern "C" extern void* __identifier("_imp__creal");
extern "C" extern void* __identifier("crealf");
extern "C" extern void* __identifier("_imp__crealf");
extern "C" extern void* __identifier("creall");
extern "C" extern void* __identifier("_imp__creall");
extern "C" extern void* __identifier("csin");
extern "C" extern void* __identifier("_imp__csin");
extern "C" extern void* __identifier("csinf");
extern "C" extern void* __identifier("_imp__csinf");
extern "C" extern void* __identifier("csinh");
extern "C" extern void* __identifier("_imp__csinh");
extern "C" extern void* __identifier("csinhf");
extern "C" extern void* __identifier("_imp__csinhf");
extern "C" extern void* __identifier("csinhl");
extern "C" extern void* __identifier("_imp__csinhl");
extern "C" extern void* __identifier("csinl");
extern "C" extern void* __identifier("_imp__csinl");
extern "C" extern void* __identifier("csqrt");
extern "C" extern void* __identifier("_imp__csqrt");
extern "C" extern void* __identifier("csqrtf");
extern "C" extern void* __identifier("_imp__csqrtf");
extern "C" extern void* __identifier("csqrtl");
extern "C" extern void* __identifier("_imp__csqrtl");
extern "C" extern void* __identifier("ctan");
extern "C" extern void* __identifier("_imp__ctan");
extern "C" extern void* __identifier("ctanf");
extern "C" extern void* __identifier("_imp__ctanf");
extern "C" extern void* __identifier("ctanh");
extern "C" extern void* __identifier("_imp__ctanh");
extern "C" extern void* __identifier("ctanhf");
extern "C" extern void* __identifier("_imp__ctanhf");
extern "C" extern void* __identifier("ctanhl");
extern "C" extern void* __identifier("_imp__ctanhl");
extern "C" extern void* __identifier("ctanl");
extern "C" extern void* __identifier("_imp__ctanl");
extern "C" extern void* __identifier("erf");
extern "C" extern void* __identifier("_imp__erf");
extern "C" extern void* __identifier("erfc");
extern "C" extern void* __identifier("_imp__erfc");
extern "C" extern void* __identifier("erfcf");
extern "C" extern void* __identifier("_imp__erfcf");
extern "C" extern void* __identifier("erfcl");
extern "C" extern void* __identifier("_imp__erfcl");
extern "C" extern void* __identifier("erff");
extern "C" extern void* __identifier("_imp__erff");
extern "C" extern void* __identifier("erfl");
extern "C" extern void* __identifier("_imp__erfl");
extern "C" extern void* __identifier("exp");
extern "C" extern void* __identifier("_imp__exp");
extern "C" extern void* __identifier("exp2");
extern "C" extern void* __identifier("_imp__exp2");
extern "C" extern void* __identifier("exp2f");
extern "C" extern void* __identifier("_imp__exp2f");
extern "C" extern void* __identifier("exp2l");
extern "C" extern void* __identifier("_imp__exp2l");
extern "C" extern void* __identifier("expm1");
extern "C" extern void* __identifier("_imp__expm1");
extern "C" extern void* __identifier("expm1f");
extern "C" extern void* __identifier("_imp__expm1f");
extern "C" extern void* __identifier("expm1l");
extern "C" extern void* __identifier("_imp__expm1l");
extern "C" extern void* __identifier("fabs");
extern "C" extern void* __identifier("_imp__fabs");
extern "C" extern void* __identifier("fdim");
extern "C" extern void* __identifier("_imp__fdim");
extern "C" extern void* __identifier("fdimf");
extern "C" extern void* __identifier("_imp__fdimf");
extern "C" extern void* __identifier("fdiml");
extern "C" extern void* __identifier("_imp__fdiml");
extern "C" extern void* __identifier("floor");
extern "C" extern void* __identifier("_imp__floor");
extern "C" extern void* __identifier("fma");
extern "C" extern void* __identifier("_imp__fma");
extern "C" extern void* __identifier("fmaf");
extern "C" extern void* __identifier("_imp__fmaf");
extern "C" extern void* __identifier("fmal");
extern "C" extern void* __identifier("_imp__fmal");
extern "C" extern void* __identifier("fmax");
extern "C" extern void* __identifier("_imp__fmax");
extern "C" extern void* __identifier("fmaxf");
extern "C" extern void* __identifier("_imp__fmaxf");
extern "C" extern void* __identifier("fmaxl");
extern "C" extern void* __identifier("_imp__fmaxl");
extern "C" extern void* __identifier("fmin");
extern "C" extern void* __identifier("_imp__fmin");
extern "C" extern void* __identifier("fminf");
extern "C" extern void* __identifier("_imp__fminf");
extern "C" extern void* __identifier("fminl");
extern "C" extern void* __identifier("_imp__fminl");
extern "C" extern void* __identifier("fmod");
extern "C" extern void* __identifier("_imp__fmod");
extern "C" extern void* __identifier("frexp");
extern "C" extern void* __identifier("_imp__frexp");
extern "C" extern void* __identifier("hypot");
extern "C" extern void* __identifier("_imp__hypot");
extern "C" extern void* __identifier("ilogb");
extern "C" extern void* __identifier("_imp__ilogb");
extern "C" extern void* __identifier("ilogbf");
extern "C" extern void* __identifier("_imp__ilogbf");
extern "C" extern void* __identifier("ilogbl");
extern "C" extern void* __identifier("_imp__ilogbl");
extern "C" extern void* __identifier("ldexp");
extern "C" extern void* __identifier("_imp__ldexp");
extern "C" extern void* __identifier("lgamma");
extern "C" extern void* __identifier("_imp__lgamma");
extern "C" extern void* __identifier("lgammaf");
extern "C" extern void* __identifier("_imp__lgammaf");
extern "C" extern void* __identifier("lgammal");
extern "C" extern void* __identifier("_imp__lgammal");
extern "C" extern void* __identifier("llrint");
extern "C" extern void* __identifier("_imp__llrint");
extern "C" extern void* __identifier("llrintf");
extern "C" extern void* __identifier("_imp__llrintf");
extern "C" extern void* __identifier("llrintl");
extern "C" extern void* __identifier("_imp__llrintl");
extern "C" extern void* __identifier("llround");
extern "C" extern void* __identifier("_imp__llround");
extern "C" extern void* __identifier("llroundf");
extern "C" extern void* __identifier("_imp__llroundf");
extern "C" extern void* __identifier("llroundl");
extern "C" extern void* __identifier("_imp__llroundl");
extern "C" extern void* __identifier("log");
extern "C" extern void* __identifier("_imp__log");
extern "C" extern void* __identifier("log10");
extern "C" extern void* __identifier("_imp__log10");
extern "C" extern void* __identifier("log1p");
extern "C" extern void* __identifier("_imp__log1p");
extern "C" extern void* __identifier("log1pf");
extern "C" extern void* __identifier("_imp__log1pf");
extern "C" extern void* __identifier("log1pl");
extern "C" extern void* __identifier("_imp__log1pl");
extern "C" extern void* __identifier("log2");
extern "C" extern void* __identifier("_imp__log2");
extern "C" extern void* __identifier("log2f");
extern "C" extern void* __identifier("_imp__log2f");
extern "C" extern void* __identifier("log2l");
extern "C" extern void* __identifier("_imp__log2l");
extern "C" extern void* __identifier("logb");
extern "C" extern void* __identifier("_imp__logb");
extern "C" extern void* __identifier("logbf");
extern "C" extern void* __identifier("_imp__logbf");
extern "C" extern void* __identifier("logbl");
extern "C" extern void* __identifier("_imp__logbl");
extern "C" extern void* __identifier("lrint");
extern "C" extern void* __identifier("_imp__lrint");
extern "C" extern void* __identifier("lrintf");
extern "C" extern void* __identifier("_imp__lrintf");
extern "C" extern void* __identifier("lrintl");
extern "C" extern void* __identifier("_imp__lrintl");
extern "C" extern void* __identifier("lround");
extern "C" extern void* __identifier("_imp__lround");
extern "C" extern void* __identifier("lroundf");
extern "C" extern void* __identifier("_imp__lroundf");
extern "C" extern void* __identifier("lroundl");
extern "C" extern void* __identifier("_imp__lroundl");
extern "C" extern void* __identifier("modf");
extern "C" extern void* __identifier("_imp__modf");
extern "C" extern void* __identifier("nan");
extern "C" extern void* __identifier("_imp__nan");
extern "C" extern void* __identifier("nanf");
extern "C" extern void* __identifier("_imp__nanf");
extern "C" extern void* __identifier("nanl");
extern "C" extern void* __identifier("_imp__nanl");
extern "C" extern void* __identifier("nearbyint");
extern "C" extern void* __identifier("_imp__nearbyint");
extern "C" extern void* __identifier("nearbyintf");
extern "C" extern void* __identifier("_imp__nearbyintf");
extern "C" extern void* __identifier("nearbyintl");
extern "C" extern void* __identifier("_imp__nearbyintl");
extern "C" extern void* __identifier("nextafter");
extern "C" extern void* __identifier("_imp__nextafter");
extern "C" extern void* __identifier("nextafterf");
extern "C" extern void* __identifier("_imp__nextafterf");
extern "C" extern void* __identifier("nextafterl");
extern "C" extern void* __identifier("_imp__nextafterl");
extern "C" extern void* __identifier("nexttoward");
extern "C" extern void* __identifier("_imp__nexttoward");
extern "C" extern void* __identifier("nexttowardf");
extern "C" extern void* __identifier("_imp__nexttowardf");
extern "C" extern void* __identifier("nexttowardl");
extern "C" extern void* __identifier("_imp__nexttowardl");
extern "C" extern void* __identifier("norm");
extern "C" extern void* __identifier("_imp__norm");
extern "C" extern void* __identifier("normf");
extern "C" extern void* __identifier("_imp__normf");
extern "C" extern void* __identifier("norml");
extern "C" extern void* __identifier("_imp__norml");
extern "C" extern void* __identifier("pow");
extern "C" extern void* __identifier("_imp__pow");
extern "C" extern void* __identifier("powf");
extern "C" extern void* __identifier("_imp__powf");
extern "C" extern void* __identifier("remainder");
extern "C" extern void* __identifier("_imp__remainder");
extern "C" extern void* __identifier("remainderf");
extern "C" extern void* __identifier("_imp__remainderf");
extern "C" extern void* __identifier("remainderl");
extern "C" extern void* __identifier("_imp__remainderl");
extern "C" extern void* __identifier("remquo");
extern "C" extern void* __identifier("_imp__remquo");
extern "C" extern void* __identifier("remquof");
extern "C" extern void* __identifier("_imp__remquof");
extern "C" extern void* __identifier("remquol");
extern "C" extern void* __identifier("_imp__remquol");
extern "C" extern void* __identifier("rint");
extern "C" extern void* __identifier("_imp__rint");
extern "C" extern void* __identifier("rintf");
extern "C" extern void* __identifier("_imp__rintf");
extern "C" extern void* __identifier("rintl");
extern "C" extern void* __identifier("_imp__rintl");
extern "C" extern void* __identifier("round");
extern "C" extern void* __identifier("_imp__round");
extern "C" extern void* __identifier("roundf");
extern "C" extern void* __identifier("_imp__roundf");
extern "C" extern void* __identifier("roundl");
extern "C" extern void* __identifier("_imp__roundl");
extern "C" extern void* __identifier("scalbln");
extern "C" extern void* __identifier("_imp__scalbln");
extern "C" extern void* __identifier("scalblnf");
extern "C" extern void* __identifier("_imp__scalblnf");
extern "C" extern void* __identifier("scalblnl");
extern "C" extern void* __identifier("_imp__scalblnl");
extern "C" extern void* __identifier("scalbn");
extern "C" extern void* __identifier("_imp__scalbn");
extern "C" extern void* __identifier("scalbnf");
extern "C" extern void* __identifier("_imp__scalbnf");
extern "C" extern void* __identifier("scalbnl");
extern "C" extern void* __identifier("_imp__scalbnl");
extern "C" extern void* __identifier("sin");
extern "C" extern void* __identifier("_imp__sin");
extern "C" extern void* __identifier("sinh");
extern "C" extern void* __identifier("_imp__sinh");
extern "C" extern void* __identifier("sqrt");
extern "C" extern void* __identifier("_imp__sqrt");
extern "C" extern void* __identifier("tan");
extern "C" extern void* __identifier("_imp__tan");
extern "C" extern void* __identifier("tanh");
extern "C" extern void* __identifier("_imp__tanh");
extern "C" extern void* __identifier("tgamma");
extern "C" extern void* __identifier("_imp__tgamma");
extern "C" extern void* __identifier("tgammaf");
extern "C" extern void* __identifier("_imp__tgammaf");
extern "C" extern void* __identifier("tgammal");
extern "C" extern void* __identifier("_imp__tgammal");
extern "C" extern void* __identifier("trunc");
extern "C" extern void* __identifier("_imp__trunc");
extern "C" extern void* __identifier("truncf");
extern "C" extern void* __identifier("_imp__truncf");
extern "C" extern void* __identifier("truncl");
extern "C" extern void* __identifier("_imp__truncl");
extern "C" extern void* __identifier("__p__mbcasemap");
extern "C" extern void* __identifier("_imp____p__mbcasemap");
extern "C" extern void* __identifier("__p__mbctype");
extern "C" extern void* __identifier("_imp____p__mbctype");
extern "C" extern void* __identifier("_ismbbalnum");
extern "C" extern void* __identifier("_imp___ismbbalnum");
extern "C" extern void* __identifier("_ismbbalnum_l");
extern "C" extern void* __identifier("_imp___ismbbalnum_l");
extern "C" extern void* __identifier("_ismbbalpha");
extern "C" extern void* __identifier("_imp___ismbbalpha");
extern "C" extern void* __identifier("_ismbbalpha_l");
extern "C" extern void* __identifier("_imp___ismbbalpha_l");
extern "C" extern void* __identifier("_ismbbblank");
extern "C" extern void* __identifier("_imp___ismbbblank");
extern "C" extern void* __identifier("_ismbbblank_l");
extern "C" extern void* __identifier("_imp___ismbbblank_l");
extern "C" extern void* __identifier("_ismbbgraph");
extern "C" extern void* __identifier("_imp___ismbbgraph");
extern "C" extern void* __identifier("_ismbbgraph_l");
extern "C" extern void* __identifier("_imp___ismbbgraph_l");
extern "C" extern void* __identifier("_ismbbkalnum");
extern "C" extern void* __identifier("_imp___ismbbkalnum");
extern "C" extern void* __identifier("_ismbbkalnum_l");
extern "C" extern void* __identifier("_imp___ismbbkalnum_l");
extern "C" extern void* __identifier("_ismbbkana");
extern "C" extern void* __identifier("_imp___ismbbkana");
extern "C" extern void* __identifier("_ismbbkana_l");
extern "C" extern void* __identifier("_imp___ismbbkana_l");
extern "C" extern void* __identifier("_ismbbkprint");
extern "C" extern void* __identifier("_imp___ismbbkprint");
extern "C" extern void* __identifier("_ismbbkprint_l");
extern "C" extern void* __identifier("_imp___ismbbkprint_l");
extern "C" extern void* __identifier("_ismbbkpunct");
extern "C" extern void* __identifier("_imp___ismbbkpunct");
extern "C" extern void* __identifier("_ismbbkpunct_l");
extern "C" extern void* __identifier("_imp___ismbbkpunct_l");
extern "C" extern void* __identifier("_ismbblead");
extern "C" extern void* __identifier("_imp___ismbblead");
extern "C" extern void* __identifier("_ismbblead_l");
extern "C" extern void* __identifier("_imp___ismbblead_l");
extern "C" extern void* __identifier("_ismbbprint");
extern "C" extern void* __identifier("_imp___ismbbprint");
extern "C" extern void* __identifier("_ismbbprint_l");
extern "C" extern void* __identifier("_imp___ismbbprint_l");
extern "C" extern void* __identifier("_ismbbpunct");
extern "C" extern void* __identifier("_imp___ismbbpunct");
extern "C" extern void* __identifier("_ismbbpunct_l");
extern "C" extern void* __identifier("_imp___ismbbpunct_l");
extern "C" extern void* __identifier("_ismbbtrail");
extern "C" extern void* __identifier("_imp___ismbbtrail");
extern "C" extern void* __identifier("_ismbbtrail_l");
extern "C" extern void* __identifier("_imp___ismbbtrail_l");
extern "C" extern void* __identifier("_ismbcalnum");
extern "C" extern void* __identifier("_imp___ismbcalnum");
extern "C" extern void* __identifier("_ismbcalnum_l");
extern "C" extern void* __identifier("_imp___ismbcalnum_l");
extern "C" extern void* __identifier("_ismbcalpha");
extern "C" extern void* __identifier("_imp___ismbcalpha");
extern "C" extern void* __identifier("_ismbcalpha_l");
extern "C" extern void* __identifier("_imp___ismbcalpha_l");
extern "C" extern void* __identifier("_ismbcblank");
extern "C" extern void* __identifier("_imp___ismbcblank");
extern "C" extern void* __identifier("_ismbcblank_l");
extern "C" extern void* __identifier("_imp___ismbcblank_l");
extern "C" extern void* __identifier("_ismbcdigit");
extern "C" extern void* __identifier("_imp___ismbcdigit");
extern "C" extern void* __identifier("_ismbcdigit_l");
extern "C" extern void* __identifier("_imp___ismbcdigit_l");
extern "C" extern void* __identifier("_ismbcgraph");
extern "C" extern void* __identifier("_imp___ismbcgraph");
extern "C" extern void* __identifier("_ismbcgraph_l");
extern "C" extern void* __identifier("_imp___ismbcgraph_l");
extern "C" extern void* __identifier("_ismbchira");
extern "C" extern void* __identifier("_imp___ismbchira");
extern "C" extern void* __identifier("_ismbchira_l");
extern "C" extern void* __identifier("_imp___ismbchira_l");
extern "C" extern void* __identifier("_ismbckata");
extern "C" extern void* __identifier("_imp___ismbckata");
extern "C" extern void* __identifier("_ismbckata_l");
extern "C" extern void* __identifier("_imp___ismbckata_l");
extern "C" extern void* __identifier("_ismbcl0");
extern "C" extern void* __identifier("_imp___ismbcl0");
extern "C" extern void* __identifier("_ismbcl0_l");
extern "C" extern void* __identifier("_imp___ismbcl0_l");
extern "C" extern void* __identifier("_ismbcl1");
extern "C" extern void* __identifier("_imp___ismbcl1");
extern "C" extern void* __identifier("_ismbcl1_l");
extern "C" extern void* __identifier("_imp___ismbcl1_l");
extern "C" extern void* __identifier("_ismbcl2");
extern "C" extern void* __identifier("_imp___ismbcl2");
extern "C" extern void* __identifier("_ismbcl2_l");
extern "C" extern void* __identifier("_imp___ismbcl2_l");
extern "C" extern void* __identifier("_ismbclegal");
extern "C" extern void* __identifier("_imp___ismbclegal");
extern "C" extern void* __identifier("_ismbclegal_l");
extern "C" extern void* __identifier("_imp___ismbclegal_l");
extern "C" extern void* __identifier("_ismbclower");
extern "C" extern void* __identifier("_imp___ismbclower");
extern "C" extern void* __identifier("_ismbclower_l");
extern "C" extern void* __identifier("_imp___ismbclower_l");
extern "C" extern void* __identifier("_ismbcprint");
extern "C" extern void* __identifier("_imp___ismbcprint");
extern "C" extern void* __identifier("_ismbcprint_l");
extern "C" extern void* __identifier("_imp___ismbcprint_l");
extern "C" extern void* __identifier("_ismbcpunct");
extern "C" extern void* __identifier("_imp___ismbcpunct");
extern "C" extern void* __identifier("_ismbcpunct_l");
extern "C" extern void* __identifier("_imp___ismbcpunct_l");
extern "C" extern void* __identifier("_ismbcspace");
extern "C" extern void* __identifier("_imp___ismbcspace");
extern "C" extern void* __identifier("_ismbcspace_l");
extern "C" extern void* __identifier("_imp___ismbcspace_l");
extern "C" extern void* __identifier("_ismbcsymbol");
extern "C" extern void* __identifier("_imp___ismbcsymbol");
extern "C" extern void* __identifier("_ismbcsymbol_l");
extern "C" extern void* __identifier("_imp___ismbcsymbol_l");
extern "C" extern void* __identifier("_ismbcupper");
extern "C" extern void* __identifier("_imp___ismbcupper");
extern "C" extern void* __identifier("_ismbcupper_l");
extern "C" extern void* __identifier("_imp___ismbcupper_l");
extern "C" extern void* __identifier("_ismbslead");
extern "C" extern void* __identifier("_imp___ismbslead");
extern "C" extern void* __identifier("_ismbslead_l");
extern "C" extern void* __identifier("_imp___ismbslead_l");
extern "C" extern void* __identifier("_ismbstrail");
extern "C" extern void* __identifier("_imp___ismbstrail");
extern "C" extern void* __identifier("_ismbstrail_l");
extern "C" extern void* __identifier("_imp___ismbstrail_l");
extern "C" extern void* __identifier("_mbbtombc");
extern "C" extern void* __identifier("_imp___mbbtombc");
extern "C" extern void* __identifier("_mbbtombc_l");
extern "C" extern void* __identifier("_imp___mbbtombc_l");
extern "C" extern void* __identifier("_mbbtype");
extern "C" extern void* __identifier("_imp___mbbtype");
extern "C" extern void* __identifier("_mbbtype_l");
extern "C" extern void* __identifier("_imp___mbbtype_l");
extern "C" extern void* __identifier("_imp___mbcasemap");
extern "C" extern void* __identifier("_mbccpy");
extern "C" extern void* __identifier("_imp___mbccpy");
extern "C" extern void* __identifier("_mbccpy_l");
extern "C" extern void* __identifier("_imp___mbccpy_l");
extern "C" extern void* __identifier("_mbccpy_s");
extern "C" extern void* __identifier("_imp___mbccpy_s");
extern "C" extern void* __identifier("_mbccpy_s_l");
extern "C" extern void* __identifier("_imp___mbccpy_s_l");
extern "C" extern void* __identifier("_mbcjistojms");
extern "C" extern void* __identifier("_imp___mbcjistojms");
extern "C" extern void* __identifier("_mbcjistojms_l");
extern "C" extern void* __identifier("_imp___mbcjistojms_l");
extern "C" extern void* __identifier("_mbcjmstojis");
extern "C" extern void* __identifier("_imp___mbcjmstojis");
extern "C" extern void* __identifier("_mbcjmstojis_l");
extern "C" extern void* __identifier("_imp___mbcjmstojis_l");
extern "C" extern void* __identifier("_mbclen");
extern "C" extern void* __identifier("_imp___mbclen");
extern "C" extern void* __identifier("_mbclen_l");
extern "C" extern void* __identifier("_imp___mbclen_l");
extern "C" extern void* __identifier("_mbctohira");
extern "C" extern void* __identifier("_imp___mbctohira");
extern "C" extern void* __identifier("_mbctohira_l");
extern "C" extern void* __identifier("_imp___mbctohira_l");
extern "C" extern void* __identifier("_mbctokata");
extern "C" extern void* __identifier("_imp___mbctokata");
extern "C" extern void* __identifier("_mbctokata_l");
extern "C" extern void* __identifier("_imp___mbctokata_l");
extern "C" extern void* __identifier("_mbctolower");
extern "C" extern void* __identifier("_imp___mbctolower");
extern "C" extern void* __identifier("_mbctolower_l");
extern "C" extern void* __identifier("_imp___mbctolower_l");
extern "C" extern void* __identifier("_mbctombb");
extern "C" extern void* __identifier("_imp___mbctombb");
extern "C" extern void* __identifier("_mbctombb_l");
extern "C" extern void* __identifier("_imp___mbctombb_l");
extern "C" extern void* __identifier("_mbctoupper");
extern "C" extern void* __identifier("_imp___mbctoupper");
extern "C" extern void* __identifier("_mbctoupper_l");
extern "C" extern void* __identifier("_imp___mbctoupper_l");
extern "C" extern void* __identifier("_mblen_l");
extern "C" extern void* __identifier("_imp___mblen_l");
extern "C" extern void* __identifier("_mbsbtype");
extern "C" extern void* __identifier("_imp___mbsbtype");
extern "C" extern void* __identifier("_mbsbtype_l");
extern "C" extern void* __identifier("_imp___mbsbtype_l");
extern "C" extern void* __identifier("_mbscat_s");
extern "C" extern void* __identifier("_imp___mbscat_s");
extern "C" extern void* __identifier("_mbscat_s_l");
extern "C" extern void* __identifier("_imp___mbscat_s_l");
extern "C" extern void* __identifier("_mbschr");
extern "C" extern void* __identifier("_imp___mbschr");
extern "C" extern void* __identifier("_mbschr_l");
extern "C" extern void* __identifier("_imp___mbschr_l");
extern "C" extern void* __identifier("_mbscmp");
extern "C" extern void* __identifier("_imp___mbscmp");
extern "C" extern void* __identifier("_mbscmp_l");
extern "C" extern void* __identifier("_imp___mbscmp_l");
extern "C" extern void* __identifier("_mbscoll");
extern "C" extern void* __identifier("_imp___mbscoll");
extern "C" extern void* __identifier("_mbscoll_l");
extern "C" extern void* __identifier("_imp___mbscoll_l");
extern "C" extern void* __identifier("_mbscpy_s");
extern "C" extern void* __identifier("_imp___mbscpy_s");
extern "C" extern void* __identifier("_mbscpy_s_l");
extern "C" extern void* __identifier("_imp___mbscpy_s_l");
extern "C" extern void* __identifier("_mbscspn");
extern "C" extern void* __identifier("_imp___mbscspn");
extern "C" extern void* __identifier("_mbscspn_l");
extern "C" extern void* __identifier("_imp___mbscspn_l");
extern "C" extern void* __identifier("_mbsdec");
extern "C" extern void* __identifier("_imp___mbsdec");
extern "C" extern void* __identifier("_mbsdec_l");
extern "C" extern void* __identifier("_imp___mbsdec_l");
extern "C" extern void* __identifier("_mbsdup");
extern "C" extern void* __identifier("_imp___mbsdup");
extern "C" extern void* __identifier("_mbsicmp");
extern "C" extern void* __identifier("_imp___mbsicmp");
extern "C" extern void* __identifier("_mbsicmp_l");
extern "C" extern void* __identifier("_imp___mbsicmp_l");
extern "C" extern void* __identifier("_mbsicoll");
extern "C" extern void* __identifier("_imp___mbsicoll");
extern "C" extern void* __identifier("_mbsicoll_l");
extern "C" extern void* __identifier("_imp___mbsicoll_l");
extern "C" extern void* __identifier("_mbsinc");
extern "C" extern void* __identifier("_imp___mbsinc");
extern "C" extern void* __identifier("_mbsinc_l");
extern "C" extern void* __identifier("_imp___mbsinc_l");
extern "C" extern void* __identifier("_mbslen");
extern "C" extern void* __identifier("_imp___mbslen");
extern "C" extern void* __identifier("_mbslen_l");
extern "C" extern void* __identifier("_imp___mbslen_l");
extern "C" extern void* __identifier("_mbslwr");
extern "C" extern void* __identifier("_imp___mbslwr");
extern "C" extern void* __identifier("_mbslwr_l");
extern "C" extern void* __identifier("_imp___mbslwr_l");
extern "C" extern void* __identifier("_mbslwr_s");
extern "C" extern void* __identifier("_imp___mbslwr_s");
extern "C" extern void* __identifier("_mbslwr_s_l");
extern "C" extern void* __identifier("_imp___mbslwr_s_l");
extern "C" extern void* __identifier("_mbsnbcat");
extern "C" extern void* __identifier("_imp___mbsnbcat");
extern "C" extern void* __identifier("_mbsnbcat_l");
extern "C" extern void* __identifier("_imp___mbsnbcat_l");
extern "C" extern void* __identifier("_mbsnbcat_s");
extern "C" extern void* __identifier("_imp___mbsnbcat_s");
extern "C" extern void* __identifier("_mbsnbcat_s_l");
extern "C" extern void* __identifier("_imp___mbsnbcat_s_l");
extern "C" extern void* __identifier("_mbsnbcmp");
extern "C" extern void* __identifier("_imp___mbsnbcmp");
extern "C" extern void* __identifier("_mbsnbcmp_l");
extern "C" extern void* __identifier("_imp___mbsnbcmp_l");
extern "C" extern void* __identifier("_mbsnbcnt");
extern "C" extern void* __identifier("_imp___mbsnbcnt");
extern "C" extern void* __identifier("_mbsnbcnt_l");
extern "C" extern void* __identifier("_imp___mbsnbcnt_l");
extern "C" extern void* __identifier("_mbsnbcoll");
extern "C" extern void* __identifier("_imp___mbsnbcoll");
extern "C" extern void* __identifier("_mbsnbcoll_l");
extern "C" extern void* __identifier("_imp___mbsnbcoll_l");
extern "C" extern void* __identifier("_mbsnbcpy");
extern "C" extern void* __identifier("_imp___mbsnbcpy");
extern "C" extern void* __identifier("_mbsnbcpy_l");
extern "C" extern void* __identifier("_imp___mbsnbcpy_l");
extern "C" extern void* __identifier("_mbsnbcpy_s");
extern "C" extern void* __identifier("_imp___mbsnbcpy_s");
extern "C" extern void* __identifier("_mbsnbcpy_s_l");
extern "C" extern void* __identifier("_imp___mbsnbcpy_s_l");
extern "C" extern void* __identifier("_mbsnbicmp");
extern "C" extern void* __identifier("_imp___mbsnbicmp");
extern "C" extern void* __identifier("_mbsnbicmp_l");
extern "C" extern void* __identifier("_imp___mbsnbicmp_l");
extern "C" extern void* __identifier("_mbsnbicoll");
extern "C" extern void* __identifier("_imp___mbsnbicoll");
extern "C" extern void* __identifier("_mbsnbicoll_l");
extern "C" extern void* __identifier("_imp___mbsnbicoll_l");
extern "C" extern void* __identifier("_mbsnbset");
extern "C" extern void* __identifier("_imp___mbsnbset");
extern "C" extern void* __identifier("_mbsnbset_l");
extern "C" extern void* __identifier("_imp___mbsnbset_l");
extern "C" extern void* __identifier("_mbsnbset_s");
extern "C" extern void* __identifier("_imp___mbsnbset_s");
extern "C" extern void* __identifier("_mbsnbset_s_l");
extern "C" extern void* __identifier("_imp___mbsnbset_s_l");
extern "C" extern void* __identifier("_mbsncat");
extern "C" extern void* __identifier("_imp___mbsncat");
extern "C" extern void* __identifier("_mbsncat_l");
extern "C" extern void* __identifier("_imp___mbsncat_l");
extern "C" extern void* __identifier("_mbsncat_s");
extern "C" extern void* __identifier("_imp___mbsncat_s");
extern "C" extern void* __identifier("_mbsncat_s_l");
extern "C" extern void* __identifier("_imp___mbsncat_s_l");
extern "C" extern void* __identifier("_mbsnccnt");
extern "C" extern void* __identifier("_imp___mbsnccnt");
extern "C" extern void* __identifier("_mbsnccnt_l");
extern "C" extern void* __identifier("_imp___mbsnccnt_l");
extern "C" extern void* __identifier("_mbsncmp");
extern "C" extern void* __identifier("_imp___mbsncmp");
extern "C" extern void* __identifier("_mbsncmp_l");
extern "C" extern void* __identifier("_imp___mbsncmp_l");
extern "C" extern void* __identifier("_mbsncoll");
extern "C" extern void* __identifier("_imp___mbsncoll");
extern "C" extern void* __identifier("_mbsncoll_l");
extern "C" extern void* __identifier("_imp___mbsncoll_l");
extern "C" extern void* __identifier("_mbsncpy");
extern "C" extern void* __identifier("_imp___mbsncpy");
extern "C" extern void* __identifier("_mbsncpy_l");
extern "C" extern void* __identifier("_imp___mbsncpy_l");
extern "C" extern void* __identifier("_mbsncpy_s");
extern "C" extern void* __identifier("_imp___mbsncpy_s");
extern "C" extern void* __identifier("_mbsncpy_s_l");
extern "C" extern void* __identifier("_imp___mbsncpy_s_l");
extern "C" extern void* __identifier("_mbsnextc");
extern "C" extern void* __identifier("_imp___mbsnextc");
extern "C" extern void* __identifier("_mbsnextc_l");
extern "C" extern void* __identifier("_imp___mbsnextc_l");
extern "C" extern void* __identifier("_mbsnicmp");
extern "C" extern void* __identifier("_imp___mbsnicmp");
extern "C" extern void* __identifier("_mbsnicmp_l");
extern "C" extern void* __identifier("_imp___mbsnicmp_l");
extern "C" extern void* __identifier("_mbsnicoll");
extern "C" extern void* __identifier("_imp___mbsnicoll");
extern "C" extern void* __identifier("_mbsnicoll_l");
extern "C" extern void* __identifier("_imp___mbsnicoll_l");
extern "C" extern void* __identifier("_mbsninc");
extern "C" extern void* __identifier("_imp___mbsninc");
extern "C" extern void* __identifier("_mbsninc_l");
extern "C" extern void* __identifier("_imp___mbsninc_l");
extern "C" extern void* __identifier("_mbsnlen");
extern "C" extern void* __identifier("_imp___mbsnlen");
extern "C" extern void* __identifier("_mbsnlen_l");
extern "C" extern void* __identifier("_imp___mbsnlen_l");
extern "C" extern void* __identifier("_mbsnset");
extern "C" extern void* __identifier("_imp___mbsnset");
extern "C" extern void* __identifier("_mbsnset_l");
extern "C" extern void* __identifier("_imp___mbsnset_l");
extern "C" extern void* __identifier("_mbsnset_s");
extern "C" extern void* __identifier("_imp___mbsnset_s");
extern "C" extern void* __identifier("_mbsnset_s_l");
extern "C" extern void* __identifier("_imp___mbsnset_s_l");
extern "C" extern void* __identifier("_mbspbrk");
extern "C" extern void* __identifier("_imp___mbspbrk");
extern "C" extern void* __identifier("_mbspbrk_l");
extern "C" extern void* __identifier("_imp___mbspbrk_l");
extern "C" extern void* __identifier("_mbsrchr");
extern "C" extern void* __identifier("_imp___mbsrchr");
extern "C" extern void* __identifier("_mbsrchr_l");
extern "C" extern void* __identifier("_imp___mbsrchr_l");
extern "C" extern void* __identifier("_mbsrev");
extern "C" extern void* __identifier("_imp___mbsrev");
extern "C" extern void* __identifier("_mbsrev_l");
extern "C" extern void* __identifier("_imp___mbsrev_l");
extern "C" extern void* __identifier("_mbsset");
extern "C" extern void* __identifier("_imp___mbsset");
extern "C" extern void* __identifier("_mbsset_l");
extern "C" extern void* __identifier("_imp___mbsset_l");
extern "C" extern void* __identifier("_mbsset_s");
extern "C" extern void* __identifier("_imp___mbsset_s");
extern "C" extern void* __identifier("_mbsset_s_l");
extern "C" extern void* __identifier("_imp___mbsset_s_l");
extern "C" extern void* __identifier("_mbsspn");
extern "C" extern void* __identifier("_imp___mbsspn");
extern "C" extern void* __identifier("_mbsspn_l");
extern "C" extern void* __identifier("_imp___mbsspn_l");
extern "C" extern void* __identifier("_mbsspnp");
extern "C" extern void* __identifier("_imp___mbsspnp");
extern "C" extern void* __identifier("_mbsspnp_l");
extern "C" extern void* __identifier("_imp___mbsspnp_l");
extern "C" extern void* __identifier("_mbsstr");
extern "C" extern void* __identifier("_imp___mbsstr");
extern "C" extern void* __identifier("_mbsstr_l");
extern "C" extern void* __identifier("_imp___mbsstr_l");
extern "C" extern void* __identifier("_mbstok");
extern "C" extern void* __identifier("_imp___mbstok");
extern "C" extern void* __identifier("_mbstok_l");
extern "C" extern void* __identifier("_imp___mbstok_l");
extern "C" extern void* __identifier("_mbstok_s");
extern "C" extern void* __identifier("_imp___mbstok_s");
extern "C" extern void* __identifier("_mbstok_s_l");
extern "C" extern void* __identifier("_imp___mbstok_s_l");
extern "C" extern void* __identifier("_mbstowcs_l");
extern "C" extern void* __identifier("_imp___mbstowcs_l");
extern "C" extern void* __identifier("_mbstowcs_s_l");
extern "C" extern void* __identifier("_imp___mbstowcs_s_l");
extern "C" extern void* __identifier("_mbstrlen");
extern "C" extern void* __identifier("_imp___mbstrlen");
extern "C" extern void* __identifier("_mbstrlen_l");
extern "C" extern void* __identifier("_imp___mbstrlen_l");
extern "C" extern void* __identifier("_mbstrnlen");
extern "C" extern void* __identifier("_imp___mbstrnlen");
extern "C" extern void* __identifier("_mbstrnlen_l");
extern "C" extern void* __identifier("_imp___mbstrnlen_l");
extern "C" extern void* __identifier("_mbsupr");
extern "C" extern void* __identifier("_imp___mbsupr");
extern "C" extern void* __identifier("_mbsupr_l");
extern "C" extern void* __identifier("_imp___mbsupr_l");
extern "C" extern void* __identifier("_mbsupr_s");
extern "C" extern void* __identifier("_imp___mbsupr_s");
extern "C" extern void* __identifier("_mbsupr_s_l");
extern "C" extern void* __identifier("_imp___mbsupr_s_l");
extern "C" extern void* __identifier("_mbtowc_l");
extern "C" extern void* __identifier("_imp___mbtowc_l");
extern "C" extern void* __identifier("_beep");
extern "C" extern void* __identifier("_imp___beep");
extern "C" extern void* __identifier("_cwait");
extern "C" extern void* __identifier("_imp___cwait");
extern "C" extern void* __identifier("_execl");
extern "C" extern void* __identifier("_imp___execl");
extern "C" extern void* __identifier("_execle");
extern "C" extern void* __identifier("_imp___execle");
extern "C" extern void* __identifier("_execlp");
extern "C" extern void* __identifier("_imp___execlp");
extern "C" extern void* __identifier("_execlpe");
extern "C" extern void* __identifier("_imp___execlpe");
extern "C" extern void* __identifier("_execv");
extern "C" extern void* __identifier("_imp___execv");
extern "C" extern void* __identifier("_execve");
extern "C" extern void* __identifier("_imp___execve");
extern "C" extern void* __identifier("_execvp");
extern "C" extern void* __identifier("_imp___execvp");
extern "C" extern void* __identifier("_execvpe");
extern "C" extern void* __identifier("_imp___execvpe");
extern "C" extern void* __identifier("_loaddll");
extern "C" extern void* __identifier("_imp___loaddll");
extern "C" extern void* __identifier("_spawnl");
extern "C" extern void* __identifier("_imp___spawnl");
extern "C" extern void* __identifier("_spawnle");
extern "C" extern void* __identifier("_imp___spawnle");
extern "C" extern void* __identifier("_spawnlp");
extern "C" extern void* __identifier("_imp___spawnlp");
extern "C" extern void* __identifier("_spawnlpe");
extern "C" extern void* __identifier("_imp___spawnlpe");
extern "C" extern void* __identifier("_spawnv");
extern "C" extern void* __identifier("_imp___spawnv");
extern "C" extern void* __identifier("_spawnve");
extern "C" extern void* __identifier("_imp___spawnve");
extern "C" extern void* __identifier("_spawnvp");
extern "C" extern void* __identifier("_imp___spawnvp");
extern "C" extern void* __identifier("_spawnvpe");
extern "C" extern void* __identifier("_imp___spawnvpe");
extern "C" extern void* __identifier("_unloaddll");
extern "C" extern void* __identifier("_imp___unloaddll");
extern "C" extern void* __identifier("_wexecl");
extern "C" extern void* __identifier("_imp___wexecl");
extern "C" extern void* __identifier("_wexecle");
extern "C" extern void* __identifier("_imp___wexecle");
extern "C" extern void* __identifier("_wexeclp");
extern "C" extern void* __identifier("_imp___wexeclp");
extern "C" extern void* __identifier("_wexeclpe");
extern "C" extern void* __identifier("_imp___wexeclpe");
extern "C" extern void* __identifier("_wexecv");
extern "C" extern void* __identifier("_imp___wexecv");
extern "C" extern void* __identifier("_wexecve");
extern "C" extern void* __identifier("_imp___wexecve");
extern "C" extern void* __identifier("_wexecvp");
extern "C" extern void* __identifier("_imp___wexecvp");
extern "C" extern void* __identifier("_wexecvpe");
extern "C" extern void* __identifier("_imp___wexecvpe");
extern "C" extern void* __identifier("_wspawnl");
extern "C" extern void* __identifier("_imp___wspawnl");
extern "C" extern void* __identifier("_wspawnle");
extern "C" extern void* __identifier("_imp___wspawnle");
extern "C" extern void* __identifier("_wspawnlp");
extern "C" extern void* __identifier("_imp___wspawnlp");
extern "C" extern void* __identifier("_wspawnlpe");
extern "C" extern void* __identifier("_imp___wspawnlpe");
extern "C" extern void* __identifier("_wspawnv");
extern "C" extern void* __identifier("_imp___wspawnv");
extern "C" extern void* __identifier("_wspawnve");
extern "C" extern void* __identifier("_imp___wspawnve");
extern "C" extern void* __identifier("_wspawnvp");
extern "C" extern void* __identifier("_imp___wspawnvp");
extern "C" extern void* __identifier("_wspawnvpe");
extern "C" extern void* __identifier("_imp___wspawnvpe");
extern "C" extern void* __identifier("_Exit");
extern "C" extern void* __identifier("_imp___Exit");
extern "C" extern void* __identifier("__control87_2");
extern "C" extern void* __identifier("_imp____control87_2");
extern "C" extern void* __identifier("__doserrno");
extern "C" extern void* __identifier("_imp____doserrno");
extern "C" extern void* __identifier("__fpe_flt_rounds");
extern "C" extern void* __identifier("_imp____fpe_flt_rounds");
extern "C" extern void* __identifier("__fpecode");
extern "C" extern void* __identifier("_imp____fpecode");
extern "C" extern void* __identifier("__p___argc");
extern "C" extern void* __identifier("_imp____p___argc");
extern "C" extern void* __identifier("__p___argv");
extern "C" extern void* __identifier("_imp____p___argv");
extern "C" extern void* __identifier("__p___wargv");
extern "C" extern void* __identifier("_imp____p___wargv");
extern "C" extern void* __identifier("__p__acmdln");
extern "C" extern void* __identifier("_imp____p__acmdln");
extern "C" extern void* __identifier("__p__pgmptr");
extern "C" extern void* __identifier("_imp____p__pgmptr");
extern "C" extern void* __identifier("__p__wcmdln");
extern "C" extern void* __identifier("_imp____p__wcmdln");
extern "C" extern void* __identifier("__p__wpgmptr");
extern "C" extern void* __identifier("_imp____p__wpgmptr");
extern "C" extern void* __identifier("__pxcptinfoptrs");
extern "C" extern void* __identifier("_imp____pxcptinfoptrs");
extern "C" extern void* __identifier("__sys_errlist");
extern "C" extern void* __identifier("_imp____sys_errlist");
extern "C" extern void* __identifier("__sys_nerr");
extern "C" extern void* __identifier("_imp____sys_nerr");
extern "C" extern void* __identifier("__threadhandle");
extern "C" extern void* __identifier("_imp____threadhandle");
extern "C" extern void* __identifier("__threadid");
extern "C" extern void* __identifier("_imp____threadid");
extern "C" extern void* __identifier("__wcserror");
extern "C" extern void* __identifier("_imp____wcserror");
extern "C" extern void* __identifier("__wcserror_s");
extern "C" extern void* __identifier("_imp____wcserror_s");
extern "C" extern void* __identifier("_assert");
extern "C" extern void* __identifier("_imp___assert");
extern "C" extern void* __identifier("_beginthread");
extern "C" extern void* __identifier("_imp___beginthread");
extern "C" extern void* __identifier("_beginthreadex");
extern "C" extern void* __identifier("_imp___beginthreadex");
extern "C" extern void* __identifier("_c_exit");
extern "C" extern void* __identifier("_imp___c_exit");
extern "C" extern void* __identifier("_cexit");
extern "C" extern void* __identifier("_imp___cexit");
extern "C" extern void* __identifier("_clearfp");
extern "C" extern void* __identifier("_imp___clearfp");
extern "C" extern void* __identifier("_configure_narrow_argv");
extern "C" extern void* __identifier("_imp___configure_narrow_argv");
extern "C" extern void* __identifier("_configure_wide_argv");
extern "C" extern void* __identifier("_imp___configure_wide_argv");
extern "C" extern void* __identifier("_control87");
extern "C" extern void* __identifier("_imp___control87");
extern "C" extern void* __identifier("_controlfp");
extern "C" extern void* __identifier("_imp___controlfp");
extern "C" extern void* __identifier("_controlfp_s");
extern "C" extern void* __identifier("_imp___controlfp_s");
extern "C" extern void* __identifier("_crt_at_quick_exit");
extern "C" extern void* __identifier("_imp___crt_at_quick_exit");
extern "C" extern void* __identifier("_crt_atexit");
extern "C" extern void* __identifier("_imp___crt_atexit");
extern "C" extern void* __identifier("_crt_debugger_hook");
extern "C" extern void* __identifier("_imp___crt_debugger_hook");
extern "C" extern void* __identifier("_endthread");
extern "C" extern void* __identifier("_imp___endthread");
extern "C" extern void* __identifier("_endthreadex");
extern "C" extern void* __identifier("_imp___endthreadex");
extern "C" extern void* __identifier("_errno");
extern "C" extern void* __identifier("_imp___errno");
extern "C" extern void* __identifier("_execute_onexit_table");
extern "C" extern void* __identifier("_imp___execute_onexit_table");
extern "C" extern void* __identifier("_exit");
extern "C" extern void* __identifier("_imp___exit");
extern "C" extern void* __identifier("_fpieee_flt");
extern "C" extern void* __identifier("_imp___fpieee_flt");
extern "C" extern void* __identifier("_fpreset");
extern "C" extern void* __identifier("_imp___fpreset");
extern "C" extern void* __identifier("_get_doserrno");
extern "C" extern void* __identifier("_imp___get_doserrno");
extern "C" extern void* __identifier("_get_errno");
extern "C" extern void* __identifier("_imp___get_errno");
extern "C" extern void* __identifier("_get_initial_narrow_environment");
extern "C" extern void* __identifier("_imp___get_initial_narrow_environment");
extern "C" extern void* __identifier("_get_initial_wide_environment");
extern "C" extern void* __identifier("_imp___get_initial_wide_environment");
extern "C" extern void* __identifier("_get_invalid_parameter_handler");
extern "C" extern void* __identifier("_imp___get_invalid_parameter_handler");
extern "C" extern void* __identifier("_get_narrow_winmain_command_line");
extern "C" extern void* __identifier("_imp___get_narrow_winmain_command_line");
extern "C" extern void* __identifier("_get_pgmptr");
extern "C" extern void* __identifier("_imp___get_pgmptr");
extern "C" extern void* __identifier("_get_terminate");
extern "C" extern void* __identifier("_imp___get_terminate");
extern "C" extern void* __identifier("_get_thread_local_invalid_parameter_handler");
extern "C" extern void* __identifier("_imp___get_thread_local_invalid_parameter_handler");
extern "C" extern void* __identifier("_get_wide_winmain_command_line");
extern "C" extern void* __identifier("_imp___get_wide_winmain_command_line");
extern "C" extern void* __identifier("_get_wpgmptr");
extern "C" extern void* __identifier("_imp___get_wpgmptr");
extern "C" extern void* __identifier("_getdllprocaddr");
extern "C" extern void* __identifier("_imp___getdllprocaddr");
extern "C" extern void* __identifier("_getpid");
extern "C" extern void* __identifier("_imp___getpid");
extern "C" extern void* __identifier("_initialize_narrow_environment");
extern "C" extern void* __identifier("_imp___initialize_narrow_environment");
extern "C" extern void* __identifier("_initialize_onexit_table");
extern "C" extern void* __identifier("_imp___initialize_onexit_table");
extern "C" extern void* __identifier("_initialize_wide_environment");
extern "C" extern void* __identifier("_imp___initialize_wide_environment");
extern "C" extern void* __identifier("_initterm");
extern "C" extern void* __identifier("_imp___initterm");
extern "C" extern void* __identifier("_initterm_e");
extern "C" extern void* __identifier("_imp___initterm_e");
extern "C" extern void* __identifier("_invalid_parameter_noinfo");
extern "C" extern void* __identifier("_imp___invalid_parameter_noinfo");
extern "C" extern void* __identifier("_invalid_parameter_noinfo_noreturn");
extern "C" extern void* __identifier("_imp___invalid_parameter_noinfo_noreturn");
extern "C" extern void* __identifier("_invoke_watson");
extern "C" extern void* __identifier("_imp___invoke_watson");
extern "C" extern void* __identifier("_query_app_type");
extern "C" extern void* __identifier("_imp___query_app_type");
extern "C" extern void* __identifier("_register_onexit_function");
extern "C" extern void* __identifier("_imp___register_onexit_function");
extern "C" extern void* __identifier("_register_thread_local_exe_atexit_callback");
extern "C" extern void* __identifier("_imp___register_thread_local_exe_atexit_callback");
extern "C" extern void* __identifier("_resetstkoflw");
extern "C" extern void* __identifier("_imp___resetstkoflw");
extern "C" extern void* __identifier("_seh_filter_dll");
extern "C" extern void* __identifier("_imp___seh_filter_dll");
extern "C" extern void* __identifier("_seh_filter_exe");
extern "C" extern void* __identifier("_imp___seh_filter_exe");
extern "C" extern void* __identifier("_set_abort_behavior");
extern "C" extern void* __identifier("_imp___set_abort_behavior");
extern "C" extern void* __identifier("_set_app_type");
extern "C" extern void* __identifier("_imp___set_app_type");
extern "C" extern void* __identifier("_set_controlfp");
extern "C" extern void* __identifier("_imp___set_controlfp");
extern "C" extern void* __identifier("_set_doserrno");
extern "C" extern void* __identifier("_imp___set_doserrno");
extern "C" extern void* __identifier("_set_errno");
extern "C" extern void* __identifier("_imp___set_errno");
extern "C" extern void* __identifier("_set_error_mode");
extern "C" extern void* __identifier("_imp___set_error_mode");
extern "C" extern void* __identifier("_set_invalid_parameter_handler");
extern "C" extern void* __identifier("_imp___set_invalid_parameter_handler");
extern "C" extern void* __identifier("_set_new_handler");
extern "C" extern void* __identifier("_imp___set_new_handler");
extern "C" extern void* __identifier("_set_thread_local_invalid_parameter_handler");
extern "C" extern void* __identifier("_imp___set_thread_local_invalid_parameter_handler");
extern "C" extern void* __identifier("_seterrormode");
extern "C" extern void* __identifier("_imp___seterrormode");
extern "C" extern void* __identifier("_sleep");
extern "C" extern void* __identifier("_imp___sleep");
extern "C" extern void* __identifier("_statusfp");
extern "C" extern void* __identifier("_imp___statusfp");
extern "C" extern void* __identifier("_statusfp2");
extern "C" extern void* __identifier("_imp___statusfp2");
extern "C" extern void* __identifier("_strerror");
extern "C" extern void* __identifier("_imp___strerror");
extern "C" extern void* __identifier("_strerror_s");
extern "C" extern void* __identifier("_imp___strerror_s");
extern "C" extern void* __identifier("_wassert");
extern "C" extern void* __identifier("_imp___wassert");
extern "C" extern void* __identifier("_wcserror");
extern "C" extern void* __identifier("_imp___wcserror");
extern "C" extern void* __identifier("_wcserror_s");
extern "C" extern void* __identifier("_imp___wcserror_s");
extern "C" extern void* __identifier("_wperror");
extern "C" extern void* __identifier("_imp___wperror");
extern "C" extern void* __identifier("_wsystem");
extern "C" extern void* __identifier("_imp___wsystem");
extern "C" extern void* __identifier("abort");
extern "C" extern void* __identifier("_imp__abort");
extern "C" extern void* __identifier("exit");
extern "C" extern void* __identifier("_imp__exit");
extern "C" extern void* __identifier("feclearexcept");
extern "C" extern void* __identifier("_imp__feclearexcept");
extern "C" extern void* __identifier("fegetenv");
extern "C" extern void* __identifier("_imp__fegetenv");
extern "C" extern void* __identifier("fegetexceptflag");
extern "C" extern void* __identifier("_imp__fegetexceptflag");
extern "C" extern void* __identifier("fegetround");
extern "C" extern void* __identifier("_imp__fegetround");
extern "C" extern void* __identifier("feholdexcept");
extern "C" extern void* __identifier("_imp__feholdexcept");
extern "C" extern void* __identifier("fesetenv");
extern "C" extern void* __identifier("_imp__fesetenv");
extern "C" extern void* __identifier("fesetexceptflag");
extern "C" extern void* __identifier("_imp__fesetexceptflag");
extern "C" extern void* __identifier("fesetround");
extern "C" extern void* __identifier("_imp__fesetround");
extern "C" extern void* __identifier("fetestexcept");
extern "C" extern void* __identifier("_imp__fetestexcept");
extern "C" extern void* __identifier("perror");
extern "C" extern void* __identifier("_imp__perror");
extern "C" extern void* __identifier("quick_exit");
extern "C" extern void* __identifier("_imp__quick_exit");
extern "C" extern void* __identifier("raise");
extern "C" extern void* __identifier("_imp__raise");
extern "C" extern void* __identifier("set_terminate");
extern "C" extern void* __identifier("_imp__set_terminate");
extern "C" extern void* __identifier("signal");
extern "C" extern void* __identifier("_imp__signal");
extern "C" extern void* __identifier("strerror");
extern "C" extern void* __identifier("_imp__strerror");
extern "C" extern void* __identifier("strerror_s");
extern "C" extern void* __identifier("_imp__strerror_s");
extern "C" extern void* __identifier("system");
extern "C" extern void* __identifier("_imp__system");
extern "C" extern void* __identifier("terminate");
extern "C" extern void* __identifier("_imp__terminate");
extern "C" extern void* __identifier("__acrt_iob_func");
extern "C" extern void* __identifier("_imp____acrt_iob_func");
extern "C" extern void* __identifier("__p__commode");
extern "C" extern void* __identifier("_imp____p__commode");
extern "C" extern void* __identifier("__p__fmode");
extern "C" extern void* __identifier("_imp____p__fmode");
extern "C" extern void* __identifier("__stdio_common_vfprintf");
extern "C" extern void* __identifier("_imp____stdio_common_vfprintf");
extern "C" extern void* __identifier("__stdio_common_vfprintf_p");
extern "C" extern void* __identifier("_imp____stdio_common_vfprintf_p");
extern "C" extern void* __identifier("__stdio_common_vfprintf_s");
extern "C" extern void* __identifier("_imp____stdio_common_vfprintf_s");
extern "C" extern void* __identifier("__stdio_common_vfscanf");
extern "C" extern void* __identifier("_imp____stdio_common_vfscanf");
extern "C" extern void* __identifier("__stdio_common_vfwprintf");
extern "C" extern void* __identifier("_imp____stdio_common_vfwprintf");
extern "C" extern void* __identifier("__stdio_common_vfwprintf_p");
extern "C" extern void* __identifier("_imp____stdio_common_vfwprintf_p");
extern "C" extern void* __identifier("__stdio_common_vfwprintf_s");
extern "C" extern void* __identifier("_imp____stdio_common_vfwprintf_s");
extern "C" extern void* __identifier("__stdio_common_vfwscanf");
extern "C" extern void* __identifier("_imp____stdio_common_vfwscanf");
extern "C" extern void* __identifier("__stdio_common_vsnprintf_s");
extern "C" extern void* __identifier("_imp____stdio_common_vsnprintf_s");
extern "C" extern void* __identifier("__stdio_common_vsnwprintf_s");
extern "C" extern void* __identifier("_imp____stdio_common_vsnwprintf_s");
extern "C" extern void* __identifier("__stdio_common_vsprintf");
extern "C" extern void* __identifier("_imp____stdio_common_vsprintf");
extern "C" extern void* __identifier("__stdio_common_vsprintf_p");
extern "C" extern void* __identifier("_imp____stdio_common_vsprintf_p");
extern "C" extern void* __identifier("__stdio_common_vsprintf_s");
extern "C" extern void* __identifier("_imp____stdio_common_vsprintf_s");
extern "C" extern void* __identifier("__stdio_common_vsscanf");
extern "C" extern void* __identifier("_imp____stdio_common_vsscanf");
extern "C" extern void* __identifier("__stdio_common_vswprintf");
extern "C" extern void* __identifier("_imp____stdio_common_vswprintf");
extern "C" extern void* __identifier("__stdio_common_vswprintf_p");
extern "C" extern void* __identifier("_imp____stdio_common_vswprintf_p");
extern "C" extern void* __identifier("__stdio_common_vswprintf_s");
extern "C" extern void* __identifier("_imp____stdio_common_vswprintf_s");
extern "C" extern void* __identifier("__stdio_common_vswscanf");
extern "C" extern void* __identifier("_imp____stdio_common_vswscanf");
extern "C" extern void* __identifier("_chsize");
extern "C" extern void* __identifier("_imp___chsize");
extern "C" extern void* __identifier("_chsize_s");
extern "C" extern void* __identifier("_imp___chsize_s");
extern "C" extern void* __identifier("_close");
extern "C" extern void* __identifier("_imp___close");
extern "C" extern void* __identifier("_commit");
extern "C" extern void* __identifier("_imp___commit");
extern "C" extern void* __identifier("_creat");
extern "C" extern void* __identifier("_imp___creat");
extern "C" extern void* __identifier("_dup");
extern "C" extern void* __identifier("_imp___dup");
extern "C" extern void* __identifier("_dup2");
extern "C" extern void* __identifier("_imp___dup2");
extern "C" extern void* __identifier("_eof");
extern "C" extern void* __identifier("_imp___eof");
extern "C" extern void* __identifier("_fcloseall");
extern "C" extern void* __identifier("_imp___fcloseall");
extern "C" extern void* __identifier("_fgetchar");
extern "C" extern void* __identifier("_imp___fgetchar");
extern "C" extern void* __identifier("_fgetwchar");
extern "C" extern void* __identifier("_imp___fgetwchar");
extern "C" extern void* __identifier("_filelength");
extern "C" extern void* __identifier("_imp___filelength");
extern "C" extern void* __identifier("_filelengthi64");
extern "C" extern void* __identifier("_imp___filelengthi64");
extern "C" extern void* __identifier("_fileno");
extern "C" extern void* __identifier("_imp___fileno");
extern "C" extern void* __identifier("_flushall");
extern "C" extern void* __identifier("_imp___flushall");
extern "C" extern void* __identifier("_fputchar");
extern "C" extern void* __identifier("_imp___fputchar");
extern "C" extern void* __identifier("_fputwchar");
extern "C" extern void* __identifier("_imp___fputwchar");
extern "C" extern void* __identifier("_fseeki64");
extern "C" extern void* __identifier("_imp___fseeki64");
extern "C" extern void* __identifier("_fsopen");
extern "C" extern void* __identifier("_imp___fsopen");
extern "C" extern void* __identifier("_ftelli64");
extern "C" extern void* __identifier("_imp___ftelli64");
extern "C" extern void* __identifier("_get_fmode");
extern "C" extern void* __identifier("_imp___get_fmode");
extern "C" extern void* __identifier("_get_osfhandle");
extern "C" extern void* __identifier("_imp___get_osfhandle");
extern "C" extern void* __identifier("_get_printf_count_output");
extern "C" extern void* __identifier("_imp___get_printf_count_output");
extern "C" extern void* __identifier("_get_stream_buffer_pointers");
extern "C" extern void* __identifier("_imp___get_stream_buffer_pointers");
extern "C" extern void* __identifier("_getcwd");
extern "C" extern void* __identifier("_imp___getcwd");
extern "C" extern void* __identifier("_getdcwd");
extern "C" extern void* __identifier("_imp___getdcwd");
extern "C" extern void* __identifier("_getmaxstdio");
extern "C" extern void* __identifier("_imp___getmaxstdio");
extern "C" extern void* __identifier("_getw");
extern "C" extern void* __identifier("_imp___getw");
extern "C" extern void* __identifier("_getws");
extern "C" extern void* __identifier("_imp___getws");
extern "C" extern void* __identifier("_getws_s");
extern "C" extern void* __identifier("_imp___getws_s");
extern "C" extern void* __identifier("_isatty");
extern "C" extern void* __identifier("_imp___isatty");
extern "C" extern void* __identifier("_kbhit");
extern "C" extern void* __identifier("_imp___kbhit");
extern "C" extern void* __identifier("_locking");
extern "C" extern void* __identifier("_imp___locking");
extern "C" extern void* __identifier("_lseek");
extern "C" extern void* __identifier("_imp___lseek");
extern "C" extern void* __identifier("_lseeki64");
extern "C" extern void* __identifier("_imp___lseeki64");
extern "C" extern void* __identifier("_mktemp");
extern "C" extern void* __identifier("_imp___mktemp");
extern "C" extern void* __identifier("_mktemp_s");
extern "C" extern void* __identifier("_imp___mktemp_s");
extern "C" extern void* __identifier("_open");
extern "C" extern void* __identifier("_imp___open");
extern "C" extern void* __identifier("_open_osfhandle");
extern "C" extern void* __identifier("_imp___open_osfhandle");
extern "C" extern void* __identifier("_pclose");
extern "C" extern void* __identifier("_imp___pclose");
extern "C" extern void* __identifier("_pipe");
extern "C" extern void* __identifier("_imp___pipe");
extern "C" extern void* __identifier("_popen");
extern "C" extern void* __identifier("_imp___popen");
extern "C" extern void* __identifier("_putw");
extern "C" extern void* __identifier("_imp___putw");
extern "C" extern void* __identifier("_putws");
extern "C" extern void* __identifier("_imp___putws");
extern "C" extern void* __identifier("_read");
extern "C" extern void* __identifier("_imp___read");
extern "C" extern void* __identifier("_rmtmp");
extern "C" extern void* __identifier("_imp___rmtmp");
extern "C" extern void* __identifier("_set_fmode");
extern "C" extern void* __identifier("_imp___set_fmode");
extern "C" extern void* __identifier("_set_printf_count_output");
extern "C" extern void* __identifier("_imp___set_printf_count_output");
extern "C" extern void* __identifier("_setmaxstdio");
extern "C" extern void* __identifier("_imp___setmaxstdio");
extern "C" extern void* __identifier("_setmode");
extern "C" extern void* __identifier("_imp___setmode");
extern "C" extern void* __identifier("_sopen");
extern "C" extern void* __identifier("_imp___sopen");
extern "C" extern void* __identifier("_sopen_dispatch");
extern "C" extern void* __identifier("_imp___sopen_dispatch");
extern "C" extern void* __identifier("_sopen_s");
extern "C" extern void* __identifier("_imp___sopen_s");
extern "C" extern void* __identifier("_tell");
extern "C" extern void* __identifier("_imp___tell");
extern "C" extern void* __identifier("_telli64");
extern "C" extern void* __identifier("_imp___telli64");
extern "C" extern void* __identifier("_tempnam");
extern "C" extern void* __identifier("_imp___tempnam");
extern "C" extern void* __identifier("_wcreat");
extern "C" extern void* __identifier("_imp___wcreat");
extern "C" extern void* __identifier("_wfdopen");
extern "C" extern void* __identifier("_imp___wfdopen");
extern "C" extern void* __identifier("_wfopen");
extern "C" extern void* __identifier("_imp___wfopen");
extern "C" extern void* __identifier("_wfopen_s");
extern "C" extern void* __identifier("_imp___wfopen_s");
extern "C" extern void* __identifier("_wfreopen");
extern "C" extern void* __identifier("_imp___wfreopen");
extern "C" extern void* __identifier("_wfreopen_s");
extern "C" extern void* __identifier("_imp___wfreopen_s");
extern "C" extern void* __identifier("_wfsopen");
extern "C" extern void* __identifier("_imp___wfsopen");
extern "C" extern void* __identifier("_wmktemp");
extern "C" extern void* __identifier("_imp___wmktemp");
extern "C" extern void* __identifier("_wmktemp_s");
extern "C" extern void* __identifier("_imp___wmktemp_s");
extern "C" extern void* __identifier("_wopen");
extern "C" extern void* __identifier("_imp___wopen");
extern "C" extern void* __identifier("_wpopen");
extern "C" extern void* __identifier("_imp___wpopen");
extern "C" extern void* __identifier("_write");
extern "C" extern void* __identifier("_imp___write");
extern "C" extern void* __identifier("_wsopen");
extern "C" extern void* __identifier("_imp___wsopen");
extern "C" extern void* __identifier("_wsopen_dispatch");
extern "C" extern void* __identifier("_imp___wsopen_dispatch");
extern "C" extern void* __identifier("_wsopen_s");
extern "C" extern void* __identifier("_imp___wsopen_s");
extern "C" extern void* __identifier("_wtempnam");
extern "C" extern void* __identifier("_imp___wtempnam");
extern "C" extern void* __identifier("_wtmpnam");
extern "C" extern void* __identifier("_imp___wtmpnam");
extern "C" extern void* __identifier("_wtmpnam_s");
extern "C" extern void* __identifier("_imp___wtmpnam_s");
extern "C" extern void* __identifier("clearerr");
extern "C" extern void* __identifier("_imp__clearerr");
extern "C" extern void* __identifier("clearerr_s");
extern "C" extern void* __identifier("_imp__clearerr_s");
extern "C" extern void* __identifier("fclose");
extern "C" extern void* __identifier("_imp__fclose");
extern "C" extern void* __identifier("feof");
extern "C" extern void* __identifier("_imp__feof");
extern "C" extern void* __identifier("ferror");
extern "C" extern void* __identifier("_imp__ferror");
extern "C" extern void* __identifier("fflush");
extern "C" extern void* __identifier("_imp__fflush");
extern "C" extern void* __identifier("fgetc");
extern "C" extern void* __identifier("_imp__fgetc");
extern "C" extern void* __identifier("fgetpos");
extern "C" extern void* __identifier("_imp__fgetpos");
extern "C" extern void* __identifier("fgets");
extern "C" extern void* __identifier("_imp__fgets");
extern "C" extern void* __identifier("fgetwc");
extern "C" extern void* __identifier("_imp__fgetwc");
extern "C" extern void* __identifier("fgetws");
extern "C" extern void* __identifier("_imp__fgetws");
extern "C" extern void* __identifier("fopen");
extern "C" extern void* __identifier("_imp__fopen");
extern "C" extern void* __identifier("fopen_s");
extern "C" extern void* __identifier("_imp__fopen_s");
extern "C" extern void* __identifier("fputc");
extern "C" extern void* __identifier("_imp__fputc");
extern "C" extern void* __identifier("fputs");
extern "C" extern void* __identifier("_imp__fputs");
extern "C" extern void* __identifier("fputwc");
extern "C" extern void* __identifier("_imp__fputwc");
extern "C" extern void* __identifier("fputws");
extern "C" extern void* __identifier("_imp__fputws");
extern "C" extern void* __identifier("fread");
extern "C" extern void* __identifier("_imp__fread");
extern "C" extern void* __identifier("fread_s");
extern "C" extern void* __identifier("_imp__fread_s");
extern "C" extern void* __identifier("freopen");
extern "C" extern void* __identifier("_imp__freopen");
extern "C" extern void* __identifier("freopen_s");
extern "C" extern void* __identifier("_imp__freopen_s");
extern "C" extern void* __identifier("fseek");
extern "C" extern void* __identifier("_imp__fseek");
extern "C" extern void* __identifier("fsetpos");
extern "C" extern void* __identifier("_imp__fsetpos");
extern "C" extern void* __identifier("ftell");
extern "C" extern void* __identifier("_imp__ftell");
extern "C" extern void* __identifier("fwrite");
extern "C" extern void* __identifier("_imp__fwrite");
extern "C" extern void* __identifier("getc");
extern "C" extern void* __identifier("_imp__getc");
extern "C" extern void* __identifier("getchar");
extern "C" extern void* __identifier("_imp__getchar");
extern "C" extern void* __identifier("gets");
extern "C" extern void* __identifier("_imp__gets");
extern "C" extern void* __identifier("gets_s");
extern "C" extern void* __identifier("_imp__gets_s");
extern "C" extern void* __identifier("getwc");
extern "C" extern void* __identifier("_imp__getwc");
extern "C" extern void* __identifier("getwchar");
extern "C" extern void* __identifier("_imp__getwchar");
extern "C" extern void* __identifier("putc");
extern "C" extern void* __identifier("_imp__putc");
extern "C" extern void* __identifier("putchar");
extern "C" extern void* __identifier("_imp__putchar");
extern "C" extern void* __identifier("puts");
extern "C" extern void* __identifier("_imp__puts");
extern "C" extern void* __identifier("putwc");
extern "C" extern void* __identifier("_imp__putwc");
extern "C" extern void* __identifier("putwchar");
extern "C" extern void* __identifier("_imp__putwchar");
extern "C" extern void* __identifier("rewind");
extern "C" extern void* __identifier("_imp__rewind");
extern "C" extern void* __identifier("setbuf");
extern "C" extern void* __identifier("_imp__setbuf");
extern "C" extern void* __identifier("setvbuf");
extern "C" extern void* __identifier("_imp__setvbuf");
extern "C" extern void* __identifier("tmpfile");
extern "C" extern void* __identifier("_imp__tmpfile");
extern "C" extern void* __identifier("tmpfile_s");
extern "C" extern void* __identifier("_imp__tmpfile_s");
extern "C" extern void* __identifier("tmpnam");
extern "C" extern void* __identifier("_imp__tmpnam");
extern "C" extern void* __identifier("tmpnam_s");
extern "C" extern void* __identifier("_imp__tmpnam_s");
extern "C" extern void* __identifier("ungetc");
extern "C" extern void* __identifier("_imp__ungetc");
extern "C" extern void* __identifier("ungetwc");
extern "C" extern void* __identifier("_imp__ungetwc");
extern "C" extern void* __identifier("__isascii");
extern "C" extern void* __identifier("_imp____isascii");
extern "C" extern void* __identifier("__iscsym");
extern "C" extern void* __identifier("_imp____iscsym");
extern "C" extern void* __identifier("__iscsymf");
extern "C" extern void* __identifier("_imp____iscsymf");
extern "C" extern void* __identifier("__iswcsym");
extern "C" extern void* __identifier("_imp____iswcsym");
extern "C" extern void* __identifier("__iswcsymf");
extern "C" extern void* __identifier("_imp____iswcsymf");
extern "C" extern void* __identifier("__strncnt");
extern "C" extern void* __identifier("_imp____strncnt");
extern "C" extern void* __identifier("__wcsncnt");
extern "C" extern void* __identifier("_imp____wcsncnt");
extern "C" extern void* __identifier("_isalnum_l");
extern "C" extern void* __identifier("_imp___isalnum_l");
extern "C" extern void* __identifier("_isalpha_l");
extern "C" extern void* __identifier("_imp___isalpha_l");
extern "C" extern void* __identifier("_isblank_l");
extern "C" extern void* __identifier("_imp___isblank_l");
extern "C" extern void* __identifier("_iscntrl_l");
extern "C" extern void* __identifier("_imp___iscntrl_l");
extern "C" extern void* __identifier("_isctype");
extern "C" extern void* __identifier("_imp___isctype");
extern "C" extern void* __identifier("_isctype_l");
extern "C" extern void* __identifier("_imp___isctype_l");
extern "C" extern void* __identifier("_isdigit_l");
extern "C" extern void* __identifier("_imp___isdigit_l");
extern "C" extern void* __identifier("_isgraph_l");
extern "C" extern void* __identifier("_imp___isgraph_l");
extern "C" extern void* __identifier("_isleadbyte_l");
extern "C" extern void* __identifier("_imp___isleadbyte_l");
extern "C" extern void* __identifier("_islower_l");
extern "C" extern void* __identifier("_imp___islower_l");
extern "C" extern void* __identifier("_isprint_l");
extern "C" extern void* __identifier("_imp___isprint_l");
extern "C" extern void* __identifier("_ispunct_l");
extern "C" extern void* __identifier("_imp___ispunct_l");
extern "C" extern void* __identifier("_isspace_l");
extern "C" extern void* __identifier("_imp___isspace_l");
extern "C" extern void* __identifier("_isupper_l");
extern "C" extern void* __identifier("_imp___isupper_l");
extern "C" extern void* __identifier("_iswalnum_l");
extern "C" extern void* __identifier("_imp___iswalnum_l");
extern "C" extern void* __identifier("_iswalpha_l");
extern "C" extern void* __identifier("_imp___iswalpha_l");
extern "C" extern void* __identifier("_iswblank_l");
extern "C" extern void* __identifier("_imp___iswblank_l");
extern "C" extern void* __identifier("_iswcntrl_l");
extern "C" extern void* __identifier("_imp___iswcntrl_l");
extern "C" extern void* __identifier("_iswcsym_l");
extern "C" extern void* __identifier("_imp___iswcsym_l");
extern "C" extern void* __identifier("_iswcsymf_l");
extern "C" extern void* __identifier("_imp___iswcsymf_l");
extern "C" extern void* __identifier("_iswctype_l");
extern "C" extern void* __identifier("_imp___iswctype_l");
extern "C" extern void* __identifier("_iswdigit_l");
extern "C" extern void* __identifier("_imp___iswdigit_l");
extern "C" extern void* __identifier("_iswgraph_l");
extern "C" extern void* __identifier("_imp___iswgraph_l");
extern "C" extern void* __identifier("_iswlower_l");
extern "C" extern void* __identifier("_imp___iswlower_l");
extern "C" extern void* __identifier("_iswprint_l");
extern "C" extern void* __identifier("_imp___iswprint_l");
extern "C" extern void* __identifier("_iswpunct_l");
extern "C" extern void* __identifier("_imp___iswpunct_l");
extern "C" extern void* __identifier("_iswspace_l");
extern "C" extern void* __identifier("_imp___iswspace_l");
extern "C" extern void* __identifier("_iswupper_l");
extern "C" extern void* __identifier("_imp___iswupper_l");
extern "C" extern void* __identifier("_iswxdigit_l");
extern "C" extern void* __identifier("_imp___iswxdigit_l");
extern "C" extern void* __identifier("_isxdigit_l");
extern "C" extern void* __identifier("_imp___isxdigit_l");
extern "C" extern void* __identifier("_memccpy");
extern "C" extern void* __identifier("_imp___memccpy");
extern "C" extern void* __identifier("_memicmp");
extern "C" extern void* __identifier("_imp___memicmp");
extern "C" extern void* __identifier("_memicmp_l");
extern "C" extern void* __identifier("_imp___memicmp_l");
extern "C" extern void* __identifier("_strcoll_l");
extern "C" extern void* __identifier("_imp___strcoll_l");
extern "C" extern void* __identifier("_strdup");
extern "C" extern void* __identifier("_imp___strdup");
extern "C" extern void* __identifier("_stricmp");
extern "C" extern void* __identifier("_imp___stricmp");
extern "C" extern void* __identifier("_stricmp_l");
extern "C" extern void* __identifier("_imp___stricmp_l");
extern "C" extern void* __identifier("_stricoll");
extern "C" extern void* __identifier("_imp___stricoll");
extern "C" extern void* __identifier("_stricoll_l");
extern "C" extern void* __identifier("_imp___stricoll_l");
extern "C" extern void* __identifier("_strlwr");
extern "C" extern void* __identifier("_imp___strlwr");
extern "C" extern void* __identifier("_strlwr_l");
extern "C" extern void* __identifier("_imp___strlwr_l");
extern "C" extern void* __identifier("_strlwr_s");
extern "C" extern void* __identifier("_imp___strlwr_s");
extern "C" extern void* __identifier("_strlwr_s_l");
extern "C" extern void* __identifier("_imp___strlwr_s_l");
extern "C" extern void* __identifier("_strncoll");
extern "C" extern void* __identifier("_imp___strncoll");
extern "C" extern void* __identifier("_strncoll_l");
extern "C" extern void* __identifier("_imp___strncoll_l");
extern "C" extern void* __identifier("_strnicmp");
extern "C" extern void* __identifier("_imp___strnicmp");
extern "C" extern void* __identifier("_strnicmp_l");
extern "C" extern void* __identifier("_imp___strnicmp_l");
extern "C" extern void* __identifier("_strnicoll");
extern "C" extern void* __identifier("_imp___strnicoll");
extern "C" extern void* __identifier("_strnicoll_l");
extern "C" extern void* __identifier("_imp___strnicoll_l");
extern "C" extern void* __identifier("_strnset");
extern "C" extern void* __identifier("_imp___strnset");
extern "C" extern void* __identifier("_strnset_s");
extern "C" extern void* __identifier("_imp___strnset_s");
extern "C" extern void* __identifier("_strrev");
extern "C" extern void* __identifier("_imp___strrev");
extern "C" extern void* __identifier("_strset");
extern "C" extern void* __identifier("_imp___strset");
extern "C" extern void* __identifier("_strset_s");
extern "C" extern void* __identifier("_imp___strset_s");
extern "C" extern void* __identifier("_strupr");
extern "C" extern void* __identifier("_imp___strupr");
extern "C" extern void* __identifier("_strupr_l");
extern "C" extern void* __identifier("_imp___strupr_l");
extern "C" extern void* __identifier("_strupr_s");
extern "C" extern void* __identifier("_imp___strupr_s");
extern "C" extern void* __identifier("_strupr_s_l");
extern "C" extern void* __identifier("_imp___strupr_s_l");
extern "C" extern void* __identifier("_strxfrm_l");
extern "C" extern void* __identifier("_imp___strxfrm_l");
extern "C" extern void* __identifier("_tolower");
extern "C" extern void* __identifier("_imp___tolower");
extern "C" extern void* __identifier("_tolower_l");
extern "C" extern void* __identifier("_imp___tolower_l");
extern "C" extern void* __identifier("_toupper");
extern "C" extern void* __identifier("_imp___toupper");
extern "C" extern void* __identifier("_toupper_l");
extern "C" extern void* __identifier("_imp___toupper_l");
extern "C" extern void* __identifier("_towlower_l");
extern "C" extern void* __identifier("_imp___towlower_l");
extern "C" extern void* __identifier("_towupper_l");
extern "C" extern void* __identifier("_imp___towupper_l");
extern "C" extern void* __identifier("_wcscoll_l");
extern "C" extern void* __identifier("_imp___wcscoll_l");
extern "C" extern void* __identifier("_wcsdup");
extern "C" extern void* __identifier("_imp___wcsdup");
extern "C" extern void* __identifier("_wcsicmp");
extern "C" extern void* __identifier("_imp___wcsicmp");
extern "C" extern void* __identifier("_wcsicmp_l");
extern "C" extern void* __identifier("_imp___wcsicmp_l");
extern "C" extern void* __identifier("_wcsicoll");
extern "C" extern void* __identifier("_imp___wcsicoll");
extern "C" extern void* __identifier("_wcsicoll_l");
extern "C" extern void* __identifier("_imp___wcsicoll_l");
extern "C" extern void* __identifier("_wcslwr");
extern "C" extern void* __identifier("_imp___wcslwr");
extern "C" extern void* __identifier("_wcslwr_l");
extern "C" extern void* __identifier("_imp___wcslwr_l");
extern "C" extern void* __identifier("_wcslwr_s");
extern "C" extern void* __identifier("_imp___wcslwr_s");
extern "C" extern void* __identifier("_wcslwr_s_l");
extern "C" extern void* __identifier("_imp___wcslwr_s_l");
extern "C" extern void* __identifier("_wcsncoll");
extern "C" extern void* __identifier("_imp___wcsncoll");
extern "C" extern void* __identifier("_wcsncoll_l");
extern "C" extern void* __identifier("_imp___wcsncoll_l");
extern "C" extern void* __identifier("_wcsnicmp");
extern "C" extern void* __identifier("_imp___wcsnicmp");
extern "C" extern void* __identifier("_wcsnicmp_l");
extern "C" extern void* __identifier("_imp___wcsnicmp_l");
extern "C" extern void* __identifier("_wcsnicoll");
extern "C" extern void* __identifier("_imp___wcsnicoll");
extern "C" extern void* __identifier("_wcsnicoll_l");
extern "C" extern void* __identifier("_imp___wcsnicoll_l");
extern "C" extern void* __identifier("_wcsnset");
extern "C" extern void* __identifier("_imp___wcsnset");
extern "C" extern void* __identifier("_wcsnset_s");
extern "C" extern void* __identifier("_imp___wcsnset_s");
extern "C" extern void* __identifier("_wcsrev");
extern "C" extern void* __identifier("_imp___wcsrev");
extern "C" extern void* __identifier("_wcsset");
extern "C" extern void* __identifier("_imp___wcsset");
extern "C" extern void* __identifier("_wcsset_s");
extern "C" extern void* __identifier("_imp___wcsset_s");
extern "C" extern void* __identifier("_wcsupr");
extern "C" extern void* __identifier("_imp___wcsupr");
extern "C" extern void* __identifier("_wcsupr_l");
extern "C" extern void* __identifier("_imp___wcsupr_l");
extern "C" extern void* __identifier("_wcsupr_s");
extern "C" extern void* __identifier("_imp___wcsupr_s");
extern "C" extern void* __identifier("_wcsupr_s_l");
extern "C" extern void* __identifier("_imp___wcsupr_s_l");
extern "C" extern void* __identifier("_wcsxfrm_l");
extern "C" extern void* __identifier("_imp___wcsxfrm_l");
extern "C" extern void* __identifier("_wctype");
extern "C" extern void* __identifier("_imp___wctype");
extern "C" extern void* __identifier("is_wctype");
extern "C" extern void* __identifier("_imp__is_wctype");
extern "C" extern void* __identifier("isalnum");
extern "C" extern void* __identifier("_imp__isalnum");
extern "C" extern void* __identifier("isalpha");
extern "C" extern void* __identifier("_imp__isalpha");
extern "C" extern void* __identifier("isblank");
extern "C" extern void* __identifier("_imp__isblank");
extern "C" extern void* __identifier("iscntrl");
extern "C" extern void* __identifier("_imp__iscntrl");
extern "C" extern void* __identifier("isdigit");
extern "C" extern void* __identifier("_imp__isdigit");
extern "C" extern void* __identifier("isgraph");
extern "C" extern void* __identifier("_imp__isgraph");
extern "C" extern void* __identifier("isleadbyte");
extern "C" extern void* __identifier("_imp__isleadbyte");
extern "C" extern void* __identifier("islower");
extern "C" extern void* __identifier("_imp__islower");
extern "C" extern void* __identifier("isprint");
extern "C" extern void* __identifier("_imp__isprint");
extern "C" extern void* __identifier("ispunct");
extern "C" extern void* __identifier("_imp__ispunct");
extern "C" extern void* __identifier("isspace");
extern "C" extern void* __identifier("_imp__isspace");
extern "C" extern void* __identifier("isupper");
extern "C" extern void* __identifier("_imp__isupper");
extern "C" extern void* __identifier("iswalnum");
extern "C" extern void* __identifier("_imp__iswalnum");
extern "C" extern void* __identifier("iswalpha");
extern "C" extern void* __identifier("_imp__iswalpha");
extern "C" extern void* __identifier("iswascii");
extern "C" extern void* __identifier("_imp__iswascii");
extern "C" extern void* __identifier("iswblank");
extern "C" extern void* __identifier("_imp__iswblank");
extern "C" extern void* __identifier("iswcntrl");
extern "C" extern void* __identifier("_imp__iswcntrl");
extern "C" extern void* __identifier("iswctype");
extern "C" extern void* __identifier("_imp__iswctype");
extern "C" extern void* __identifier("iswdigit");
extern "C" extern void* __identifier("_imp__iswdigit");
extern "C" extern void* __identifier("iswgraph");
extern "C" extern void* __identifier("_imp__iswgraph");
extern "C" extern void* __identifier("iswlower");
extern "C" extern void* __identifier("_imp__iswlower");
extern "C" extern void* __identifier("iswprint");
extern "C" extern void* __identifier("_imp__iswprint");
extern "C" extern void* __identifier("iswpunct");
extern "C" extern void* __identifier("_imp__iswpunct");
extern "C" extern void* __identifier("iswspace");
extern "C" extern void* __identifier("_imp__iswspace");
extern "C" extern void* __identifier("iswupper");
extern "C" extern void* __identifier("_imp__iswupper");
extern "C" extern void* __identifier("iswxdigit");
extern "C" extern void* __identifier("_imp__iswxdigit");
extern "C" extern void* __identifier("isxdigit");
extern "C" extern void* __identifier("_imp__isxdigit");
extern "C" extern void* __identifier("mblen");
extern "C" extern void* __identifier("_imp__mblen");
extern "C" extern void* __identifier("mbrlen");
extern "C" extern void* __identifier("_imp__mbrlen");
extern "C" extern void* __identifier("memcpy_s");
extern "C" extern void* __identifier("_imp__memcpy_s");
extern "C" extern void* __identifier("memmove_s");
extern "C" extern void* __identifier("_imp__memmove_s");
extern "C" extern void* __identifier("strcat");
extern "C" extern void* __identifier("_imp__strcat");
extern "C" extern void* __identifier("strcat_s");
extern "C" extern void* __identifier("_imp__strcat_s");
extern "C" extern void* __identifier("strcmp");
extern "C" extern void* __identifier("_imp__strcmp");
extern "C" extern void* __identifier("strcoll");
extern "C" extern void* __identifier("_imp__strcoll");
extern "C" extern void* __identifier("strcpy");
extern "C" extern void* __identifier("_imp__strcpy");
extern "C" extern void* __identifier("strcpy_s");
extern "C" extern void* __identifier("_imp__strcpy_s");
extern "C" extern void* __identifier("strcspn");
extern "C" extern void* __identifier("_imp__strcspn");
extern "C" extern void* __identifier("strlen");
extern "C" extern void* __identifier("_imp__strlen");
extern "C" extern void* __identifier("strncat");
extern "C" extern void* __identifier("_imp__strncat");
extern "C" extern void* __identifier("strncat_s");
extern "C" extern void* __identifier("_imp__strncat_s");
extern "C" extern void* __identifier("strncmp");
extern "C" extern void* __identifier("_imp__strncmp");
extern "C" extern void* __identifier("strncpy");
extern "C" extern void* __identifier("_imp__strncpy");
extern "C" extern void* __identifier("strncpy_s");
extern "C" extern void* __identifier("_imp__strncpy_s");
extern "C" extern void* __identifier("strnlen");
extern "C" extern void* __identifier("_imp__strnlen");
extern "C" extern void* __identifier("strpbrk");
extern "C" extern void* __identifier("_imp__strpbrk");
extern "C" extern void* __identifier("strspn");
extern "C" extern void* __identifier("_imp__strspn");
extern "C" extern void* __identifier("strtok");
extern "C" extern void* __identifier("_imp__strtok");
extern "C" extern void* __identifier("strtok_s");
extern "C" extern void* __identifier("_imp__strtok_s");
extern "C" extern void* __identifier("strxfrm");
extern "C" extern void* __identifier("_imp__strxfrm");
extern "C" extern void* __identifier("tolower");
extern "C" extern void* __identifier("_imp__tolower");
extern "C" extern void* __identifier("toupper");
extern "C" extern void* __identifier("_imp__toupper");
extern "C" extern void* __identifier("towctrans");
extern "C" extern void* __identifier("_imp__towctrans");
extern "C" extern void* __identifier("towlower");
extern "C" extern void* __identifier("_imp__towlower");
extern "C" extern void* __identifier("towupper");
extern "C" extern void* __identifier("_imp__towupper");
extern "C" extern void* __identifier("wcscat");
extern "C" extern void* __identifier("_imp__wcscat");
extern "C" extern void* __identifier("wcscat_s");
extern "C" extern void* __identifier("_imp__wcscat_s");
extern "C" extern void* __identifier("wcscmp");
extern "C" extern void* __identifier("_imp__wcscmp");
extern "C" extern void* __identifier("wcscoll");
extern "C" extern void* __identifier("_imp__wcscoll");
extern "C" extern void* __identifier("wcscpy");
extern "C" extern void* __identifier("_imp__wcscpy");
extern "C" extern void* __identifier("wcscpy_s");
extern "C" extern void* __identifier("_imp__wcscpy_s");
extern "C" extern void* __identifier("wcscspn");
extern "C" extern void* __identifier("_imp__wcscspn");
extern "C" extern void* __identifier("wcslen");
extern "C" extern void* __identifier("_imp__wcslen");
extern "C" extern void* __identifier("wcsncat");
extern "C" extern void* __identifier("_imp__wcsncat");
extern "C" extern void* __identifier("wcsncat_s");
extern "C" extern void* __identifier("_imp__wcsncat_s");
extern "C" extern void* __identifier("wcsncmp");
extern "C" extern void* __identifier("_imp__wcsncmp");
extern "C" extern void* __identifier("wcsncpy");
extern "C" extern void* __identifier("_imp__wcsncpy");
extern "C" extern void* __identifier("wcsncpy_s");
extern "C" extern void* __identifier("_imp__wcsncpy_s");
extern "C" extern void* __identifier("wcsnlen");
extern "C" extern void* __identifier("_imp__wcsnlen");
extern "C" extern void* __identifier("wcspbrk");
extern "C" extern void* __identifier("_imp__wcspbrk");
extern "C" extern void* __identifier("wcsspn");
extern "C" extern void* __identifier("_imp__wcsspn");
extern "C" extern void* __identifier("wcstok");
extern "C" extern void* __identifier("_imp__wcstok");
extern "C" extern void* __identifier("wcstok_s");
extern "C" extern void* __identifier("_imp__wcstok_s");
extern "C" extern void* __identifier("wcsxfrm");
extern "C" extern void* __identifier("_imp__wcsxfrm");
extern "C" extern void* __identifier("wctype");
extern "C" extern void* __identifier("_imp__wctype");
extern "C" extern void* __identifier("wmemcpy_s");
extern "C" extern void* __identifier("_imp__wmemcpy_s");
extern "C" extern void* __identifier("wmemmove_s");
extern "C" extern void* __identifier("_imp__wmemmove_s");
extern "C" extern void* __identifier("_Getdays");
extern "C" extern void* __identifier("_imp___Getdays");
extern "C" extern void* __identifier("_Getmonths");
extern "C" extern void* __identifier("_imp___Getmonths");
extern "C" extern void* __identifier("_Gettnames");
extern "C" extern void* __identifier("_imp___Gettnames");
extern "C" extern void* __identifier("_Strftime");
extern "C" extern void* __identifier("_imp___Strftime");
extern "C" extern void* __identifier("_W_Getdays");
extern "C" extern void* __identifier("_imp___W_Getdays");
extern "C" extern void* __identifier("_W_Getmonths");
extern "C" extern void* __identifier("_imp___W_Getmonths");
extern "C" extern void* __identifier("_W_Gettnames");
extern "C" extern void* __identifier("_imp___W_Gettnames");
extern "C" extern void* __identifier("_Wcsftime");
extern "C" extern void* __identifier("_imp___Wcsftime");
extern "C" extern void* __identifier("__daylight");
extern "C" extern void* __identifier("_imp____daylight");
extern "C" extern void* __identifier("__dstbias");
extern "C" extern void* __identifier("_imp____dstbias");
extern "C" extern void* __identifier("__timezone");
extern "C" extern void* __identifier("_imp____timezone");
extern "C" extern void* __identifier("__tzname");
extern "C" extern void* __identifier("_imp____tzname");
extern "C" extern void* __identifier("_ctime32");
extern "C" extern void* __identifier("_imp___ctime32");
extern "C" extern void* __identifier("_ctime32_s");
extern "C" extern void* __identifier("_imp___ctime32_s");
extern "C" extern void* __identifier("_ctime64");
extern "C" extern void* __identifier("_imp___ctime64");
extern "C" extern void* __identifier("_ctime64_s");
extern "C" extern void* __identifier("_imp___ctime64_s");
extern "C" extern void* __identifier("_difftime32");
extern "C" extern void* __identifier("_imp___difftime32");
extern "C" extern void* __identifier("_difftime64");
extern "C" extern void* __identifier("_imp___difftime64");
extern "C" extern void* __identifier("_ftime32");
extern "C" extern void* __identifier("_imp___ftime32");
extern "C" extern void* __identifier("_ftime32_s");
extern "C" extern void* __identifier("_imp___ftime32_s");
extern "C" extern void* __identifier("_ftime64");
extern "C" extern void* __identifier("_imp___ftime64");
extern "C" extern void* __identifier("_ftime64_s");
extern "C" extern void* __identifier("_imp___ftime64_s");
extern "C" extern void* __identifier("_futime32");
extern "C" extern void* __identifier("_imp___futime32");
extern "C" extern void* __identifier("_futime64");
extern "C" extern void* __identifier("_imp___futime64");
extern "C" extern void* __identifier("_get_daylight");
extern "C" extern void* __identifier("_imp___get_daylight");
extern "C" extern void* __identifier("_get_dstbias");
extern "C" extern void* __identifier("_imp___get_dstbias");
extern "C" extern void* __identifier("_get_timezone");
extern "C" extern void* __identifier("_imp___get_timezone");
extern "C" extern void* __identifier("_get_tzname");
extern "C" extern void* __identifier("_imp___get_tzname");
extern "C" extern void* __identifier("_getsystime");
extern "C" extern void* __identifier("_imp___getsystime");
extern "C" extern void* __identifier("_gmtime32");
extern "C" extern void* __identifier("_imp___gmtime32");
extern "C" extern void* __identifier("_gmtime32_s");
extern "C" extern void* __identifier("_imp___gmtime32_s");
extern "C" extern void* __identifier("_gmtime64");
extern "C" extern void* __identifier("_imp___gmtime64");
extern "C" extern void* __identifier("_gmtime64_s");
extern "C" extern void* __identifier("_imp___gmtime64_s");
extern "C" extern void* __identifier("_localtime32");
extern "C" extern void* __identifier("_imp___localtime32");
extern "C" extern void* __identifier("_localtime32_s");
extern "C" extern void* __identifier("_imp___localtime32_s");
extern "C" extern void* __identifier("_localtime64");
extern "C" extern void* __identifier("_imp___localtime64");
extern "C" extern void* __identifier("_localtime64_s");
extern "C" extern void* __identifier("_imp___localtime64_s");
extern "C" extern void* __identifier("_mkgmtime32");
extern "C" extern void* __identifier("_imp___mkgmtime32");
extern "C" extern void* __identifier("_mkgmtime64");
extern "C" extern void* __identifier("_imp___mkgmtime64");
extern "C" extern void* __identifier("_mktime32");
extern "C" extern void* __identifier("_imp___mktime32");
extern "C" extern void* __identifier("_mktime64");
extern "C" extern void* __identifier("_imp___mktime64");
extern "C" extern void* __identifier("_setsystime");
extern "C" extern void* __identifier("_imp___setsystime");
extern "C" extern void* __identifier("_strdate");
extern "C" extern void* __identifier("_imp___strdate");
extern "C" extern void* __identifier("_strdate_s");
extern "C" extern void* __identifier("_imp___strdate_s");
extern "C" extern void* __identifier("_strtime");
extern "C" extern void* __identifier("_imp___strtime");
extern "C" extern void* __identifier("_strtime_s");
extern "C" extern void* __identifier("_imp___strtime_s");
extern "C" extern void* __identifier("_time32");
extern "C" extern void* __identifier("_imp___time32");
extern "C" extern void* __identifier("_time64");
extern "C" extern void* __identifier("_imp___time64");
extern "C" extern void* __identifier("_timespec32_get");
extern "C" extern void* __identifier("_imp___timespec32_get");
extern "C" extern void* __identifier("_timespec64_get");
extern "C" extern void* __identifier("_imp___timespec64_get");
extern "C" extern void* __identifier("_tzset");
extern "C" extern void* __identifier("_imp___tzset");
extern "C" extern void* __identifier("_utime32");
extern "C" extern void* __identifier("_imp___utime32");
extern "C" extern void* __identifier("_utime64");
extern "C" extern void* __identifier("_imp___utime64");
extern "C" extern void* __identifier("_wasctime");
extern "C" extern void* __identifier("_imp___wasctime");
extern "C" extern void* __identifier("_wasctime_s");
extern "C" extern void* __identifier("_imp___wasctime_s");
extern "C" extern void* __identifier("_wctime32");
extern "C" extern void* __identifier("_imp___wctime32");
extern "C" extern void* __identifier("_wctime32_s");
extern "C" extern void* __identifier("_imp___wctime32_s");
extern "C" extern void* __identifier("_wctime64");
extern "C" extern void* __identifier("_imp___wctime64");
extern "C" extern void* __identifier("_wctime64_s");
extern "C" extern void* __identifier("_imp___wctime64_s");
extern "C" extern void* __identifier("_wstrdate");
extern "C" extern void* __identifier("_imp___wstrdate");
extern "C" extern void* __identifier("_wstrdate_s");
extern "C" extern void* __identifier("_imp___wstrdate_s");
extern "C" extern void* __identifier("_wstrtime");
extern "C" extern void* __identifier("_imp___wstrtime");
extern "C" extern void* __identifier("_wstrtime_s");
extern "C" extern void* __identifier("_imp___wstrtime_s");
extern "C" extern void* __identifier("_wutime32");
extern "C" extern void* __identifier("_imp___wutime32");
extern "C" extern void* __identifier("_wutime64");
extern "C" extern void* __identifier("_imp___wutime64");
extern "C" extern void* __identifier("asctime");
extern "C" extern void* __identifier("_imp__asctime");
extern "C" extern void* __identifier("asctime_s");
extern "C" extern void* __identifier("_imp__asctime_s");
extern "C" extern void* __identifier("clock");
extern "C" extern void* __identifier("_imp__clock");
extern "C" extern void* __identifier("strftime");
extern "C" extern void* __identifier("_imp__strftime");
extern "C" extern void* __identifier("wcsftime");
extern "C" extern void* __identifier("_imp__wcsftime");
extern "C" extern void* __identifier("_abs64");
extern "C" extern void* __identifier("_imp___abs64");
extern "C" extern void* __identifier("_byteswap_uint64");
extern "C" extern void* __identifier("_imp___byteswap_uint64");
extern "C" extern void* __identifier("_byteswap_ulong");
extern "C" extern void* __identifier("_imp___byteswap_ulong");
extern "C" extern void* __identifier("_byteswap_ushort");
extern "C" extern void* __identifier("_imp___byteswap_ushort");
extern "C" extern void* __identifier("_lfind");
extern "C" extern void* __identifier("_imp___lfind");
extern "C" extern void* __identifier("_lfind_s");
extern "C" extern void* __identifier("_imp___lfind_s");
extern "C" extern void* __identifier("_lrotl");
extern "C" extern void* __identifier("_imp___lrotl");
extern "C" extern void* __identifier("_lrotr");
extern "C" extern void* __identifier("_imp___lrotr");
extern "C" extern void* __identifier("_lsearch");
extern "C" extern void* __identifier("_imp___lsearch");
extern "C" extern void* __identifier("_lsearch_s");
extern "C" extern void* __identifier("_imp___lsearch_s");
extern "C" extern void* __identifier("_rotl");
extern "C" extern void* __identifier("_imp___rotl");
extern "C" extern void* __identifier("_rotl64");
extern "C" extern void* __identifier("_imp___rotl64");
extern "C" extern void* __identifier("_rotr");
extern "C" extern void* __identifier("_imp___rotr");
extern "C" extern void* __identifier("_rotr64");
extern "C" extern void* __identifier("_imp___rotr64");
extern "C" extern void* __identifier("_swab");
extern "C" extern void* __identifier("_imp___swab");
extern "C" extern void* __identifier("abs");
extern "C" extern void* __identifier("_imp__abs");
extern "C" extern void* __identifier("bsearch");
extern "C" extern void* __identifier("_imp__bsearch");
extern "C" extern void* __identifier("bsearch_s");
extern "C" extern void* __identifier("_imp__bsearch_s");
extern "C" extern void* __identifier("div");
extern "C" extern void* __identifier("_imp__div");
extern "C" extern void* __identifier("imaxabs");
extern "C" extern void* __identifier("_imp__imaxabs");
extern "C" extern void* __identifier("imaxdiv");
extern "C" extern void* __identifier("_imp__imaxdiv");
extern "C" extern void* __identifier("labs");
extern "C" extern void* __identifier("_imp__labs");
extern "C" extern void* __identifier("ldiv");
extern "C" extern void* __identifier("_imp__ldiv");
extern "C" extern void* __identifier("llabs");
extern "C" extern void* __identifier("_imp__llabs");
extern "C" extern void* __identifier("lldiv");
extern "C" extern void* __identifier("_imp__lldiv");
extern "C" extern void* __identifier("qsort");
extern "C" extern void* __identifier("_imp__qsort");
extern "C" extern void* __identifier("qsort_s");
extern "C" extern void* __identifier("_imp__qsort_s");
extern "C" extern void* __identifier("rand");
extern "C" extern void* __identifier("_imp__rand");
extern "C" extern void* __identifier("rand_s");
extern "C" extern void* __identifier("_imp__rand_s");
extern "C" extern void* __identifier("srand");
extern "C" extern void* __identifier("_imp__srand");


extern "C" void SymbolsTest()
{
&__identifier("__conio_common_vcprintf");
&__identifier("_imp____conio_common_vcprintf");
&__identifier("__conio_common_vcprintf_p");
&__identifier("_imp____conio_common_vcprintf_p");
&__identifier("__conio_common_vcprintf_s");
&__identifier("_imp____conio_common_vcprintf_s");
&__identifier("__conio_common_vcwprintf");
&__identifier("_imp____conio_common_vcwprintf");
&__identifier("__conio_common_vcwprintf_p");
&__identifier("_imp____conio_common_vcwprintf_p");
&__identifier("__conio_common_vcwprintf_s");
&__identifier("_imp____conio_common_vcwprintf_s");
&__identifier("_cgets");
&__identifier("_imp___cgets");
&__identifier("_cgets_s");
&__identifier("_imp___cgets_s");
&__identifier("_cgetws");
&__identifier("_imp___cgetws");
&__identifier("_cgetws_s");
&__identifier("_imp___cgetws_s");
&__identifier("_cputs");
&__identifier("_imp___cputs");
&__identifier("_cputws");
&__identifier("_imp___cputws");
&__identifier("_getch");
&__identifier("_imp___getch");
&__identifier("_getche");
&__identifier("_imp___getche");
&__identifier("_getwch");
&__identifier("_imp___getwch");
&__identifier("_getwche");
&__identifier("_imp___getwche");
&__identifier("_putch");
&__identifier("_imp___putch");
&__identifier("_putwch");
&__identifier("_imp___putwch");
&__identifier("_ungetch");
&__identifier("_imp___ungetch");
&__identifier("_ungetwch");
&__identifier("_imp___ungetwch");
&__identifier("__toascii");
&__identifier("_imp____toascii");
&__identifier("_atodbl");
&__identifier("_imp___atodbl");
&__identifier("_atodbl_l");
&__identifier("_imp___atodbl_l");
&__identifier("_atof_l");
&__identifier("_imp___atof_l");
&__identifier("_atoflt");
&__identifier("_imp___atoflt");
&__identifier("_atoflt_l");
&__identifier("_imp___atoflt_l");
&__identifier("_atoi64");
&__identifier("_imp___atoi64");
&__identifier("_atoi64_l");
&__identifier("_imp___atoi64_l");
&__identifier("_atoi_l");
&__identifier("_imp___atoi_l");
&__identifier("_atol_l");
&__identifier("_imp___atol_l");
&__identifier("_atoldbl");
&__identifier("_imp___atoldbl");
&__identifier("_atoldbl_l");
&__identifier("_imp___atoldbl_l");
&__identifier("_atoll_l");
&__identifier("_imp___atoll_l");
&__identifier("_ecvt");
&__identifier("_imp___ecvt");
&__identifier("_ecvt_s");
&__identifier("_imp___ecvt_s");
&__identifier("_fcvt");
&__identifier("_imp___fcvt");
&__identifier("_fcvt_s");
&__identifier("_imp___fcvt_s");
&__identifier("_gcvt");
&__identifier("_imp___gcvt");
&__identifier("_gcvt_s");
&__identifier("_imp___gcvt_s");
&__identifier("_i64toa");
&__identifier("_imp___i64toa");
&__identifier("_i64toa_s");
&__identifier("_imp___i64toa_s");
&__identifier("_i64tow");
&__identifier("_imp___i64tow");
&__identifier("_i64tow_s");
&__identifier("_imp___i64tow_s");
&__identifier("_itoa");
&__identifier("_imp___itoa");
&__identifier("_itoa_s");
&__identifier("_imp___itoa_s");
&__identifier("_itow");
&__identifier("_imp___itow");
&__identifier("_itow_s");
&__identifier("_imp___itow_s");
&__identifier("_ltoa");
&__identifier("_imp___ltoa");
&__identifier("_ltoa_s");
&__identifier("_imp___ltoa_s");
&__identifier("_ltow");
&__identifier("_imp___ltow");
&__identifier("_ltow_s");
&__identifier("_imp___ltow_s");
&__identifier("_strtod_l");
&__identifier("_imp___strtod_l");
&__identifier("_strtof_l");
&__identifier("_imp___strtof_l");
&__identifier("_strtoi64");
&__identifier("_imp___strtoi64");
&__identifier("_strtoi64_l");
&__identifier("_imp___strtoi64_l");
&__identifier("_strtoimax_l");
&__identifier("_imp___strtoimax_l");
&__identifier("_strtol_l");
&__identifier("_imp___strtol_l");
&__identifier("_strtold_l");
&__identifier("_imp___strtold_l");
&__identifier("_strtoll_l");
&__identifier("_imp___strtoll_l");
&__identifier("_strtoui64");
&__identifier("_imp___strtoui64");
&__identifier("_strtoui64_l");
&__identifier("_imp___strtoui64_l");
&__identifier("_strtoul_l");
&__identifier("_imp___strtoul_l");
&__identifier("_strtoull_l");
&__identifier("_imp___strtoull_l");
&__identifier("_strtoumax_l");
&__identifier("_imp___strtoumax_l");
&__identifier("_ui64toa");
&__identifier("_imp___ui64toa");
&__identifier("_ui64toa_s");
&__identifier("_imp___ui64toa_s");
&__identifier("_ui64tow");
&__identifier("_imp___ui64tow");
&__identifier("_ui64tow_s");
&__identifier("_imp___ui64tow_s");
&__identifier("_ultoa");
&__identifier("_imp___ultoa");
&__identifier("_ultoa_s");
&__identifier("_imp___ultoa_s");
&__identifier("_ultow");
&__identifier("_imp___ultow");
&__identifier("_ultow_s");
&__identifier("_imp___ultow_s");
&__identifier("_wcstod_l");
&__identifier("_imp___wcstod_l");
&__identifier("_wcstof_l");
&__identifier("_imp___wcstof_l");
&__identifier("_wcstoi64");
&__identifier("_imp___wcstoi64");
&__identifier("_wcstoi64_l");
&__identifier("_imp___wcstoi64_l");
&__identifier("_wcstoimax_l");
&__identifier("_imp___wcstoimax_l");
&__identifier("_wcstol_l");
&__identifier("_imp___wcstol_l");
&__identifier("_wcstold_l");
&__identifier("_imp___wcstold_l");
&__identifier("_wcstoll_l");
&__identifier("_imp___wcstoll_l");
&__identifier("_wcstombs_l");
&__identifier("_imp___wcstombs_l");
&__identifier("_wcstombs_s_l");
&__identifier("_imp___wcstombs_s_l");
&__identifier("_wcstoui64");
&__identifier("_imp___wcstoui64");
&__identifier("_wcstoui64_l");
&__identifier("_imp___wcstoui64_l");
&__identifier("_wcstoul_l");
&__identifier("_imp___wcstoul_l");
&__identifier("_wcstoull_l");
&__identifier("_imp___wcstoull_l");
&__identifier("_wcstoumax_l");
&__identifier("_imp___wcstoumax_l");
&__identifier("_wctomb_l");
&__identifier("_imp___wctomb_l");
&__identifier("_wctomb_s_l");
&__identifier("_imp___wctomb_s_l");
&__identifier("_wtof");
&__identifier("_imp___wtof");
&__identifier("_wtof_l");
&__identifier("_imp___wtof_l");
&__identifier("_wtoi");
&__identifier("_imp___wtoi");
&__identifier("_wtoi64");
&__identifier("_imp___wtoi64");
&__identifier("_wtoi64_l");
&__identifier("_imp___wtoi64_l");
&__identifier("_wtoi_l");
&__identifier("_imp___wtoi_l");
&__identifier("_wtol");
&__identifier("_imp___wtol");
&__identifier("_wtol_l");
&__identifier("_imp___wtol_l");
&__identifier("_wtoll");
&__identifier("_imp___wtoll");
&__identifier("_wtoll_l");
&__identifier("_imp___wtoll_l");
&__identifier("atof");
&__identifier("_imp__atof");
&__identifier("atoi");
&__identifier("_imp__atoi");
&__identifier("atol");
&__identifier("_imp__atol");
&__identifier("atoll");
&__identifier("_imp__atoll");
&__identifier("btowc");
&__identifier("_imp__btowc");
&__identifier("c16rtomb");
&__identifier("_imp__c16rtomb");
&__identifier("c32rtomb");
&__identifier("_imp__c32rtomb");
&__identifier("mbrtoc16");
&__identifier("_imp__mbrtoc16");
&__identifier("mbrtoc32");
&__identifier("_imp__mbrtoc32");
&__identifier("mbrtowc");
&__identifier("_imp__mbrtowc");
&__identifier("mbsrtowcs");
&__identifier("_imp__mbsrtowcs");
&__identifier("mbsrtowcs_s");
&__identifier("_imp__mbsrtowcs_s");
&__identifier("mbstowcs");
&__identifier("_imp__mbstowcs");
&__identifier("mbstowcs_s");
&__identifier("_imp__mbstowcs_s");
&__identifier("mbtowc");
&__identifier("_imp__mbtowc");
&__identifier("strtod");
&__identifier("_imp__strtod");
&__identifier("strtof");
&__identifier("_imp__strtof");
&__identifier("strtoimax");
&__identifier("_imp__strtoimax");
&__identifier("strtol");
&__identifier("_imp__strtol");
&__identifier("strtold");
&__identifier("_imp__strtold");
&__identifier("strtoll");
&__identifier("_imp__strtoll");
&__identifier("strtoul");
&__identifier("_imp__strtoul");
&__identifier("strtoull");
&__identifier("_imp__strtoull");
&__identifier("strtoumax");
&__identifier("_imp__strtoumax");
&__identifier("wcrtomb");
&__identifier("_imp__wcrtomb");
&__identifier("wcrtomb_s");
&__identifier("_imp__wcrtomb_s");
&__identifier("wcsrtombs");
&__identifier("_imp__wcsrtombs");
&__identifier("wcsrtombs_s");
&__identifier("_imp__wcsrtombs_s");
&__identifier("wcstod");
&__identifier("_imp__wcstod");
&__identifier("wcstof");
&__identifier("_imp__wcstof");
&__identifier("wcstoimax");
&__identifier("_imp__wcstoimax");
&__identifier("wcstol");
&__identifier("_imp__wcstol");
&__identifier("wcstold");
&__identifier("_imp__wcstold");
&__identifier("wcstoll");
&__identifier("_imp__wcstoll");
&__identifier("wcstombs");
&__identifier("_imp__wcstombs");
&__identifier("wcstombs_s");
&__identifier("_imp__wcstombs_s");
&__identifier("wcstoul");
&__identifier("_imp__wcstoul");
&__identifier("wcstoull");
&__identifier("_imp__wcstoull");
&__identifier("wcstoumax");
&__identifier("_imp__wcstoumax");
&__identifier("wctob");
&__identifier("_imp__wctob");
&__identifier("wctomb");
&__identifier("_imp__wctomb");
&__identifier("wctomb_s");
&__identifier("_imp__wctomb_s");
&__identifier("wctrans");
&__identifier("_imp__wctrans");
&__identifier("__p__environ");
&__identifier("_imp____p__environ");
&__identifier("__p__wenviron");
&__identifier("_imp____p__wenviron");
&__identifier("_dupenv_s");
&__identifier("_imp___dupenv_s");
&__identifier("_putenv");
&__identifier("_imp___putenv");
&__identifier("_putenv_s");
&__identifier("_imp___putenv_s");
&__identifier("_searchenv");
&__identifier("_imp___searchenv");
&__identifier("_searchenv_s");
&__identifier("_imp___searchenv_s");
&__identifier("_wdupenv_s");
&__identifier("_imp___wdupenv_s");
&__identifier("_wgetcwd");
&__identifier("_imp___wgetcwd");
&__identifier("_wgetdcwd");
&__identifier("_imp___wgetdcwd");
&__identifier("_wgetenv");
&__identifier("_imp___wgetenv");
&__identifier("_wgetenv_s");
&__identifier("_imp___wgetenv_s");
&__identifier("_wputenv");
&__identifier("_imp___wputenv");
&__identifier("_wputenv_s");
&__identifier("_imp___wputenv_s");
&__identifier("_wsearchenv");
&__identifier("_imp___wsearchenv");
&__identifier("_wsearchenv_s");
&__identifier("_imp___wsearchenv_s");
&__identifier("getenv");
&__identifier("_imp__getenv");
&__identifier("getenv_s");
&__identifier("_imp__getenv_s");
&__identifier("_access");
&__identifier("_imp___access");
&__identifier("_access_s");
&__identifier("_imp___access_s");
&__identifier("_chdir");
&__identifier("_imp___chdir");
&__identifier("_chdrive");
&__identifier("_imp___chdrive");
&__identifier("_chmod");
&__identifier("_imp___chmod");
&__identifier("_findclose");
&__identifier("_imp___findclose");
&__identifier("_findfirst32");
&__identifier("_imp___findfirst32");
&__identifier("_findfirst32i64");
&__identifier("_imp___findfirst32i64");
&__identifier("_findfirst64");
&__identifier("_imp___findfirst64");
&__identifier("_findfirst64i32");
&__identifier("_imp___findfirst64i32");
&__identifier("_findnext32");
&__identifier("_imp___findnext32");
&__identifier("_findnext32i64");
&__identifier("_imp___findnext32i64");
&__identifier("_findnext64");
&__identifier("_imp___findnext64");
&__identifier("_findnext64i32");
&__identifier("_imp___findnext64i32");
&__identifier("_fstat32");
&__identifier("_imp___fstat32");
&__identifier("_fstat32i64");
&__identifier("_imp___fstat32i64");
&__identifier("_fstat64");
&__identifier("_imp___fstat64");
&__identifier("_fstat64i32");
&__identifier("_imp___fstat64i32");
&__identifier("_fullpath");
&__identifier("_imp___fullpath");
&__identifier("_getdiskfree");
&__identifier("_imp___getdiskfree");
&__identifier("_getdrive");
&__identifier("_imp___getdrive");
&__identifier("_getdrives");
&__identifier("_imp___getdrives");
&__identifier("_lock_file");
&__identifier("_imp___lock_file");
&__identifier("_makepath");
&__identifier("_imp___makepath");
&__identifier("_makepath_s");
&__identifier("_imp___makepath_s");
&__identifier("_mkdir");
&__identifier("_imp___mkdir");
&__identifier("_rmdir");
&__identifier("_imp___rmdir");
&__identifier("_splitpath");
&__identifier("_imp___splitpath");
&__identifier("_splitpath_s");
&__identifier("_imp___splitpath_s");
&__identifier("_stat32");
&__identifier("_imp___stat32");
&__identifier("_stat32i64");
&__identifier("_imp___stat32i64");
&__identifier("_stat64");
&__identifier("_imp___stat64");
&__identifier("_stat64i32");
&__identifier("_imp___stat64i32");
&__identifier("_umask");
&__identifier("_imp___umask");
&__identifier("_umask_s");
&__identifier("_imp___umask_s");
&__identifier("_unlink");
&__identifier("_imp___unlink");
&__identifier("_unlock_file");
&__identifier("_imp___unlock_file");
&__identifier("_waccess");
&__identifier("_imp___waccess");
&__identifier("_waccess_s");
&__identifier("_imp___waccess_s");
&__identifier("_wchdir");
&__identifier("_imp___wchdir");
&__identifier("_wchmod");
&__identifier("_imp___wchmod");
&__identifier("_wfindfirst32");
&__identifier("_imp___wfindfirst32");
&__identifier("_wfindfirst32i64");
&__identifier("_imp___wfindfirst32i64");
&__identifier("_wfindfirst64");
&__identifier("_imp___wfindfirst64");
&__identifier("_wfindfirst64i32");
&__identifier("_imp___wfindfirst64i32");
&__identifier("_wfindnext32");
&__identifier("_imp___wfindnext32");
&__identifier("_wfindnext32i64");
&__identifier("_imp___wfindnext32i64");
&__identifier("_wfindnext64");
&__identifier("_imp___wfindnext64");
&__identifier("_wfindnext64i32");
&__identifier("_imp___wfindnext64i32");
&__identifier("_wfullpath");
&__identifier("_imp___wfullpath");
&__identifier("_wmakepath");
&__identifier("_imp___wmakepath");
&__identifier("_wmakepath_s");
&__identifier("_imp___wmakepath_s");
&__identifier("_wmkdir");
&__identifier("_imp___wmkdir");
&__identifier("_wremove");
&__identifier("_imp___wremove");
&__identifier("_wrename");
&__identifier("_imp___wrename");
&__identifier("_wrmdir");
&__identifier("_imp___wrmdir");
&__identifier("_wsplitpath");
&__identifier("_imp___wsplitpath");
&__identifier("_wsplitpath_s");
&__identifier("_imp___wsplitpath_s");
&__identifier("_wstat32");
&__identifier("_imp___wstat32");
&__identifier("_wstat32i64");
&__identifier("_imp___wstat32i64");
&__identifier("_wstat64");
&__identifier("_imp___wstat64");
&__identifier("_wstat64i32");
&__identifier("_imp___wstat64i32");
&__identifier("_wunlink");
&__identifier("_imp___wunlink");
&__identifier("remove");
&__identifier("_imp__remove");
&__identifier("rename");
&__identifier("_imp__rename");
&__identifier("_aligned_free");
&__identifier("_imp___aligned_free");
&__identifier("_aligned_malloc");
&__identifier("_imp___aligned_malloc");
&__identifier("_aligned_msize");
&__identifier("_imp___aligned_msize");
&__identifier("_aligned_offset_malloc");
&__identifier("_imp___aligned_offset_malloc");
&__identifier("_aligned_offset_realloc");
&__identifier("_imp___aligned_offset_realloc");
&__identifier("_aligned_offset_recalloc");
&__identifier("_imp___aligned_offset_recalloc");
&__identifier("_aligned_realloc");
&__identifier("_imp___aligned_realloc");
&__identifier("_aligned_recalloc");
&__identifier("_imp___aligned_recalloc");
&__identifier("_callnewh");
&__identifier("_imp___callnewh");
&__identifier("_calloc_base");
&__identifier("_imp___calloc_base");
&__identifier("_expand");
&__identifier("_imp___expand");
&__identifier("_free_base");
&__identifier("_imp___free_base");
&__identifier("_get_heap_handle");
&__identifier("_imp___get_heap_handle");
&__identifier("_heapchk");
&__identifier("_imp___heapchk");
&__identifier("_heapmin");
&__identifier("_imp___heapmin");
&__identifier("_heapwalk");
&__identifier("_imp___heapwalk");
&__identifier("_malloc_base");
&__identifier("_imp___malloc_base");
&__identifier("_msize");
&__identifier("_imp___msize");
&__identifier("_query_new_handler");
&__identifier("_imp___query_new_handler");
&__identifier("_query_new_mode");
&__identifier("_imp___query_new_mode");
&__identifier("_realloc_base");
&__identifier("_imp___realloc_base");
&__identifier("_recalloc");
&__identifier("_imp___recalloc");
&__identifier("_set_new_mode");
&__identifier("_imp___set_new_mode");
&__identifier("calloc");
&__identifier("_imp__calloc");
&__identifier("free");
&__identifier("_imp__free");
&__identifier("malloc");
&__identifier("_imp__malloc");
&__identifier("realloc");
&__identifier("_imp__realloc");
&__identifier("___lc_codepage_func");
&__identifier("_imp_____lc_codepage_func");
&__identifier("___lc_collate_cp_func");
&__identifier("_imp_____lc_collate_cp_func");
&__identifier("___lc_locale_name_func");
&__identifier("_imp_____lc_locale_name_func");
&__identifier("___mb_cur_max_func");
&__identifier("_imp_____mb_cur_max_func");
&__identifier("___mb_cur_max_l_func");
&__identifier("_imp_____mb_cur_max_l_func");
&__identifier("__pctype_func");
&__identifier("_imp____pctype_func");
&__identifier("__pwctype_func");
&__identifier("_imp____pwctype_func");
&__identifier("_configthreadlocale");
&__identifier("_imp___configthreadlocale");
&__identifier("_create_locale");
&__identifier("_imp___create_locale");
&__identifier("_free_locale");
&__identifier("_imp___free_locale");
&__identifier("_get_current_locale");
&__identifier("_imp___get_current_locale");
&__identifier("_getmbcp");
&__identifier("_imp___getmbcp");
&__identifier("_lock_locales");
&__identifier("_imp___lock_locales");
&__identifier("_setmbcp");
&__identifier("_imp___setmbcp");
&__identifier("_unlock_locales");
&__identifier("_imp___unlock_locales");
&__identifier("_wcreate_locale");
&__identifier("_imp___wcreate_locale");
&__identifier("_wsetlocale");
&__identifier("_imp___wsetlocale");
&__identifier("localeconv");
&__identifier("_imp__localeconv");
&__identifier("setlocale");
&__identifier("_imp__setlocale");
&__identifier("_CIacos");
&__identifier("_imp___CIacos");
&__identifier("_CIasin");
&__identifier("_imp___CIasin");
&__identifier("_CIatan");
&__identifier("_imp___CIatan");
&__identifier("_CIatan2");
&__identifier("_imp___CIatan2");
&__identifier("_CIcos");
&__identifier("_imp___CIcos");
&__identifier("_CIcosh");
&__identifier("_imp___CIcosh");
&__identifier("_CIexp");
&__identifier("_imp___CIexp");
&__identifier("_CIfmod");
&__identifier("_imp___CIfmod");
&__identifier("_CIlog");
&__identifier("_imp___CIlog");
&__identifier("_CIlog10");
&__identifier("_imp___CIlog10");
&__identifier("_CIpow");
&__identifier("_imp___CIpow");
&__identifier("_CIsin");
&__identifier("_imp___CIsin");
&__identifier("_CIsinh");
&__identifier("_imp___CIsinh");
&__identifier("_CIsqrt");
&__identifier("_imp___CIsqrt");
&__identifier("_CItan");
&__identifier("_imp___CItan");
&__identifier("_CItanh");
&__identifier("_imp___CItanh");
&__identifier("_Cbuild");
&__identifier("_imp___Cbuild");
&__identifier("_Cmulcc");
&__identifier("_imp___Cmulcc");
&__identifier("_Cmulcr");
&__identifier("_imp___Cmulcr");
&__identifier("_FCbuild");
&__identifier("_imp___FCbuild");
&__identifier("_FCmulcc");
&__identifier("_imp___FCmulcc");
&__identifier("_FCmulcr");
&__identifier("_imp___FCmulcr");
&__identifier("_LCbuild");
&__identifier("_imp___LCbuild");
&__identifier("_LCmulcc");
&__identifier("_imp___LCmulcc");
&__identifier("_LCmulcr");
&__identifier("_imp___LCmulcr");
&__identifier("__libm_sse2_acos");
&__identifier("_imp____libm_sse2_acos");
&__identifier("__libm_sse2_acosf");
&__identifier("_imp____libm_sse2_acosf");
&__identifier("__libm_sse2_asin");
&__identifier("_imp____libm_sse2_asin");
&__identifier("__libm_sse2_asinf");
&__identifier("_imp____libm_sse2_asinf");
&__identifier("__libm_sse2_atan");
&__identifier("_imp____libm_sse2_atan");
&__identifier("__libm_sse2_atan2");
&__identifier("_imp____libm_sse2_atan2");
&__identifier("__libm_sse2_atanf");
&__identifier("_imp____libm_sse2_atanf");
&__identifier("__libm_sse2_cos");
&__identifier("_imp____libm_sse2_cos");
&__identifier("__libm_sse2_cosf");
&__identifier("_imp____libm_sse2_cosf");
&__identifier("__libm_sse2_exp");
&__identifier("_imp____libm_sse2_exp");
&__identifier("__libm_sse2_expf");
&__identifier("_imp____libm_sse2_expf");
&__identifier("__libm_sse2_log");
&__identifier("_imp____libm_sse2_log");
&__identifier("__libm_sse2_log10");
&__identifier("_imp____libm_sse2_log10");
&__identifier("__libm_sse2_log10f");
&__identifier("_imp____libm_sse2_log10f");
&__identifier("__libm_sse2_logf");
&__identifier("_imp____libm_sse2_logf");
&__identifier("__libm_sse2_pow");
&__identifier("_imp____libm_sse2_pow");
&__identifier("__libm_sse2_powf");
&__identifier("_imp____libm_sse2_powf");
&__identifier("__libm_sse2_sin");
&__identifier("_imp____libm_sse2_sin");
&__identifier("__libm_sse2_sinf");
&__identifier("_imp____libm_sse2_sinf");
&__identifier("__libm_sse2_tan");
&__identifier("_imp____libm_sse2_tan");
&__identifier("__libm_sse2_tanf");
&__identifier("_imp____libm_sse2_tanf");
&__identifier("__setusermatherr");
&__identifier("_imp____setusermatherr");
&__identifier("_cabs");
&__identifier("_imp___cabs");
&__identifier("_chgsign");
&__identifier("_imp___chgsign");
&__identifier("_chgsignf");
&__identifier("_imp___chgsignf");
&__identifier("_copysign");
&__identifier("_imp___copysign");
&__identifier("_copysignf");
&__identifier("_imp___copysignf");
&__identifier("_d_int");
&__identifier("_imp___d_int");
&__identifier("_dclass");
&__identifier("_imp___dclass");
&__identifier("_dexp");
&__identifier("_imp___dexp");
&__identifier("_dlog");
&__identifier("_imp___dlog");
&__identifier("_dnorm");
&__identifier("_imp___dnorm");
&__identifier("_dpcomp");
&__identifier("_imp___dpcomp");
&__identifier("_dpoly");
&__identifier("_imp___dpoly");
&__identifier("_dscale");
&__identifier("_imp___dscale");
&__identifier("_dsign");
&__identifier("_imp___dsign");
&__identifier("_dsin");
&__identifier("_imp___dsin");
&__identifier("_dtest");
&__identifier("_imp___dtest");
&__identifier("_dunscale");
&__identifier("_imp___dunscale");
&__identifier("_except1");
&__identifier("_imp___except1");
&__identifier("_fd_int");
&__identifier("_imp___fd_int");
&__identifier("_fdclass");
&__identifier("_imp___fdclass");
&__identifier("_fdexp");
&__identifier("_imp___fdexp");
&__identifier("_fdlog");
&__identifier("_imp___fdlog");
&__identifier("_fdnorm");
&__identifier("_imp___fdnorm");
&__identifier("_fdopen");
&__identifier("_imp___fdopen");
&__identifier("_fdpcomp");
&__identifier("_imp___fdpcomp");
&__identifier("_fdpoly");
&__identifier("_imp___fdpoly");
&__identifier("_fdscale");
&__identifier("_imp___fdscale");
&__identifier("_fdsign");
&__identifier("_imp___fdsign");
&__identifier("_fdsin");
&__identifier("_imp___fdsin");
&__identifier("_fdtest");
&__identifier("_imp___fdtest");
&__identifier("_fdunscale");
&__identifier("_imp___fdunscale");
&__identifier("_finite");
&__identifier("_imp___finite");
&__identifier("_fpclass");
&__identifier("_imp___fpclass");
&__identifier("_ftol");
&__identifier("_imp___ftol");
&__identifier("_hypot");
&__identifier("_imp___hypot");
&__identifier("_hypotf");
&__identifier("_imp___hypotf");
&__identifier("_isnan");
&__identifier("_imp___isnan");
&__identifier("_j0");
&__identifier("_imp___j0");
&__identifier("_j1");
&__identifier("_imp___j1");
&__identifier("_jn");
&__identifier("_imp___jn");
&__identifier("_ld_int");
&__identifier("_imp___ld_int");
&__identifier("_ldclass");
&__identifier("_imp___ldclass");
&__identifier("_ldexp");
&__identifier("_imp___ldexp");
&__identifier("_ldlog");
&__identifier("_imp___ldlog");
&__identifier("_ldpcomp");
&__identifier("_imp___ldpcomp");
&__identifier("_ldpoly");
&__identifier("_imp___ldpoly");
&__identifier("_ldscale");
&__identifier("_imp___ldscale");
&__identifier("_ldsign");
&__identifier("_imp___ldsign");
&__identifier("_ldsin");
&__identifier("_imp___ldsin");
&__identifier("_ldtest");
&__identifier("_imp___ldtest");
&__identifier("_ldunscale");
&__identifier("_imp___ldunscale");
&__identifier("_libm_sse2_acos_precise");
&__identifier("_imp___libm_sse2_acos_precise");
&__identifier("_libm_sse2_asin_precise");
&__identifier("_imp___libm_sse2_asin_precise");
&__identifier("_libm_sse2_atan_precise");
&__identifier("_imp___libm_sse2_atan_precise");
&__identifier("_libm_sse2_cos_precise");
&__identifier("_imp___libm_sse2_cos_precise");
&__identifier("_libm_sse2_exp_precise");
&__identifier("_imp___libm_sse2_exp_precise");
&__identifier("_libm_sse2_log10_precise");
&__identifier("_imp___libm_sse2_log10_precise");
&__identifier("_libm_sse2_log_precise");
&__identifier("_imp___libm_sse2_log_precise");
&__identifier("_libm_sse2_pow_precise");
&__identifier("_imp___libm_sse2_pow_precise");
&__identifier("_libm_sse2_sin_precise");
&__identifier("_imp___libm_sse2_sin_precise");
&__identifier("_libm_sse2_sqrt_precise");
&__identifier("_imp___libm_sse2_sqrt_precise");
&__identifier("_libm_sse2_tan_precise");
&__identifier("_imp___libm_sse2_tan_precise");
&__identifier("_logb");
&__identifier("_imp___logb");
&__identifier("_nextafter");
&__identifier("_imp___nextafter");
&__identifier("_scalb");
&__identifier("_imp___scalb");
&__identifier("_set_SSE2_enable");
&__identifier("_imp___set_SSE2_enable");
&__identifier("_y0");
&__identifier("_imp___y0");
&__identifier("_y1");
&__identifier("_imp___y1");
&__identifier("_yn");
&__identifier("_imp___yn");
&__identifier("acos");
&__identifier("_imp__acos");
&__identifier("acosh");
&__identifier("_imp__acosh");
&__identifier("acoshf");
&__identifier("_imp__acoshf");
&__identifier("acoshl");
&__identifier("_imp__acoshl");
&__identifier("asin");
&__identifier("_imp__asin");
&__identifier("asinh");
&__identifier("_imp__asinh");
&__identifier("asinhf");
&__identifier("_imp__asinhf");
&__identifier("asinhl");
&__identifier("_imp__asinhl");
&__identifier("atan");
&__identifier("_imp__atan");
&__identifier("atan2");
&__identifier("_imp__atan2");
&__identifier("atanh");
&__identifier("_imp__atanh");
&__identifier("atanhf");
&__identifier("_imp__atanhf");
&__identifier("atanhl");
&__identifier("_imp__atanhl");
&__identifier("cabs");
&__identifier("_imp__cabs");
&__identifier("cabsf");
&__identifier("_imp__cabsf");
&__identifier("cabsl");
&__identifier("_imp__cabsl");
&__identifier("cacos");
&__identifier("_imp__cacos");
&__identifier("cacosf");
&__identifier("_imp__cacosf");
&__identifier("cacosh");
&__identifier("_imp__cacosh");
&__identifier("cacoshf");
&__identifier("_imp__cacoshf");
&__identifier("cacoshl");
&__identifier("_imp__cacoshl");
&__identifier("cacosl");
&__identifier("_imp__cacosl");
&__identifier("carg");
&__identifier("_imp__carg");
&__identifier("cargf");
&__identifier("_imp__cargf");
&__identifier("cargl");
&__identifier("_imp__cargl");
&__identifier("casin");
&__identifier("_imp__casin");
&__identifier("casinf");
&__identifier("_imp__casinf");
&__identifier("casinh");
&__identifier("_imp__casinh");
&__identifier("casinhf");
&__identifier("_imp__casinhf");
&__identifier("casinhl");
&__identifier("_imp__casinhl");
&__identifier("casinl");
&__identifier("_imp__casinl");
&__identifier("catan");
&__identifier("_imp__catan");
&__identifier("catanf");
&__identifier("_imp__catanf");
&__identifier("catanh");
&__identifier("_imp__catanh");
&__identifier("catanhf");
&__identifier("_imp__catanhf");
&__identifier("catanhl");
&__identifier("_imp__catanhl");
&__identifier("catanl");
&__identifier("_imp__catanl");
&__identifier("cbrt");
&__identifier("_imp__cbrt");
&__identifier("cbrtf");
&__identifier("_imp__cbrtf");
&__identifier("cbrtl");
&__identifier("_imp__cbrtl");
&__identifier("ccos");
&__identifier("_imp__ccos");
&__identifier("ccosf");
&__identifier("_imp__ccosf");
&__identifier("ccosh");
&__identifier("_imp__ccosh");
&__identifier("ccoshf");
&__identifier("_imp__ccoshf");
&__identifier("ccoshl");
&__identifier("_imp__ccoshl");
&__identifier("ccosl");
&__identifier("_imp__ccosl");
&__identifier("ceil");
&__identifier("_imp__ceil");
&__identifier("cexp");
&__identifier("_imp__cexp");
&__identifier("cexpf");
&__identifier("_imp__cexpf");
&__identifier("cexpl");
&__identifier("_imp__cexpl");
&__identifier("cimag");
&__identifier("_imp__cimag");
&__identifier("cimagf");
&__identifier("_imp__cimagf");
&__identifier("cimagl");
&__identifier("_imp__cimagl");
&__identifier("clog");
&__identifier("_imp__clog");
&__identifier("clog10");
&__identifier("_imp__clog10");
&__identifier("clog10f");
&__identifier("_imp__clog10f");
&__identifier("clog10l");
&__identifier("_imp__clog10l");
&__identifier("clogf");
&__identifier("_imp__clogf");
&__identifier("clogl");
&__identifier("_imp__clogl");
&__identifier("conj");
&__identifier("_imp__conj");
&__identifier("conjf");
&__identifier("_imp__conjf");
&__identifier("conjl");
&__identifier("_imp__conjl");
&__identifier("copysign");
&__identifier("_imp__copysign");
&__identifier("copysignf");
&__identifier("_imp__copysignf");
&__identifier("copysignl");
&__identifier("_imp__copysignl");
&__identifier("cos");
&__identifier("_imp__cos");
&__identifier("cosh");
&__identifier("_imp__cosh");
&__identifier("cpow");
&__identifier("_imp__cpow");
&__identifier("cpowf");
&__identifier("_imp__cpowf");
&__identifier("cpowl");
&__identifier("_imp__cpowl");
&__identifier("cproj");
&__identifier("_imp__cproj");
&__identifier("cprojf");
&__identifier("_imp__cprojf");
&__identifier("cprojl");
&__identifier("_imp__cprojl");
&__identifier("creal");
&__identifier("_imp__creal");
&__identifier("crealf");
&__identifier("_imp__crealf");
&__identifier("creall");
&__identifier("_imp__creall");
&__identifier("csin");
&__identifier("_imp__csin");
&__identifier("csinf");
&__identifier("_imp__csinf");
&__identifier("csinh");
&__identifier("_imp__csinh");
&__identifier("csinhf");
&__identifier("_imp__csinhf");
&__identifier("csinhl");
&__identifier("_imp__csinhl");
&__identifier("csinl");
&__identifier("_imp__csinl");
&__identifier("csqrt");
&__identifier("_imp__csqrt");
&__identifier("csqrtf");
&__identifier("_imp__csqrtf");
&__identifier("csqrtl");
&__identifier("_imp__csqrtl");
&__identifier("ctan");
&__identifier("_imp__ctan");
&__identifier("ctanf");
&__identifier("_imp__ctanf");
&__identifier("ctanh");
&__identifier("_imp__ctanh");
&__identifier("ctanhf");
&__identifier("_imp__ctanhf");
&__identifier("ctanhl");
&__identifier("_imp__ctanhl");
&__identifier("ctanl");
&__identifier("_imp__ctanl");
&__identifier("erf");
&__identifier("_imp__erf");
&__identifier("erfc");
&__identifier("_imp__erfc");
&__identifier("erfcf");
&__identifier("_imp__erfcf");
&__identifier("erfcl");
&__identifier("_imp__erfcl");
&__identifier("erff");
&__identifier("_imp__erff");
&__identifier("erfl");
&__identifier("_imp__erfl");
&__identifier("exp");
&__identifier("_imp__exp");
&__identifier("exp2");
&__identifier("_imp__exp2");
&__identifier("exp2f");
&__identifier("_imp__exp2f");
&__identifier("exp2l");
&__identifier("_imp__exp2l");
&__identifier("expm1");
&__identifier("_imp__expm1");
&__identifier("expm1f");
&__identifier("_imp__expm1f");
&__identifier("expm1l");
&__identifier("_imp__expm1l");
&__identifier("fabs");
&__identifier("_imp__fabs");
&__identifier("fdim");
&__identifier("_imp__fdim");
&__identifier("fdimf");
&__identifier("_imp__fdimf");
&__identifier("fdiml");
&__identifier("_imp__fdiml");
&__identifier("floor");
&__identifier("_imp__floor");
&__identifier("fma");
&__identifier("_imp__fma");
&__identifier("fmaf");
&__identifier("_imp__fmaf");
&__identifier("fmal");
&__identifier("_imp__fmal");
&__identifier("fmax");
&__identifier("_imp__fmax");
&__identifier("fmaxf");
&__identifier("_imp__fmaxf");
&__identifier("fmaxl");
&__identifier("_imp__fmaxl");
&__identifier("fmin");
&__identifier("_imp__fmin");
&__identifier("fminf");
&__identifier("_imp__fminf");
&__identifier("fminl");
&__identifier("_imp__fminl");
&__identifier("fmod");
&__identifier("_imp__fmod");
&__identifier("frexp");
&__identifier("_imp__frexp");
&__identifier("hypot");
&__identifier("_imp__hypot");
&__identifier("ilogb");
&__identifier("_imp__ilogb");
&__identifier("ilogbf");
&__identifier("_imp__ilogbf");
&__identifier("ilogbl");
&__identifier("_imp__ilogbl");
&__identifier("ldexp");
&__identifier("_imp__ldexp");
&__identifier("lgamma");
&__identifier("_imp__lgamma");
&__identifier("lgammaf");
&__identifier("_imp__lgammaf");
&__identifier("lgammal");
&__identifier("_imp__lgammal");
&__identifier("llrint");
&__identifier("_imp__llrint");
&__identifier("llrintf");
&__identifier("_imp__llrintf");
&__identifier("llrintl");
&__identifier("_imp__llrintl");
&__identifier("llround");
&__identifier("_imp__llround");
&__identifier("llroundf");
&__identifier("_imp__llroundf");
&__identifier("llroundl");
&__identifier("_imp__llroundl");
&__identifier("log");
&__identifier("_imp__log");
&__identifier("log10");
&__identifier("_imp__log10");
&__identifier("log1p");
&__identifier("_imp__log1p");
&__identifier("log1pf");
&__identifier("_imp__log1pf");
&__identifier("log1pl");
&__identifier("_imp__log1pl");
&__identifier("log2");
&__identifier("_imp__log2");
&__identifier("log2f");
&__identifier("_imp__log2f");
&__identifier("log2l");
&__identifier("_imp__log2l");
&__identifier("logb");
&__identifier("_imp__logb");
&__identifier("logbf");
&__identifier("_imp__logbf");
&__identifier("logbl");
&__identifier("_imp__logbl");
&__identifier("lrint");
&__identifier("_imp__lrint");
&__identifier("lrintf");
&__identifier("_imp__lrintf");
&__identifier("lrintl");
&__identifier("_imp__lrintl");
&__identifier("lround");
&__identifier("_imp__lround");
&__identifier("lroundf");
&__identifier("_imp__lroundf");
&__identifier("lroundl");
&__identifier("_imp__lroundl");
&__identifier("modf");
&__identifier("_imp__modf");
&__identifier("nan");
&__identifier("_imp__nan");
&__identifier("nanf");
&__identifier("_imp__nanf");
&__identifier("nanl");
&__identifier("_imp__nanl");
&__identifier("nearbyint");
&__identifier("_imp__nearbyint");
&__identifier("nearbyintf");
&__identifier("_imp__nearbyintf");
&__identifier("nearbyintl");
&__identifier("_imp__nearbyintl");
&__identifier("nextafter");
&__identifier("_imp__nextafter");
&__identifier("nextafterf");
&__identifier("_imp__nextafterf");
&__identifier("nextafterl");
&__identifier("_imp__nextafterl");
&__identifier("nexttoward");
&__identifier("_imp__nexttoward");
&__identifier("nexttowardf");
&__identifier("_imp__nexttowardf");
&__identifier("nexttowardl");
&__identifier("_imp__nexttowardl");
&__identifier("norm");
&__identifier("_imp__norm");
&__identifier("normf");
&__identifier("_imp__normf");
&__identifier("norml");
&__identifier("_imp__norml");
&__identifier("pow");
&__identifier("_imp__pow");
&__identifier("powf");
&__identifier("_imp__powf");
&__identifier("remainder");
&__identifier("_imp__remainder");
&__identifier("remainderf");
&__identifier("_imp__remainderf");
&__identifier("remainderl");
&__identifier("_imp__remainderl");
&__identifier("remquo");
&__identifier("_imp__remquo");
&__identifier("remquof");
&__identifier("_imp__remquof");
&__identifier("remquol");
&__identifier("_imp__remquol");
&__identifier("rint");
&__identifier("_imp__rint");
&__identifier("rintf");
&__identifier("_imp__rintf");
&__identifier("rintl");
&__identifier("_imp__rintl");
&__identifier("round");
&__identifier("_imp__round");
&__identifier("roundf");
&__identifier("_imp__roundf");
&__identifier("roundl");
&__identifier("_imp__roundl");
&__identifier("scalbln");
&__identifier("_imp__scalbln");
&__identifier("scalblnf");
&__identifier("_imp__scalblnf");
&__identifier("scalblnl");
&__identifier("_imp__scalblnl");
&__identifier("scalbn");
&__identifier("_imp__scalbn");
&__identifier("scalbnf");
&__identifier("_imp__scalbnf");
&__identifier("scalbnl");
&__identifier("_imp__scalbnl");
&__identifier("sin");
&__identifier("_imp__sin");
&__identifier("sinh");
&__identifier("_imp__sinh");
&__identifier("sqrt");
&__identifier("_imp__sqrt");
&__identifier("tan");
&__identifier("_imp__tan");
&__identifier("tanh");
&__identifier("_imp__tanh");
&__identifier("tgamma");
&__identifier("_imp__tgamma");
&__identifier("tgammaf");
&__identifier("_imp__tgammaf");
&__identifier("tgammal");
&__identifier("_imp__tgammal");
&__identifier("trunc");
&__identifier("_imp__trunc");
&__identifier("truncf");
&__identifier("_imp__truncf");
&__identifier("truncl");
&__identifier("_imp__truncl");
&__identifier("__p__mbcasemap");
&__identifier("_imp____p__mbcasemap");
&__identifier("__p__mbctype");
&__identifier("_imp____p__mbctype");
&__identifier("_ismbbalnum");
&__identifier("_imp___ismbbalnum");
&__identifier("_ismbbalnum_l");
&__identifier("_imp___ismbbalnum_l");
&__identifier("_ismbbalpha");
&__identifier("_imp___ismbbalpha");
&__identifier("_ismbbalpha_l");
&__identifier("_imp___ismbbalpha_l");
&__identifier("_ismbbblank");
&__identifier("_imp___ismbbblank");
&__identifier("_ismbbblank_l");
&__identifier("_imp___ismbbblank_l");
&__identifier("_ismbbgraph");
&__identifier("_imp___ismbbgraph");
&__identifier("_ismbbgraph_l");
&__identifier("_imp___ismbbgraph_l");
&__identifier("_ismbbkalnum");
&__identifier("_imp___ismbbkalnum");
&__identifier("_ismbbkalnum_l");
&__identifier("_imp___ismbbkalnum_l");
&__identifier("_ismbbkana");
&__identifier("_imp___ismbbkana");
&__identifier("_ismbbkana_l");
&__identifier("_imp___ismbbkana_l");
&__identifier("_ismbbkprint");
&__identifier("_imp___ismbbkprint");
&__identifier("_ismbbkprint_l");
&__identifier("_imp___ismbbkprint_l");
&__identifier("_ismbbkpunct");
&__identifier("_imp___ismbbkpunct");
&__identifier("_ismbbkpunct_l");
&__identifier("_imp___ismbbkpunct_l");
&__identifier("_ismbblead");
&__identifier("_imp___ismbblead");
&__identifier("_ismbblead_l");
&__identifier("_imp___ismbblead_l");
&__identifier("_ismbbprint");
&__identifier("_imp___ismbbprint");
&__identifier("_ismbbprint_l");
&__identifier("_imp___ismbbprint_l");
&__identifier("_ismbbpunct");
&__identifier("_imp___ismbbpunct");
&__identifier("_ismbbpunct_l");
&__identifier("_imp___ismbbpunct_l");
&__identifier("_ismbbtrail");
&__identifier("_imp___ismbbtrail");
&__identifier("_ismbbtrail_l");
&__identifier("_imp___ismbbtrail_l");
&__identifier("_ismbcalnum");
&__identifier("_imp___ismbcalnum");
&__identifier("_ismbcalnum_l");
&__identifier("_imp___ismbcalnum_l");
&__identifier("_ismbcalpha");
&__identifier("_imp___ismbcalpha");
&__identifier("_ismbcalpha_l");
&__identifier("_imp___ismbcalpha_l");
&__identifier("_ismbcblank");
&__identifier("_imp___ismbcblank");
&__identifier("_ismbcblank_l");
&__identifier("_imp___ismbcblank_l");
&__identifier("_ismbcdigit");
&__identifier("_imp___ismbcdigit");
&__identifier("_ismbcdigit_l");
&__identifier("_imp___ismbcdigit_l");
&__identifier("_ismbcgraph");
&__identifier("_imp___ismbcgraph");
&__identifier("_ismbcgraph_l");
&__identifier("_imp___ismbcgraph_l");
&__identifier("_ismbchira");
&__identifier("_imp___ismbchira");
&__identifier("_ismbchira_l");
&__identifier("_imp___ismbchira_l");
&__identifier("_ismbckata");
&__identifier("_imp___ismbckata");
&__identifier("_ismbckata_l");
&__identifier("_imp___ismbckata_l");
&__identifier("_ismbcl0");
&__identifier("_imp___ismbcl0");
&__identifier("_ismbcl0_l");
&__identifier("_imp___ismbcl0_l");
&__identifier("_ismbcl1");
&__identifier("_imp___ismbcl1");
&__identifier("_ismbcl1_l");
&__identifier("_imp___ismbcl1_l");
&__identifier("_ismbcl2");
&__identifier("_imp___ismbcl2");
&__identifier("_ismbcl2_l");
&__identifier("_imp___ismbcl2_l");
&__identifier("_ismbclegal");
&__identifier("_imp___ismbclegal");
&__identifier("_ismbclegal_l");
&__identifier("_imp___ismbclegal_l");
&__identifier("_ismbclower");
&__identifier("_imp___ismbclower");
&__identifier("_ismbclower_l");
&__identifier("_imp___ismbclower_l");
&__identifier("_ismbcprint");
&__identifier("_imp___ismbcprint");
&__identifier("_ismbcprint_l");
&__identifier("_imp___ismbcprint_l");
&__identifier("_ismbcpunct");
&__identifier("_imp___ismbcpunct");
&__identifier("_ismbcpunct_l");
&__identifier("_imp___ismbcpunct_l");
&__identifier("_ismbcspace");
&__identifier("_imp___ismbcspace");
&__identifier("_ismbcspace_l");
&__identifier("_imp___ismbcspace_l");
&__identifier("_ismbcsymbol");
&__identifier("_imp___ismbcsymbol");
&__identifier("_ismbcsymbol_l");
&__identifier("_imp___ismbcsymbol_l");
&__identifier("_ismbcupper");
&__identifier("_imp___ismbcupper");
&__identifier("_ismbcupper_l");
&__identifier("_imp___ismbcupper_l");
&__identifier("_ismbslead");
&__identifier("_imp___ismbslead");
&__identifier("_ismbslead_l");
&__identifier("_imp___ismbslead_l");
&__identifier("_ismbstrail");
&__identifier("_imp___ismbstrail");
&__identifier("_ismbstrail_l");
&__identifier("_imp___ismbstrail_l");
&__identifier("_mbbtombc");
&__identifier("_imp___mbbtombc");
&__identifier("_mbbtombc_l");
&__identifier("_imp___mbbtombc_l");
&__identifier("_mbbtype");
&__identifier("_imp___mbbtype");
&__identifier("_mbbtype_l");
&__identifier("_imp___mbbtype_l");
&__identifier("_imp___mbcasemap");
&__identifier("_mbccpy");
&__identifier("_imp___mbccpy");
&__identifier("_mbccpy_l");
&__identifier("_imp___mbccpy_l");
&__identifier("_mbccpy_s");
&__identifier("_imp___mbccpy_s");
&__identifier("_mbccpy_s_l");
&__identifier("_imp___mbccpy_s_l");
&__identifier("_mbcjistojms");
&__identifier("_imp___mbcjistojms");
&__identifier("_mbcjistojms_l");
&__identifier("_imp___mbcjistojms_l");
&__identifier("_mbcjmstojis");
&__identifier("_imp___mbcjmstojis");
&__identifier("_mbcjmstojis_l");
&__identifier("_imp___mbcjmstojis_l");
&__identifier("_mbclen");
&__identifier("_imp___mbclen");
&__identifier("_mbclen_l");
&__identifier("_imp___mbclen_l");
&__identifier("_mbctohira");
&__identifier("_imp___mbctohira");
&__identifier("_mbctohira_l");
&__identifier("_imp___mbctohira_l");
&__identifier("_mbctokata");
&__identifier("_imp___mbctokata");
&__identifier("_mbctokata_l");
&__identifier("_imp___mbctokata_l");
&__identifier("_mbctolower");
&__identifier("_imp___mbctolower");
&__identifier("_mbctolower_l");
&__identifier("_imp___mbctolower_l");
&__identifier("_mbctombb");
&__identifier("_imp___mbctombb");
&__identifier("_mbctombb_l");
&__identifier("_imp___mbctombb_l");
&__identifier("_mbctoupper");
&__identifier("_imp___mbctoupper");
&__identifier("_mbctoupper_l");
&__identifier("_imp___mbctoupper_l");
&__identifier("_mblen_l");
&__identifier("_imp___mblen_l");
&__identifier("_mbsbtype");
&__identifier("_imp___mbsbtype");
&__identifier("_mbsbtype_l");
&__identifier("_imp___mbsbtype_l");
&__identifier("_mbscat_s");
&__identifier("_imp___mbscat_s");
&__identifier("_mbscat_s_l");
&__identifier("_imp___mbscat_s_l");
&__identifier("_mbschr");
&__identifier("_imp___mbschr");
&__identifier("_mbschr_l");
&__identifier("_imp___mbschr_l");
&__identifier("_mbscmp");
&__identifier("_imp___mbscmp");
&__identifier("_mbscmp_l");
&__identifier("_imp___mbscmp_l");
&__identifier("_mbscoll");
&__identifier("_imp___mbscoll");
&__identifier("_mbscoll_l");
&__identifier("_imp___mbscoll_l");
&__identifier("_mbscpy_s");
&__identifier("_imp___mbscpy_s");
&__identifier("_mbscpy_s_l");
&__identifier("_imp___mbscpy_s_l");
&__identifier("_mbscspn");
&__identifier("_imp___mbscspn");
&__identifier("_mbscspn_l");
&__identifier("_imp___mbscspn_l");
&__identifier("_mbsdec");
&__identifier("_imp___mbsdec");
&__identifier("_mbsdec_l");
&__identifier("_imp___mbsdec_l");
&__identifier("_mbsdup");
&__identifier("_imp___mbsdup");
&__identifier("_mbsicmp");
&__identifier("_imp___mbsicmp");
&__identifier("_mbsicmp_l");
&__identifier("_imp___mbsicmp_l");
&__identifier("_mbsicoll");
&__identifier("_imp___mbsicoll");
&__identifier("_mbsicoll_l");
&__identifier("_imp___mbsicoll_l");
&__identifier("_mbsinc");
&__identifier("_imp___mbsinc");
&__identifier("_mbsinc_l");
&__identifier("_imp___mbsinc_l");
&__identifier("_mbslen");
&__identifier("_imp___mbslen");
&__identifier("_mbslen_l");
&__identifier("_imp___mbslen_l");
&__identifier("_mbslwr");
&__identifier("_imp___mbslwr");
&__identifier("_mbslwr_l");
&__identifier("_imp___mbslwr_l");
&__identifier("_mbslwr_s");
&__identifier("_imp___mbslwr_s");
&__identifier("_mbslwr_s_l");
&__identifier("_imp___mbslwr_s_l");
&__identifier("_mbsnbcat");
&__identifier("_imp___mbsnbcat");
&__identifier("_mbsnbcat_l");
&__identifier("_imp___mbsnbcat_l");
&__identifier("_mbsnbcat_s");
&__identifier("_imp___mbsnbcat_s");
&__identifier("_mbsnbcat_s_l");
&__identifier("_imp___mbsnbcat_s_l");
&__identifier("_mbsnbcmp");
&__identifier("_imp___mbsnbcmp");
&__identifier("_mbsnbcmp_l");
&__identifier("_imp___mbsnbcmp_l");
&__identifier("_mbsnbcnt");
&__identifier("_imp___mbsnbcnt");
&__identifier("_mbsnbcnt_l");
&__identifier("_imp___mbsnbcnt_l");
&__identifier("_mbsnbcoll");
&__identifier("_imp___mbsnbcoll");
&__identifier("_mbsnbcoll_l");
&__identifier("_imp___mbsnbcoll_l");
&__identifier("_mbsnbcpy");
&__identifier("_imp___mbsnbcpy");
&__identifier("_mbsnbcpy_l");
&__identifier("_imp___mbsnbcpy_l");
&__identifier("_mbsnbcpy_s");
&__identifier("_imp___mbsnbcpy_s");
&__identifier("_mbsnbcpy_s_l");
&__identifier("_imp___mbsnbcpy_s_l");
&__identifier("_mbsnbicmp");
&__identifier("_imp___mbsnbicmp");
&__identifier("_mbsnbicmp_l");
&__identifier("_imp___mbsnbicmp_l");
&__identifier("_mbsnbicoll");
&__identifier("_imp___mbsnbicoll");
&__identifier("_mbsnbicoll_l");
&__identifier("_imp___mbsnbicoll_l");
&__identifier("_mbsnbset");
&__identifier("_imp___mbsnbset");
&__identifier("_mbsnbset_l");
&__identifier("_imp___mbsnbset_l");
&__identifier("_mbsnbset_s");
&__identifier("_imp___mbsnbset_s");
&__identifier("_mbsnbset_s_l");
&__identifier("_imp___mbsnbset_s_l");
&__identifier("_mbsncat");
&__identifier("_imp___mbsncat");
&__identifier("_mbsncat_l");
&__identifier("_imp___mbsncat_l");
&__identifier("_mbsncat_s");
&__identifier("_imp___mbsncat_s");
&__identifier("_mbsncat_s_l");
&__identifier("_imp___mbsncat_s_l");
&__identifier("_mbsnccnt");
&__identifier("_imp___mbsnccnt");
&__identifier("_mbsnccnt_l");
&__identifier("_imp___mbsnccnt_l");
&__identifier("_mbsncmp");
&__identifier("_imp___mbsncmp");
&__identifier("_mbsncmp_l");
&__identifier("_imp___mbsncmp_l");
&__identifier("_mbsncoll");
&__identifier("_imp___mbsncoll");
&__identifier("_mbsncoll_l");
&__identifier("_imp___mbsncoll_l");
&__identifier("_mbsncpy");
&__identifier("_imp___mbsncpy");
&__identifier("_mbsncpy_l");
&__identifier("_imp___mbsncpy_l");
&__identifier("_mbsncpy_s");
&__identifier("_imp___mbsncpy_s");
&__identifier("_mbsncpy_s_l");
&__identifier("_imp___mbsncpy_s_l");
&__identifier("_mbsnextc");
&__identifier("_imp___mbsnextc");
&__identifier("_mbsnextc_l");
&__identifier("_imp___mbsnextc_l");
&__identifier("_mbsnicmp");
&__identifier("_imp___mbsnicmp");
&__identifier("_mbsnicmp_l");
&__identifier("_imp___mbsnicmp_l");
&__identifier("_mbsnicoll");
&__identifier("_imp___mbsnicoll");
&__identifier("_mbsnicoll_l");
&__identifier("_imp___mbsnicoll_l");
&__identifier("_mbsninc");
&__identifier("_imp___mbsninc");
&__identifier("_mbsninc_l");
&__identifier("_imp___mbsninc_l");
&__identifier("_mbsnlen");
&__identifier("_imp___mbsnlen");
&__identifier("_mbsnlen_l");
&__identifier("_imp___mbsnlen_l");
&__identifier("_mbsnset");
&__identifier("_imp___mbsnset");
&__identifier("_mbsnset_l");
&__identifier("_imp___mbsnset_l");
&__identifier("_mbsnset_s");
&__identifier("_imp___mbsnset_s");
&__identifier("_mbsnset_s_l");
&__identifier("_imp___mbsnset_s_l");
&__identifier("_mbspbrk");
&__identifier("_imp___mbspbrk");
&__identifier("_mbspbrk_l");
&__identifier("_imp___mbspbrk_l");
&__identifier("_mbsrchr");
&__identifier("_imp___mbsrchr");
&__identifier("_mbsrchr_l");
&__identifier("_imp___mbsrchr_l");
&__identifier("_mbsrev");
&__identifier("_imp___mbsrev");
&__identifier("_mbsrev_l");
&__identifier("_imp___mbsrev_l");
&__identifier("_mbsset");
&__identifier("_imp___mbsset");
&__identifier("_mbsset_l");
&__identifier("_imp___mbsset_l");
&__identifier("_mbsset_s");
&__identifier("_imp___mbsset_s");
&__identifier("_mbsset_s_l");
&__identifier("_imp___mbsset_s_l");
&__identifier("_mbsspn");
&__identifier("_imp___mbsspn");
&__identifier("_mbsspn_l");
&__identifier("_imp___mbsspn_l");
&__identifier("_mbsspnp");
&__identifier("_imp___mbsspnp");
&__identifier("_mbsspnp_l");
&__identifier("_imp___mbsspnp_l");
&__identifier("_mbsstr");
&__identifier("_imp___mbsstr");
&__identifier("_mbsstr_l");
&__identifier("_imp___mbsstr_l");
&__identifier("_mbstok");
&__identifier("_imp___mbstok");
&__identifier("_mbstok_l");
&__identifier("_imp___mbstok_l");
&__identifier("_mbstok_s");
&__identifier("_imp___mbstok_s");
&__identifier("_mbstok_s_l");
&__identifier("_imp___mbstok_s_l");
&__identifier("_mbstowcs_l");
&__identifier("_imp___mbstowcs_l");
&__identifier("_mbstowcs_s_l");
&__identifier("_imp___mbstowcs_s_l");
&__identifier("_mbstrlen");
&__identifier("_imp___mbstrlen");
&__identifier("_mbstrlen_l");
&__identifier("_imp___mbstrlen_l");
&__identifier("_mbstrnlen");
&__identifier("_imp___mbstrnlen");
&__identifier("_mbstrnlen_l");
&__identifier("_imp___mbstrnlen_l");
&__identifier("_mbsupr");
&__identifier("_imp___mbsupr");
&__identifier("_mbsupr_l");
&__identifier("_imp___mbsupr_l");
&__identifier("_mbsupr_s");
&__identifier("_imp___mbsupr_s");
&__identifier("_mbsupr_s_l");
&__identifier("_imp___mbsupr_s_l");
&__identifier("_mbtowc_l");
&__identifier("_imp___mbtowc_l");
&__identifier("_beep");
&__identifier("_imp___beep");
&__identifier("_cwait");
&__identifier("_imp___cwait");
&__identifier("_execl");
&__identifier("_imp___execl");
&__identifier("_execle");
&__identifier("_imp___execle");
&__identifier("_execlp");
&__identifier("_imp___execlp");
&__identifier("_execlpe");
&__identifier("_imp___execlpe");
&__identifier("_execv");
&__identifier("_imp___execv");
&__identifier("_execve");
&__identifier("_imp___execve");
&__identifier("_execvp");
&__identifier("_imp___execvp");
&__identifier("_execvpe");
&__identifier("_imp___execvpe");
&__identifier("_loaddll");
&__identifier("_imp___loaddll");
&__identifier("_spawnl");
&__identifier("_imp___spawnl");
&__identifier("_spawnle");
&__identifier("_imp___spawnle");
&__identifier("_spawnlp");
&__identifier("_imp___spawnlp");
&__identifier("_spawnlpe");
&__identifier("_imp___spawnlpe");
&__identifier("_spawnv");
&__identifier("_imp___spawnv");
&__identifier("_spawnve");
&__identifier("_imp___spawnve");
&__identifier("_spawnvp");
&__identifier("_imp___spawnvp");
&__identifier("_spawnvpe");
&__identifier("_imp___spawnvpe");
&__identifier("_unloaddll");
&__identifier("_imp___unloaddll");
&__identifier("_wexecl");
&__identifier("_imp___wexecl");
&__identifier("_wexecle");
&__identifier("_imp___wexecle");
&__identifier("_wexeclp");
&__identifier("_imp___wexeclp");
&__identifier("_wexeclpe");
&__identifier("_imp___wexeclpe");
&__identifier("_wexecv");
&__identifier("_imp___wexecv");
&__identifier("_wexecve");
&__identifier("_imp___wexecve");
&__identifier("_wexecvp");
&__identifier("_imp___wexecvp");
&__identifier("_wexecvpe");
&__identifier("_imp___wexecvpe");
&__identifier("_wspawnl");
&__identifier("_imp___wspawnl");
&__identifier("_wspawnle");
&__identifier("_imp___wspawnle");
&__identifier("_wspawnlp");
&__identifier("_imp___wspawnlp");
&__identifier("_wspawnlpe");
&__identifier("_imp___wspawnlpe");
&__identifier("_wspawnv");
&__identifier("_imp___wspawnv");
&__identifier("_wspawnve");
&__identifier("_imp___wspawnve");
&__identifier("_wspawnvp");
&__identifier("_imp___wspawnvp");
&__identifier("_wspawnvpe");
&__identifier("_imp___wspawnvpe");
&__identifier("_Exit");
&__identifier("_imp___Exit");
&__identifier("__control87_2");
&__identifier("_imp____control87_2");
&__identifier("__doserrno");
&__identifier("_imp____doserrno");
&__identifier("__fpe_flt_rounds");
&__identifier("_imp____fpe_flt_rounds");
&__identifier("__fpecode");
&__identifier("_imp____fpecode");
&__identifier("__p___argc");
&__identifier("_imp____p___argc");
&__identifier("__p___argv");
&__identifier("_imp____p___argv");
&__identifier("__p___wargv");
&__identifier("_imp____p___wargv");
&__identifier("__p__acmdln");
&__identifier("_imp____p__acmdln");
&__identifier("__p__pgmptr");
&__identifier("_imp____p__pgmptr");
&__identifier("__p__wcmdln");
&__identifier("_imp____p__wcmdln");
&__identifier("__p__wpgmptr");
&__identifier("_imp____p__wpgmptr");
&__identifier("__pxcptinfoptrs");
&__identifier("_imp____pxcptinfoptrs");
&__identifier("__sys_errlist");
&__identifier("_imp____sys_errlist");
&__identifier("__sys_nerr");
&__identifier("_imp____sys_nerr");
&__identifier("__threadhandle");
&__identifier("_imp____threadhandle");
&__identifier("__threadid");
&__identifier("_imp____threadid");
&__identifier("__wcserror");
&__identifier("_imp____wcserror");
&__identifier("__wcserror_s");
&__identifier("_imp____wcserror_s");
&__identifier("_assert");
&__identifier("_imp___assert");
&__identifier("_beginthread");
&__identifier("_imp___beginthread");
&__identifier("_beginthreadex");
&__identifier("_imp___beginthreadex");
&__identifier("_c_exit");
&__identifier("_imp___c_exit");
&__identifier("_cexit");
&__identifier("_imp___cexit");
&__identifier("_clearfp");
&__identifier("_imp___clearfp");
&__identifier("_configure_narrow_argv");
&__identifier("_imp___configure_narrow_argv");
&__identifier("_configure_wide_argv");
&__identifier("_imp___configure_wide_argv");
&__identifier("_control87");
&__identifier("_imp___control87");
&__identifier("_controlfp");
&__identifier("_imp___controlfp");
&__identifier("_controlfp_s");
&__identifier("_imp___controlfp_s");
&__identifier("_crt_at_quick_exit");
&__identifier("_imp___crt_at_quick_exit");
&__identifier("_crt_atexit");
&__identifier("_imp___crt_atexit");
&__identifier("_crt_debugger_hook");
&__identifier("_imp___crt_debugger_hook");
&__identifier("_endthread");
&__identifier("_imp___endthread");
&__identifier("_endthreadex");
&__identifier("_imp___endthreadex");
&__identifier("_errno");
&__identifier("_imp___errno");
&__identifier("_execute_onexit_table");
&__identifier("_imp___execute_onexit_table");
&__identifier("_exit");
&__identifier("_imp___exit");
&__identifier("_fpieee_flt");
&__identifier("_imp___fpieee_flt");
&__identifier("_fpreset");
&__identifier("_imp___fpreset");
&__identifier("_get_doserrno");
&__identifier("_imp___get_doserrno");
&__identifier("_get_errno");
&__identifier("_imp___get_errno");
&__identifier("_get_initial_narrow_environment");
&__identifier("_imp___get_initial_narrow_environment");
&__identifier("_get_initial_wide_environment");
&__identifier("_imp___get_initial_wide_environment");
&__identifier("_get_invalid_parameter_handler");
&__identifier("_imp___get_invalid_parameter_handler");
&__identifier("_get_narrow_winmain_command_line");
&__identifier("_imp___get_narrow_winmain_command_line");
&__identifier("_get_pgmptr");
&__identifier("_imp___get_pgmptr");
&__identifier("_get_terminate");
&__identifier("_imp___get_terminate");
&__identifier("_get_thread_local_invalid_parameter_handler");
&__identifier("_imp___get_thread_local_invalid_parameter_handler");
&__identifier("_get_wide_winmain_command_line");
&__identifier("_imp___get_wide_winmain_command_line");
&__identifier("_get_wpgmptr");
&__identifier("_imp___get_wpgmptr");
&__identifier("_getdllprocaddr");
&__identifier("_imp___getdllprocaddr");
&__identifier("_getpid");
&__identifier("_imp___getpid");
&__identifier("_initialize_narrow_environment");
&__identifier("_imp___initialize_narrow_environment");
&__identifier("_initialize_onexit_table");
&__identifier("_imp___initialize_onexit_table");
&__identifier("_initialize_wide_environment");
&__identifier("_imp___initialize_wide_environment");
&__identifier("_initterm");
&__identifier("_imp___initterm");
&__identifier("_initterm_e");
&__identifier("_imp___initterm_e");
&__identifier("_invalid_parameter_noinfo");
&__identifier("_imp___invalid_parameter_noinfo");
&__identifier("_invalid_parameter_noinfo_noreturn");
&__identifier("_imp___invalid_parameter_noinfo_noreturn");
&__identifier("_invoke_watson");
&__identifier("_imp___invoke_watson");
&__identifier("_query_app_type");
&__identifier("_imp___query_app_type");
&__identifier("_register_onexit_function");
&__identifier("_imp___register_onexit_function");
&__identifier("_register_thread_local_exe_atexit_callback");
&__identifier("_imp___register_thread_local_exe_atexit_callback");
&__identifier("_resetstkoflw");
&__identifier("_imp___resetstkoflw");
&__identifier("_seh_filter_dll");
&__identifier("_imp___seh_filter_dll");
&__identifier("_seh_filter_exe");
&__identifier("_imp___seh_filter_exe");
&__identifier("_set_abort_behavior");
&__identifier("_imp___set_abort_behavior");
&__identifier("_set_app_type");
&__identifier("_imp___set_app_type");
&__identifier("_set_controlfp");
&__identifier("_imp___set_controlfp");
&__identifier("_set_doserrno");
&__identifier("_imp___set_doserrno");
&__identifier("_set_errno");
&__identifier("_imp___set_errno");
&__identifier("_set_error_mode");
&__identifier("_imp___set_error_mode");
&__identifier("_set_invalid_parameter_handler");
&__identifier("_imp___set_invalid_parameter_handler");
&__identifier("_set_new_handler");
&__identifier("_imp___set_new_handler");
&__identifier("_set_thread_local_invalid_parameter_handler");
&__identifier("_imp___set_thread_local_invalid_parameter_handler");
&__identifier("_seterrormode");
&__identifier("_imp___seterrormode");
&__identifier("_sleep");
&__identifier("_imp___sleep");
&__identifier("_statusfp");
&__identifier("_imp___statusfp");
&__identifier("_statusfp2");
&__identifier("_imp___statusfp2");
&__identifier("_strerror");
&__identifier("_imp___strerror");
&__identifier("_strerror_s");
&__identifier("_imp___strerror_s");
&__identifier("_wassert");
&__identifier("_imp___wassert");
&__identifier("_wcserror");
&__identifier("_imp___wcserror");
&__identifier("_wcserror_s");
&__identifier("_imp___wcserror_s");
&__identifier("_wperror");
&__identifier("_imp___wperror");
&__identifier("_wsystem");
&__identifier("_imp___wsystem");
&__identifier("abort");
&__identifier("_imp__abort");
&__identifier("exit");
&__identifier("_imp__exit");
&__identifier("feclearexcept");
&__identifier("_imp__feclearexcept");
&__identifier("fegetenv");
&__identifier("_imp__fegetenv");
&__identifier("fegetexceptflag");
&__identifier("_imp__fegetexceptflag");
&__identifier("fegetround");
&__identifier("_imp__fegetround");
&__identifier("feholdexcept");
&__identifier("_imp__feholdexcept");
&__identifier("fesetenv");
&__identifier("_imp__fesetenv");
&__identifier("fesetexceptflag");
&__identifier("_imp__fesetexceptflag");
&__identifier("fesetround");
&__identifier("_imp__fesetround");
&__identifier("fetestexcept");
&__identifier("_imp__fetestexcept");
&__identifier("perror");
&__identifier("_imp__perror");
&__identifier("quick_exit");
&__identifier("_imp__quick_exit");
&__identifier("raise");
&__identifier("_imp__raise");
&__identifier("set_terminate");
&__identifier("_imp__set_terminate");
&__identifier("signal");
&__identifier("_imp__signal");
&__identifier("strerror");
&__identifier("_imp__strerror");
&__identifier("strerror_s");
&__identifier("_imp__strerror_s");
&__identifier("system");
&__identifier("_imp__system");
&__identifier("terminate");
&__identifier("_imp__terminate");
&__identifier("__acrt_iob_func");
&__identifier("_imp____acrt_iob_func");
&__identifier("__p__commode");
&__identifier("_imp____p__commode");
&__identifier("__p__fmode");
&__identifier("_imp____p__fmode");
&__identifier("__stdio_common_vfprintf");
&__identifier("_imp____stdio_common_vfprintf");
&__identifier("__stdio_common_vfprintf_p");
&__identifier("_imp____stdio_common_vfprintf_p");
&__identifier("__stdio_common_vfprintf_s");
&__identifier("_imp____stdio_common_vfprintf_s");
&__identifier("__stdio_common_vfscanf");
&__identifier("_imp____stdio_common_vfscanf");
&__identifier("__stdio_common_vfwprintf");
&__identifier("_imp____stdio_common_vfwprintf");
&__identifier("__stdio_common_vfwprintf_p");
&__identifier("_imp____stdio_common_vfwprintf_p");
&__identifier("__stdio_common_vfwprintf_s");
&__identifier("_imp____stdio_common_vfwprintf_s");
&__identifier("__stdio_common_vfwscanf");
&__identifier("_imp____stdio_common_vfwscanf");
&__identifier("__stdio_common_vsnprintf_s");
&__identifier("_imp____stdio_common_vsnprintf_s");
&__identifier("__stdio_common_vsnwprintf_s");
&__identifier("_imp____stdio_common_vsnwprintf_s");
&__identifier("__stdio_common_vsprintf");
&__identifier("_imp____stdio_common_vsprintf");
&__identifier("__stdio_common_vsprintf_p");
&__identifier("_imp____stdio_common_vsprintf_p");
&__identifier("__stdio_common_vsprintf_s");
&__identifier("_imp____stdio_common_vsprintf_s");
&__identifier("__stdio_common_vsscanf");
&__identifier("_imp____stdio_common_vsscanf");
&__identifier("__stdio_common_vswprintf");
&__identifier("_imp____stdio_common_vswprintf");
&__identifier("__stdio_common_vswprintf_p");
&__identifier("_imp____stdio_common_vswprintf_p");
&__identifier("__stdio_common_vswprintf_s");
&__identifier("_imp____stdio_common_vswprintf_s");
&__identifier("__stdio_common_vswscanf");
&__identifier("_imp____stdio_common_vswscanf");
&__identifier("_chsize");
&__identifier("_imp___chsize");
&__identifier("_chsize_s");
&__identifier("_imp___chsize_s");
&__identifier("_close");
&__identifier("_imp___close");
&__identifier("_commit");
&__identifier("_imp___commit");
&__identifier("_creat");
&__identifier("_imp___creat");
&__identifier("_dup");
&__identifier("_imp___dup");
&__identifier("_dup2");
&__identifier("_imp___dup2");
&__identifier("_eof");
&__identifier("_imp___eof");
&__identifier("_fcloseall");
&__identifier("_imp___fcloseall");
&__identifier("_fgetchar");
&__identifier("_imp___fgetchar");
&__identifier("_fgetwchar");
&__identifier("_imp___fgetwchar");
&__identifier("_filelength");
&__identifier("_imp___filelength");
&__identifier("_filelengthi64");
&__identifier("_imp___filelengthi64");
&__identifier("_fileno");
&__identifier("_imp___fileno");
&__identifier("_flushall");
&__identifier("_imp___flushall");
&__identifier("_fputchar");
&__identifier("_imp___fputchar");
&__identifier("_fputwchar");
&__identifier("_imp___fputwchar");
&__identifier("_fseeki64");
&__identifier("_imp___fseeki64");
&__identifier("_fsopen");
&__identifier("_imp___fsopen");
&__identifier("_ftelli64");
&__identifier("_imp___ftelli64");
&__identifier("_get_fmode");
&__identifier("_imp___get_fmode");
&__identifier("_get_osfhandle");
&__identifier("_imp___get_osfhandle");
&__identifier("_get_printf_count_output");
&__identifier("_imp___get_printf_count_output");
&__identifier("_get_stream_buffer_pointers");
&__identifier("_imp___get_stream_buffer_pointers");
&__identifier("_getcwd");
&__identifier("_imp___getcwd");
&__identifier("_getdcwd");
&__identifier("_imp___getdcwd");
&__identifier("_getmaxstdio");
&__identifier("_imp___getmaxstdio");
&__identifier("_getw");
&__identifier("_imp___getw");
&__identifier("_getws");
&__identifier("_imp___getws");
&__identifier("_getws_s");
&__identifier("_imp___getws_s");
&__identifier("_isatty");
&__identifier("_imp___isatty");
&__identifier("_kbhit");
&__identifier("_imp___kbhit");
&__identifier("_locking");
&__identifier("_imp___locking");
&__identifier("_lseek");
&__identifier("_imp___lseek");
&__identifier("_lseeki64");
&__identifier("_imp___lseeki64");
&__identifier("_mktemp");
&__identifier("_imp___mktemp");
&__identifier("_mktemp_s");
&__identifier("_imp___mktemp_s");
&__identifier("_open");
&__identifier("_imp___open");
&__identifier("_open_osfhandle");
&__identifier("_imp___open_osfhandle");
&__identifier("_pclose");
&__identifier("_imp___pclose");
&__identifier("_pipe");
&__identifier("_imp___pipe");
&__identifier("_popen");
&__identifier("_imp___popen");
&__identifier("_putw");
&__identifier("_imp___putw");
&__identifier("_putws");
&__identifier("_imp___putws");
&__identifier("_read");
&__identifier("_imp___read");
&__identifier("_rmtmp");
&__identifier("_imp___rmtmp");
&__identifier("_set_fmode");
&__identifier("_imp___set_fmode");
&__identifier("_set_printf_count_output");
&__identifier("_imp___set_printf_count_output");
&__identifier("_setmaxstdio");
&__identifier("_imp___setmaxstdio");
&__identifier("_setmode");
&__identifier("_imp___setmode");
&__identifier("_sopen");
&__identifier("_imp___sopen");
&__identifier("_sopen_dispatch");
&__identifier("_imp___sopen_dispatch");
&__identifier("_sopen_s");
&__identifier("_imp___sopen_s");
&__identifier("_tell");
&__identifier("_imp___tell");
&__identifier("_telli64");
&__identifier("_imp___telli64");
&__identifier("_tempnam");
&__identifier("_imp___tempnam");
&__identifier("_wcreat");
&__identifier("_imp___wcreat");
&__identifier("_wfdopen");
&__identifier("_imp___wfdopen");
&__identifier("_wfopen");
&__identifier("_imp___wfopen");
&__identifier("_wfopen_s");
&__identifier("_imp___wfopen_s");
&__identifier("_wfreopen");
&__identifier("_imp___wfreopen");
&__identifier("_wfreopen_s");
&__identifier("_imp___wfreopen_s");
&__identifier("_wfsopen");
&__identifier("_imp___wfsopen");
&__identifier("_wmktemp");
&__identifier("_imp___wmktemp");
&__identifier("_wmktemp_s");
&__identifier("_imp___wmktemp_s");
&__identifier("_wopen");
&__identifier("_imp___wopen");
&__identifier("_wpopen");
&__identifier("_imp___wpopen");
&__identifier("_write");
&__identifier("_imp___write");
&__identifier("_wsopen");
&__identifier("_imp___wsopen");
&__identifier("_wsopen_dispatch");
&__identifier("_imp___wsopen_dispatch");
&__identifier("_wsopen_s");
&__identifier("_imp___wsopen_s");
&__identifier("_wtempnam");
&__identifier("_imp___wtempnam");
&__identifier("_wtmpnam");
&__identifier("_imp___wtmpnam");
&__identifier("_wtmpnam_s");
&__identifier("_imp___wtmpnam_s");
&__identifier("clearerr");
&__identifier("_imp__clearerr");
&__identifier("clearerr_s");
&__identifier("_imp__clearerr_s");
&__identifier("fclose");
&__identifier("_imp__fclose");
&__identifier("feof");
&__identifier("_imp__feof");
&__identifier("ferror");
&__identifier("_imp__ferror");
&__identifier("fflush");
&__identifier("_imp__fflush");
&__identifier("fgetc");
&__identifier("_imp__fgetc");
&__identifier("fgetpos");
&__identifier("_imp__fgetpos");
&__identifier("fgets");
&__identifier("_imp__fgets");
&__identifier("fgetwc");
&__identifier("_imp__fgetwc");
&__identifier("fgetws");
&__identifier("_imp__fgetws");
&__identifier("fopen");
&__identifier("_imp__fopen");
&__identifier("fopen_s");
&__identifier("_imp__fopen_s");
&__identifier("fputc");
&__identifier("_imp__fputc");
&__identifier("fputs");
&__identifier("_imp__fputs");
&__identifier("fputwc");
&__identifier("_imp__fputwc");
&__identifier("fputws");
&__identifier("_imp__fputws");
&__identifier("fread");
&__identifier("_imp__fread");
&__identifier("fread_s");
&__identifier("_imp__fread_s");
&__identifier("freopen");
&__identifier("_imp__freopen");
&__identifier("freopen_s");
&__identifier("_imp__freopen_s");
&__identifier("fseek");
&__identifier("_imp__fseek");
&__identifier("fsetpos");
&__identifier("_imp__fsetpos");
&__identifier("ftell");
&__identifier("_imp__ftell");
&__identifier("fwrite");
&__identifier("_imp__fwrite");
&__identifier("getc");
&__identifier("_imp__getc");
&__identifier("getchar");
&__identifier("_imp__getchar");
&__identifier("gets");
&__identifier("_imp__gets");
&__identifier("gets_s");
&__identifier("_imp__gets_s");
&__identifier("getwc");
&__identifier("_imp__getwc");
&__identifier("getwchar");
&__identifier("_imp__getwchar");
&__identifier("putc");
&__identifier("_imp__putc");
&__identifier("putchar");
&__identifier("_imp__putchar");
&__identifier("puts");
&__identifier("_imp__puts");
&__identifier("putwc");
&__identifier("_imp__putwc");
&__identifier("putwchar");
&__identifier("_imp__putwchar");
&__identifier("rewind");
&__identifier("_imp__rewind");
&__identifier("setbuf");
&__identifier("_imp__setbuf");
&__identifier("setvbuf");
&__identifier("_imp__setvbuf");
&__identifier("tmpfile");
&__identifier("_imp__tmpfile");
&__identifier("tmpfile_s");
&__identifier("_imp__tmpfile_s");
&__identifier("tmpnam");
&__identifier("_imp__tmpnam");
&__identifier("tmpnam_s");
&__identifier("_imp__tmpnam_s");
&__identifier("ungetc");
&__identifier("_imp__ungetc");
&__identifier("ungetwc");
&__identifier("_imp__ungetwc");
&__identifier("__isascii");
&__identifier("_imp____isascii");
&__identifier("__iscsym");
&__identifier("_imp____iscsym");
&__identifier("__iscsymf");
&__identifier("_imp____iscsymf");
&__identifier("__iswcsym");
&__identifier("_imp____iswcsym");
&__identifier("__iswcsymf");
&__identifier("_imp____iswcsymf");
&__identifier("__strncnt");
&__identifier("_imp____strncnt");
&__identifier("__wcsncnt");
&__identifier("_imp____wcsncnt");
&__identifier("_isalnum_l");
&__identifier("_imp___isalnum_l");
&__identifier("_isalpha_l");
&__identifier("_imp___isalpha_l");
&__identifier("_isblank_l");
&__identifier("_imp___isblank_l");
&__identifier("_iscntrl_l");
&__identifier("_imp___iscntrl_l");
&__identifier("_isctype");
&__identifier("_imp___isctype");
&__identifier("_isctype_l");
&__identifier("_imp___isctype_l");
&__identifier("_isdigit_l");
&__identifier("_imp___isdigit_l");
&__identifier("_isgraph_l");
&__identifier("_imp___isgraph_l");
&__identifier("_isleadbyte_l");
&__identifier("_imp___isleadbyte_l");
&__identifier("_islower_l");
&__identifier("_imp___islower_l");
&__identifier("_isprint_l");
&__identifier("_imp___isprint_l");
&__identifier("_ispunct_l");
&__identifier("_imp___ispunct_l");
&__identifier("_isspace_l");
&__identifier("_imp___isspace_l");
&__identifier("_isupper_l");
&__identifier("_imp___isupper_l");
&__identifier("_iswalnum_l");
&__identifier("_imp___iswalnum_l");
&__identifier("_iswalpha_l");
&__identifier("_imp___iswalpha_l");
&__identifier("_iswblank_l");
&__identifier("_imp___iswblank_l");
&__identifier("_iswcntrl_l");
&__identifier("_imp___iswcntrl_l");
&__identifier("_iswcsym_l");
&__identifier("_imp___iswcsym_l");
&__identifier("_iswcsymf_l");
&__identifier("_imp___iswcsymf_l");
&__identifier("_iswctype_l");
&__identifier("_imp___iswctype_l");
&__identifier("_iswdigit_l");
&__identifier("_imp___iswdigit_l");
&__identifier("_iswgraph_l");
&__identifier("_imp___iswgraph_l");
&__identifier("_iswlower_l");
&__identifier("_imp___iswlower_l");
&__identifier("_iswprint_l");
&__identifier("_imp___iswprint_l");
&__identifier("_iswpunct_l");
&__identifier("_imp___iswpunct_l");
&__identifier("_iswspace_l");
&__identifier("_imp___iswspace_l");
&__identifier("_iswupper_l");
&__identifier("_imp___iswupper_l");
&__identifier("_iswxdigit_l");
&__identifier("_imp___iswxdigit_l");
&__identifier("_isxdigit_l");
&__identifier("_imp___isxdigit_l");
&__identifier("_memccpy");
&__identifier("_imp___memccpy");
&__identifier("_memicmp");
&__identifier("_imp___memicmp");
&__identifier("_memicmp_l");
&__identifier("_imp___memicmp_l");
&__identifier("_strcoll_l");
&__identifier("_imp___strcoll_l");
&__identifier("_strdup");
&__identifier("_imp___strdup");
&__identifier("_stricmp");
&__identifier("_imp___stricmp");
&__identifier("_stricmp_l");
&__identifier("_imp___stricmp_l");
&__identifier("_stricoll");
&__identifier("_imp___stricoll");
&__identifier("_stricoll_l");
&__identifier("_imp___stricoll_l");
&__identifier("_strlwr");
&__identifier("_imp___strlwr");
&__identifier("_strlwr_l");
&__identifier("_imp___strlwr_l");
&__identifier("_strlwr_s");
&__identifier("_imp___strlwr_s");
&__identifier("_strlwr_s_l");
&__identifier("_imp___strlwr_s_l");
&__identifier("_strncoll");
&__identifier("_imp___strncoll");
&__identifier("_strncoll_l");
&__identifier("_imp___strncoll_l");
&__identifier("_strnicmp");
&__identifier("_imp___strnicmp");
&__identifier("_strnicmp_l");
&__identifier("_imp___strnicmp_l");
&__identifier("_strnicoll");
&__identifier("_imp___strnicoll");
&__identifier("_strnicoll_l");
&__identifier("_imp___strnicoll_l");
&__identifier("_strnset");
&__identifier("_imp___strnset");
&__identifier("_strnset_s");
&__identifier("_imp___strnset_s");
&__identifier("_strrev");
&__identifier("_imp___strrev");
&__identifier("_strset");
&__identifier("_imp___strset");
&__identifier("_strset_s");
&__identifier("_imp___strset_s");
&__identifier("_strupr");
&__identifier("_imp___strupr");
&__identifier("_strupr_l");
&__identifier("_imp___strupr_l");
&__identifier("_strupr_s");
&__identifier("_imp___strupr_s");
&__identifier("_strupr_s_l");
&__identifier("_imp___strupr_s_l");
&__identifier("_strxfrm_l");
&__identifier("_imp___strxfrm_l");
&__identifier("_tolower");
&__identifier("_imp___tolower");
&__identifier("_tolower_l");
&__identifier("_imp___tolower_l");
&__identifier("_toupper");
&__identifier("_imp___toupper");
&__identifier("_toupper_l");
&__identifier("_imp___toupper_l");
&__identifier("_towlower_l");
&__identifier("_imp___towlower_l");
&__identifier("_towupper_l");
&__identifier("_imp___towupper_l");
&__identifier("_wcscoll_l");
&__identifier("_imp___wcscoll_l");
&__identifier("_wcsdup");
&__identifier("_imp___wcsdup");
&__identifier("_wcsicmp");
&__identifier("_imp___wcsicmp");
&__identifier("_wcsicmp_l");
&__identifier("_imp___wcsicmp_l");
&__identifier("_wcsicoll");
&__identifier("_imp___wcsicoll");
&__identifier("_wcsicoll_l");
&__identifier("_imp___wcsicoll_l");
&__identifier("_wcslwr");
&__identifier("_imp___wcslwr");
&__identifier("_wcslwr_l");
&__identifier("_imp___wcslwr_l");
&__identifier("_wcslwr_s");
&__identifier("_imp___wcslwr_s");
&__identifier("_wcslwr_s_l");
&__identifier("_imp___wcslwr_s_l");
&__identifier("_wcsncoll");
&__identifier("_imp___wcsncoll");
&__identifier("_wcsncoll_l");
&__identifier("_imp___wcsncoll_l");
&__identifier("_wcsnicmp");
&__identifier("_imp___wcsnicmp");
&__identifier("_wcsnicmp_l");
&__identifier("_imp___wcsnicmp_l");
&__identifier("_wcsnicoll");
&__identifier("_imp___wcsnicoll");
&__identifier("_wcsnicoll_l");
&__identifier("_imp___wcsnicoll_l");
&__identifier("_wcsnset");
&__identifier("_imp___wcsnset");
&__identifier("_wcsnset_s");
&__identifier("_imp___wcsnset_s");
&__identifier("_wcsrev");
&__identifier("_imp___wcsrev");
&__identifier("_wcsset");
&__identifier("_imp___wcsset");
&__identifier("_wcsset_s");
&__identifier("_imp___wcsset_s");
&__identifier("_wcsupr");
&__identifier("_imp___wcsupr");
&__identifier("_wcsupr_l");
&__identifier("_imp___wcsupr_l");
&__identifier("_wcsupr_s");
&__identifier("_imp___wcsupr_s");
&__identifier("_wcsupr_s_l");
&__identifier("_imp___wcsupr_s_l");
&__identifier("_wcsxfrm_l");
&__identifier("_imp___wcsxfrm_l");
&__identifier("_wctype");
&__identifier("_imp___wctype");
&__identifier("is_wctype");
&__identifier("_imp__is_wctype");
&__identifier("isalnum");
&__identifier("_imp__isalnum");
&__identifier("isalpha");
&__identifier("_imp__isalpha");
&__identifier("isblank");
&__identifier("_imp__isblank");
&__identifier("iscntrl");
&__identifier("_imp__iscntrl");
&__identifier("isdigit");
&__identifier("_imp__isdigit");
&__identifier("isgraph");
&__identifier("_imp__isgraph");
&__identifier("isleadbyte");
&__identifier("_imp__isleadbyte");
&__identifier("islower");
&__identifier("_imp__islower");
&__identifier("isprint");
&__identifier("_imp__isprint");
&__identifier("ispunct");
&__identifier("_imp__ispunct");
&__identifier("isspace");
&__identifier("_imp__isspace");
&__identifier("isupper");
&__identifier("_imp__isupper");
&__identifier("iswalnum");
&__identifier("_imp__iswalnum");
&__identifier("iswalpha");
&__identifier("_imp__iswalpha");
&__identifier("iswascii");
&__identifier("_imp__iswascii");
&__identifier("iswblank");
&__identifier("_imp__iswblank");
&__identifier("iswcntrl");
&__identifier("_imp__iswcntrl");
&__identifier("iswctype");
&__identifier("_imp__iswctype");
&__identifier("iswdigit");
&__identifier("_imp__iswdigit");
&__identifier("iswgraph");
&__identifier("_imp__iswgraph");
&__identifier("iswlower");
&__identifier("_imp__iswlower");
&__identifier("iswprint");
&__identifier("_imp__iswprint");
&__identifier("iswpunct");
&__identifier("_imp__iswpunct");
&__identifier("iswspace");
&__identifier("_imp__iswspace");
&__identifier("iswupper");
&__identifier("_imp__iswupper");
&__identifier("iswxdigit");
&__identifier("_imp__iswxdigit");
&__identifier("isxdigit");
&__identifier("_imp__isxdigit");
&__identifier("mblen");
&__identifier("_imp__mblen");
&__identifier("mbrlen");
&__identifier("_imp__mbrlen");
&__identifier("memcpy_s");
&__identifier("_imp__memcpy_s");
&__identifier("memmove_s");
&__identifier("_imp__memmove_s");
&__identifier("strcat");
&__identifier("_imp__strcat");
&__identifier("strcat_s");
&__identifier("_imp__strcat_s");
&__identifier("strcmp");
&__identifier("_imp__strcmp");
&__identifier("strcoll");
&__identifier("_imp__strcoll");
&__identifier("strcpy");
&__identifier("_imp__strcpy");
&__identifier("strcpy_s");
&__identifier("_imp__strcpy_s");
&__identifier("strcspn");
&__identifier("_imp__strcspn");
&__identifier("strlen");
&__identifier("_imp__strlen");
&__identifier("strncat");
&__identifier("_imp__strncat");
&__identifier("strncat_s");
&__identifier("_imp__strncat_s");
&__identifier("strncmp");
&__identifier("_imp__strncmp");
&__identifier("strncpy");
&__identifier("_imp__strncpy");
&__identifier("strncpy_s");
&__identifier("_imp__strncpy_s");
&__identifier("strnlen");
&__identifier("_imp__strnlen");
&__identifier("strpbrk");
&__identifier("_imp__strpbrk");
&__identifier("strspn");
&__identifier("_imp__strspn");
&__identifier("strtok");
&__identifier("_imp__strtok");
&__identifier("strtok_s");
&__identifier("_imp__strtok_s");
&__identifier("strxfrm");
&__identifier("_imp__strxfrm");
&__identifier("tolower");
&__identifier("_imp__tolower");
&__identifier("toupper");
&__identifier("_imp__toupper");
&__identifier("towctrans");
&__identifier("_imp__towctrans");
&__identifier("towlower");
&__identifier("_imp__towlower");
&__identifier("towupper");
&__identifier("_imp__towupper");
&__identifier("wcscat");
&__identifier("_imp__wcscat");
&__identifier("wcscat_s");
&__identifier("_imp__wcscat_s");
&__identifier("wcscmp");
&__identifier("_imp__wcscmp");
&__identifier("wcscoll");
&__identifier("_imp__wcscoll");
&__identifier("wcscpy");
&__identifier("_imp__wcscpy");
&__identifier("wcscpy_s");
&__identifier("_imp__wcscpy_s");
&__identifier("wcscspn");
&__identifier("_imp__wcscspn");
&__identifier("wcslen");
&__identifier("_imp__wcslen");
&__identifier("wcsncat");
&__identifier("_imp__wcsncat");
&__identifier("wcsncat_s");
&__identifier("_imp__wcsncat_s");
&__identifier("wcsncmp");
&__identifier("_imp__wcsncmp");
&__identifier("wcsncpy");
&__identifier("_imp__wcsncpy");
&__identifier("wcsncpy_s");
&__identifier("_imp__wcsncpy_s");
&__identifier("wcsnlen");
&__identifier("_imp__wcsnlen");
&__identifier("wcspbrk");
&__identifier("_imp__wcspbrk");
&__identifier("wcsspn");
&__identifier("_imp__wcsspn");
&__identifier("wcstok");
&__identifier("_imp__wcstok");
&__identifier("wcstok_s");
&__identifier("_imp__wcstok_s");
&__identifier("wcsxfrm");
&__identifier("_imp__wcsxfrm");
&__identifier("wctype");
&__identifier("_imp__wctype");
&__identifier("wmemcpy_s");
&__identifier("_imp__wmemcpy_s");
&__identifier("wmemmove_s");
&__identifier("_imp__wmemmove_s");
&__identifier("_Getdays");
&__identifier("_imp___Getdays");
&__identifier("_Getmonths");
&__identifier("_imp___Getmonths");
&__identifier("_Gettnames");
&__identifier("_imp___Gettnames");
&__identifier("_Strftime");
&__identifier("_imp___Strftime");
&__identifier("_W_Getdays");
&__identifier("_imp___W_Getdays");
&__identifier("_W_Getmonths");
&__identifier("_imp___W_Getmonths");
&__identifier("_W_Gettnames");
&__identifier("_imp___W_Gettnames");
&__identifier("_Wcsftime");
&__identifier("_imp___Wcsftime");
&__identifier("__daylight");
&__identifier("_imp____daylight");
&__identifier("__dstbias");
&__identifier("_imp____dstbias");
&__identifier("__timezone");
&__identifier("_imp____timezone");
&__identifier("__tzname");
&__identifier("_imp____tzname");
&__identifier("_ctime32");
&__identifier("_imp___ctime32");
&__identifier("_ctime32_s");
&__identifier("_imp___ctime32_s");
&__identifier("_ctime64");
&__identifier("_imp___ctime64");
&__identifier("_ctime64_s");
&__identifier("_imp___ctime64_s");
&__identifier("_difftime32");
&__identifier("_imp___difftime32");
&__identifier("_difftime64");
&__identifier("_imp___difftime64");
&__identifier("_ftime32");
&__identifier("_imp___ftime32");
&__identifier("_ftime32_s");
&__identifier("_imp___ftime32_s");
&__identifier("_ftime64");
&__identifier("_imp___ftime64");
&__identifier("_ftime64_s");
&__identifier("_imp___ftime64_s");
&__identifier("_futime32");
&__identifier("_imp___futime32");
&__identifier("_futime64");
&__identifier("_imp___futime64");
&__identifier("_get_daylight");
&__identifier("_imp___get_daylight");
&__identifier("_get_dstbias");
&__identifier("_imp___get_dstbias");
&__identifier("_get_timezone");
&__identifier("_imp___get_timezone");
&__identifier("_get_tzname");
&__identifier("_imp___get_tzname");
&__identifier("_getsystime");
&__identifier("_imp___getsystime");
&__identifier("_gmtime32");
&__identifier("_imp___gmtime32");
&__identifier("_gmtime32_s");
&__identifier("_imp___gmtime32_s");
&__identifier("_gmtime64");
&__identifier("_imp___gmtime64");
&__identifier("_gmtime64_s");
&__identifier("_imp___gmtime64_s");
&__identifier("_localtime32");
&__identifier("_imp___localtime32");
&__identifier("_localtime32_s");
&__identifier("_imp___localtime32_s");
&__identifier("_localtime64");
&__identifier("_imp___localtime64");
&__identifier("_localtime64_s");
&__identifier("_imp___localtime64_s");
&__identifier("_mkgmtime32");
&__identifier("_imp___mkgmtime32");
&__identifier("_mkgmtime64");
&__identifier("_imp___mkgmtime64");
&__identifier("_mktime32");
&__identifier("_imp___mktime32");
&__identifier("_mktime64");
&__identifier("_imp___mktime64");
&__identifier("_setsystime");
&__identifier("_imp___setsystime");
&__identifier("_strdate");
&__identifier("_imp___strdate");
&__identifier("_strdate_s");
&__identifier("_imp___strdate_s");
&__identifier("_strtime");
&__identifier("_imp___strtime");
&__identifier("_strtime_s");
&__identifier("_imp___strtime_s");
&__identifier("_time32");
&__identifier("_imp___time32");
&__identifier("_time64");
&__identifier("_imp___time64");
&__identifier("_timespec32_get");
&__identifier("_imp___timespec32_get");
&__identifier("_timespec64_get");
&__identifier("_imp___timespec64_get");
&__identifier("_tzset");
&__identifier("_imp___tzset");
&__identifier("_utime32");
&__identifier("_imp___utime32");
&__identifier("_utime64");
&__identifier("_imp___utime64");
&__identifier("_wasctime");
&__identifier("_imp___wasctime");
&__identifier("_wasctime_s");
&__identifier("_imp___wasctime_s");
&__identifier("_wctime32");
&__identifier("_imp___wctime32");
&__identifier("_wctime32_s");
&__identifier("_imp___wctime32_s");
&__identifier("_wctime64");
&__identifier("_imp___wctime64");
&__identifier("_wctime64_s");
&__identifier("_imp___wctime64_s");
&__identifier("_wstrdate");
&__identifier("_imp___wstrdate");
&__identifier("_wstrdate_s");
&__identifier("_imp___wstrdate_s");
&__identifier("_wstrtime");
&__identifier("_imp___wstrtime");
&__identifier("_wstrtime_s");
&__identifier("_imp___wstrtime_s");
&__identifier("_wutime32");
&__identifier("_imp___wutime32");
&__identifier("_wutime64");
&__identifier("_imp___wutime64");
&__identifier("asctime");
&__identifier("_imp__asctime");
&__identifier("asctime_s");
&__identifier("_imp__asctime_s");
&__identifier("clock");
&__identifier("_imp__clock");
&__identifier("strftime");
&__identifier("_imp__strftime");
&__identifier("wcsftime");
&__identifier("_imp__wcsftime");
&__identifier("_abs64");
&__identifier("_imp___abs64");
&__identifier("_byteswap_uint64");
&__identifier("_imp___byteswap_uint64");
&__identifier("_byteswap_ulong");
&__identifier("_imp___byteswap_ulong");
&__identifier("_byteswap_ushort");
&__identifier("_imp___byteswap_ushort");
&__identifier("_lfind");
&__identifier("_imp___lfind");
&__identifier("_lfind_s");
&__identifier("_imp___lfind_s");
&__identifier("_lrotl");
&__identifier("_imp___lrotl");
&__identifier("_lrotr");
&__identifier("_imp___lrotr");
&__identifier("_lsearch");
&__identifier("_imp___lsearch");
&__identifier("_lsearch_s");
&__identifier("_imp___lsearch_s");
&__identifier("_rotl");
&__identifier("_imp___rotl");
&__identifier("_rotl64");
&__identifier("_imp___rotl64");
&__identifier("_rotr");
&__identifier("_imp___rotr");
&__identifier("_rotr64");
&__identifier("_imp___rotr64");
&__identifier("_swab");
&__identifier("_imp___swab");
&__identifier("abs");
&__identifier("_imp__abs");
&__identifier("bsearch");
&__identifier("_imp__bsearch");
&__identifier("bsearch_s");
&__identifier("_imp__bsearch_s");
&__identifier("div");
&__identifier("_imp__div");
&__identifier("imaxabs");
&__identifier("_imp__imaxabs");
&__identifier("imaxdiv");
&__identifier("_imp__imaxdiv");
&__identifier("labs");
&__identifier("_imp__labs");
&__identifier("ldiv");
&__identifier("_imp__ldiv");
&__identifier("llabs");
&__identifier("_imp__llabs");
&__identifier("lldiv");
&__identifier("_imp__lldiv");
&__identifier("qsort");
&__identifier("_imp__qsort");
&__identifier("qsort_s");
&__identifier("_imp__qsort_s");
&__identifier("rand");
&__identifier("_imp__rand");
&__identifier("rand_s");
&__identifier("_imp__rand_s");
&__identifier("srand");
&__identifier("_imp__srand");
}}